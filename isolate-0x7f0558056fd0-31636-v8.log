v8-version,9,7,106,5,0
v8-platform,linux,linux
shared-library,/home/raf/.deno/bin/deno,0x556367011000,0x55636a902000,0
shared-library,/usr/lib/libc-2.33.so,0x7f056c8e3000,0x7f056ca54000,0
shared-library,/usr/lib/libm-2.33.so,0x7f056caaf000,0x7f056cb58000,0
shared-library,/usr/lib/libpthread-2.33.so,0x7f056cbf3000,0x7f056cc09000,0
shared-library,/usr/lib/librt-2.33.so,0x7f056cc14000,0x7f056cc1b000,0
shared-library,/usr/lib/libgcc_s.so.1,0x7f056cc1f000,0x7f056cc34000,0
shared-library,/usr/lib/libdl-2.33.so,0x7f056cc3a000,0x7f056cc3e000,0
shared-library,/usr/lib/ld-2.33.so,0x7f056cc66000,0x7f056cc8b000,0
shared-library,[vdso],0x7fff397ee000,0x7fff397f0000,0
shared-library-end
profiler,begin,1000
tick,0x7f056c96c692,777,0,0x0,6
new,CodeRange,0xb7b00000000,0
tick,0x55636930fa90,1917,0,0x0,6
new,MemoryChunk,0xb7b08000000,262144
tick,0x556369003800,2799,0,0x0,6
tick,0x556368feefa0,3993,0,0x0,6
new,MemoryChunk,0xb7b08040000,262144
new,MemoryChunk,0xb7b08080000,262144
heap-capacity,507344
heap-available,1518652320
tick,0x7f056c9d289c,5142,0,0x0,6
new,MemoryChunk,0xb7b080c0000,262144
tick,0x556369190f3a,6099,0,0x0,6
tick,0x556368c753b6,7185,0,0x0,6
new,MemoryChunk,0xb7b08100000,262144
new,MemoryChunk,0xb7b08140000,262144
new,MemoryChunk,0xb7b08180000,180224
tick,0x556369191551,8278,0,0x0,6
new,MemoryChunk,0xb7b081c0000,262144
new,MemoryChunk,0xb7b08200000,262144
new,MemoryChunk,0xb7b08240000,159744
tick,0x7f056ca46576,9341,0,0x0,6
new,MemoryChunk,0xb7b08280000,262144
new,MemoryChunk,0xb7b00000000,262144
tick,0x556369190ebe,10371,0,0x0,6
code-creation,Builtin,2,11180,0x55636983ce00,800,DeoptimizationEntry_Eager
code-creation,Builtin,2,11203,0x55636983d140,800,DeoptimizationEntry_Soft
code-creation,Builtin,2,11221,0x55636983d480,800,DeoptimizationEntry_Bailout
code-creation,Builtin,2,11231,0x55636983d7c0,800,DeoptimizationEntry_Lazy
code-creation,Builtin,2,11247,0x55636983db00,88,DynamicCheckMapsTrampoline
code-creation,Builtin,2,11256,0x55636983db80,88,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,11266,0x55636983dc00,1372,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,11277,0x55636983e180,464,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,11287,0x55636983e380,652,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,11297,0x55636983e640,220,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,11308,0x55636983e740,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,11325,0x55636983e8c0,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,11351,0x55636983e980,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,11361,0x55636983ea00,296,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,11372,0x55636983eb40,348,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,11383,0x55636983ecc0,388,CallFunction_ReceiverIsAny
code-creation,Builtin,2,11392,0x55636983ee80,120,CallBoundFunction
code-creation,Builtin,2,11402,0x55636983ef00,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,11412,0x55636983efc0,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,11434,0x55636983f080,168,Call_ReceiverIsAny
code-creation,Builtin,2,11450,0x55636983f140,1056,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,11464,0x55636983f580,1048,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,11479,0x55636983f9c0,1136,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,11493,0x55636983fe40,1128,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,11506,0x5563698402c0,1136,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,11518,0x556369840740,1128,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,11530,0x556369840bc0,1004,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,11543,0x556369840fc0,1004,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,11557,0x5563698413c0,1004,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,11569,0x5563698417c0,752,CallProxy
code-creation,Builtin,2,11580,0x556369841ac0,124,CallVarargs
code-creation,Builtin,2,11591,0x556369841b40,980,CallWithSpread
code-creation,Builtin,2,11612,0x556369841f40,2052,CallWithSpread_Baseline
code-creation,Builtin,2,11624,0x556369842780,2012,CallWithSpread_WithFeedback
code-creation,Builtin,2,11636,0x556369842f80,892,CallWithArrayLike
code-creation,Builtin,2,11648,0x556369843300,1912,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,11661,0x556369843a80,124,CallForwardVarargs
code-creation,Builtin,2,11673,0x556369843b00,124,CallFunctionForwardVarargs
code-creation,Builtin,2,11685,0x556369843b80,156,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,11697,0x556369843c40,264,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,11711,0x556369843d80,364,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,11726,0x556369843f00,32,ConstructFunction
code-creation,Builtin,2,11738,0x556369843f40,120,ConstructBoundFunction
code-creation,Builtin,2,11749,0x556369843fc0,28,ConstructedNonConstructable
code-creation,Builtin,2,11762,0x556369844000,108,Construct
code-creation,Builtin,2,11773,0x556369844080,124,ConstructVarargs
code-creation,Builtin,2,11784,0x556369844100,996,ConstructWithSpread
code-creation,Builtin,2,11797,0x556369844500,1788,ConstructWithSpread_Baseline
code-creation,Builtin,2,11807,0x556369844c00,1792,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,11820,0x556369845340,960,ConstructWithArrayLike
code-creation,Builtin,2,11831,0x556369845740,1732,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,11843,0x556369845e40,164,ConstructForwardVarargs
code-creation,Builtin,2,11855,0x556369845f00,164,ConstructFunctionForwardVarargs
code-creation,Builtin,2,11868,0x556369845fc0,828,Construct_Baseline
code-creation,Builtin,2,11881,0x556369846300,836,Construct_WithFeedback
code-creation,Builtin,2,11894,0x556369846680,452,JSConstructStubGeneric
code-creation,Builtin,2,11908,0x556369846880,340,JSBuiltinsConstructStub
code-creation,Builtin,2,11920,0x556369846a00,704,FastNewObject
code-creation,Builtin,2,11932,0x556369846d00,300,FastNewClosure
code-creation,Builtin,2,11945,0x556369846e40,740,ConstructProxy
code-creation,Builtin,2,11958,0x556369847140,196,JSEntry
code-creation,Builtin,2,11970,0x556369847240,196,JSConstructEntry
code-creation,Builtin,2,11982,0x556369847340,196,JSRunMicrotasksEntry
code-creation,Builtin,2,11995,0x556369847440,100,JSEntryTrampoline
code-creation,Builtin,2,12008,0x5563698474c0,100,JSConstructEntryTrampoline
code-creation,Builtin,2,12021,0x556369847540,316,ResumeGeneratorTrampoline
code-creation,Builtin,2,12035,0x556369847680,1168,StringCodePointAt
code-creation,Builtin,2,12048,0x556369847b40,1624,StringFromCodePointAt
code-creation,Builtin,2,12061,0x5563698481c0,568,StringEqual
code-creation,Builtin,2,12073,0x556369848400,300,StringGreaterThan
code-creation,Builtin,2,12085,0x556369848540,300,StringGreaterThanOrEqual
code-creation,Builtin,2,12099,0x556369848680,300,StringLessThan
code-creation,Builtin,2,12111,0x5563698487c0,300,StringLessThanOrEqual
code-creation,Builtin,2,12124,0x556369848900,2568,StringSubstring
code-creation,Builtin,2,12137,0x556369849340,80,OrderedHashTableHealIndex
code-creation,Builtin,2,12150,0x5563698493c0,1196,InterpreterEntryTrampoline
code-creation,Builtin,2,12163,0x556369849880,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,12176,0x556369849900,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,12190,0x556369849980,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,12205,0x556369849a00,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,12218,0x556369849a80,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,12233,0x556369849b00,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,12248,0x556369849b80,92,InterpreterEnterAtBytecode
code-creation,Builtin,2,12261,0x556369849c00,224,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,12275,0x556369849d00,56,InterpreterOnStackReplacement
code-creation,Builtin,2,12289,0x556369849d40,604,BaselineOutOfLinePrologue
code-creation,Builtin,2,12302,0x556369849fc0,60,BaselineOnStackReplacement
code-creation,Builtin,2,12320,0x55636984a000,88,BaselineLeaveFrame
code-creation,Builtin,2,12333,0x55636984a080,236,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,12347,0x55636984a180,244,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,12394,0x55636984a280,208,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,12408,0x55636984a380,1044,CompileLazy
code-creation,Builtin,2,12420,0x55636984a7c0,76,CompileLazyDeoptimizedCode
code-creation,Builtin,2,12433,0x55636984a840,260,InstantiateAsmJs
code-creation,Builtin,2,12446,0x55636984a980,32,NotifyDeoptimized
code-creation,Builtin,2,12459,0x55636984a9c0,48,ContinueToCodeStubBuiltin
code-creation,Builtin,2,12472,0x55636984aa00,56,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,12491,0x55636984aa40,52,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,12505,0x55636984aa80,60,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,12519,0x55636984aac0,292,CallApiCallback
code-creation,Builtin,2,12532,0x55636984ac00,288,CallApiGetter
code-creation,Builtin,2,12544,0x55636984ad40,12,HandleApiCall
code-creation,Builtin,2,12556,0x55636984ad80,12,HandleApiCallAsFunction
code-creation,Builtin,2,12569,0x55636984adc0,12,HandleApiCallAsConstructor
code-creation,Builtin,2,12582,0x55636984ae00,56,AllocateInYoungGeneration
code-creation,Builtin,2,12595,0x55636984ae40,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,12609,0x55636984ae80,56,AllocateInOldGeneration
code-creation,Builtin,2,12622,0x55636984aec0,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,12636,0x55636984af00,444,CopyFastSmiOrObjectElements
code-creation,Builtin,2,12649,0x55636984b0c0,500,GrowFastDoubleElements
code-creation,Builtin,2,12662,0x55636984b2c0,408,GrowFastSmiOrObjectElements
code-creation,Builtin,2,12675,0x55636984b480,404,DebugBreakTrampoline
code-creation,Builtin,2,12688,0x55636984b640,184,ToNumber
code-creation,Builtin,2,12699,0x55636984b700,288,ToNumber_Baseline
code-creation,Builtin,2,12712,0x55636984b840,348,ToNumeric_Baseline
code-creation,Builtin,2,12725,0x55636984b9c0,104,PlainPrimitiveToNumber
code-creation,Builtin,2,12738,0x55636984ba40,216,ToNumberConvertBigInt
code-creation,Builtin,2,12751,0x55636984bb40,136,Typeof
code-creation,Builtin,2,12763,0x55636984bc00,104,BigIntToI64
code-creation,Builtin,2,12775,0x55636984bc80,4,BigIntToI32Pair
code-creation,Builtin,2,12788,0x55636984bcc0,212,I64ToBigInt
code-creation,Builtin,2,12800,0x55636984bdc0,4,I32PairToBigInt
code-creation,Builtin,2,12812,0x55636984be00,116,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,12826,0x55636984be80,4636,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,12840,0x55636984d0c0,16136,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,12853,0x556369851000,14480,KeyedDefineOwnIC_Megamorphic
code-creation,Builtin,2,12867,0x5563698548c0,324,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,12880,0x556369854a40,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,12893,0x556369854ac0,8,LoadIC_StringLength
code-creation,Builtin,2,12906,0x556369854b00,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,12919,0x556369854b40,3376,LoadIC_NoFeedback
code-creation,Builtin,2,12932,0x556369855880,32,StoreGlobalIC_Slow
code-creation,Builtin,2,12945,0x5563698558c0,7648,StoreIC_NoFeedback
code-creation,Builtin,2,12958,0x5563698576c0,6388,StoreOwnIC_NoFeedback
code-creation,Builtin,2,12971,0x556369858fc0,192,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,12984,0x5563698590c0,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,12998,0x556369859140,260,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,13012,0x556369859280,260,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,13030,0x5563698593c0,260,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,13046,0x556369859500,260,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,13061,0x556369859640,14304,StoreFastElementIC_Standard
code-creation,Builtin,2,13075,0x55636985ce40,10016,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,13093,0x55636985f580,13648,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,13108,0x556369862b00,5776,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,13122,0x5563698641c0,8676,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,13136,0x5563698663c0,19864,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,13151,0x55636986b180,8676,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,13166,0x55636986d380,11364,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,13181,0x556369870000,864,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,13194,0x556369870380,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,13207,0x556369870440,68,HasIndexedInterceptorIC
code-creation,Builtin,2,13220,0x5563698704c0,272,DynamicCheckMaps
code-creation,Builtin,2,13233,0x556369870600,228,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,13246,0x556369870700,176,EnqueueMicrotask
code-creation,Builtin,2,13259,0x5563698707c0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,13272,0x556369870800,3824,RunMicrotasks
code-creation,Builtin,2,13283,0x556369871700,2820,HasProperty
code-creation,Builtin,2,13296,0x556369872240,1200,DeleteProperty
code-creation,Builtin,2,13308,0x556369872700,2028,CopyDataProperties
code-creation,Builtin,2,13320,0x556369872f00,9788,SetDataProperties
code-creation,Builtin,2,13333,0x556369875540,28,Abort
code-creation,Builtin,2,13345,0x556369875580,28,AbortCSADcheck
code-creation,Builtin,2,13357,0x5563698755c0,12,EmptyFunction
code-creation,Builtin,2,13369,0x556369875600,12,Illegal
code-creation,Builtin,2,13382,0x556369875640,12,StrictPoisonPillThrower
code-creation,Builtin,2,13394,0x556369875680,12,UnsupportedThrower
code-creation,Builtin,2,13407,0x5563698756c0,60,ReturnReceiver
code-creation,Builtin,2,13420,0x556369875700,36,ArrayConstructor
code-creation,Builtin,2,13432,0x556369875740,400,ArrayConstructorImpl
code-creation,Builtin,2,13444,0x556369875900,204,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,13459,0x556369875a00,204,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,13474,0x556369875b00,168,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,13490,0x556369875bc0,168,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,13505,0x556369875c80,168,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,13520,0x556369875d40,168,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,13539,0x556369875e00,180,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,13556,0x556369875ec0,180,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,13571,0x556369875f80,548,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,13587,0x5563698761c0,512,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,13601,0x556369876400,476,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,13618,0x556369876600,436,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,13633,0x5563698767c0,476,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,13649,0x5563698769c0,436,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,13666,0x556369876b80,480,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,13683,0x556369876d80,444,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,13698,0x556369876f40,56,ArrayNArgumentsConstructor
code-creation,Builtin,2,13708,0x556369876f80,12,ArrayConcat
code-creation,Builtin,2,13719,0x556369876fc0,12,ArrayPrototypeFill
code-creation,Builtin,2,13728,0x556369877000,956,ArrayIncludesSmiOrObject
code-creation,Builtin,2,13739,0x5563698773c0,152,ArrayIncludesPackedDoubles
code-creation,Builtin,2,13755,0x556369877480,228,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,13765,0x556369877580,548,ArrayIncludes
code-creation,Builtin,2,13775,0x5563698777c0,868,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,13785,0x556369877b40,108,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,13795,0x556369877bc0,108,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,13806,0x556369877c40,548,ArrayIndexOf
code-creation,Builtin,2,13815,0x556369877e80,12,ArrayPop
code-creation,Builtin,2,13824,0x556369877ec0,640,ArrayPrototypePop
code-creation,Builtin,2,13833,0x556369878180,12,ArrayPush
code-creation,Builtin,2,13842,0x5563698781c0,2492,ArrayPrototypePush
code-creation,Builtin,2,13852,0x556369878b80,12,ArrayShift
code-creation,Builtin,2,13862,0x556369878bc0,12,ArrayUnshift
code-creation,Builtin,2,13871,0x556369878c00,992,CloneFastJSArray
code-creation,Builtin,2,13882,0x556369879000,2324,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,13895,0x556369879940,996,ExtractFastJSArray
code-creation,Builtin,2,13907,0x556369879d40,248,ArrayPrototypeEntries
code-creation,Builtin,2,13920,0x556369879e40,244,ArrayPrototypeKeys
code-creation,Builtin,2,13931,0x556369879f40,248,ArrayPrototypeValues
code-creation,Builtin,2,13941,0x55636987a040,4656,ArrayIteratorPrototypeNext
code-creation,Builtin,2,13952,0x55636987b280,4376,FlattenIntoArray
code-creation,Builtin,2,13961,0x55636987c3c0,4352,FlatMapIntoArray
code-creation,Builtin,2,13971,0x55636987d500,384,ArrayPrototypeFlat
code-creation,Builtin,2,13981,0x55636987d6c0,436,ArrayPrototypeFlatMap
code-creation,Builtin,2,13991,0x55636987d880,12,ArrayBufferConstructor
code-creation,Builtin,2,14002,0x55636987d8c0,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,14014,0x55636987d900,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,14026,0x55636987d940,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,14037,0x55636987d980,860,AsyncFunctionEnter
code-creation,Builtin,2,14047,0x55636987dd00,140,AsyncFunctionReject
code-creation,Builtin,2,14057,0x55636987ddc0,128,AsyncFunctionResolve
code-creation,Builtin,2,14068,0x55636987de80,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,14080,0x55636987dec0,2908,AsyncFunctionAwaitCaught
code-creation,Builtin,2,14091,0x55636987ea40,2908,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,14103,0x55636987f5c0,168,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,14114,0x55636987f680,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,14126,0x55636987f740,12,BigIntConstructor
code-creation,Builtin,2,14135,0x55636987f780,12,BigIntAsUintN
code-creation,Builtin,2,14146,0x55636987f7c0,12,BigIntAsIntN
code-creation,Builtin,2,14155,0x55636987f800,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,14166,0x55636987f840,12,BigIntPrototypeToString
code-creation,Builtin,2,14177,0x55636987f880,12,BigIntPrototypeValueOf
code-creation,Builtin,2,14187,0x55636987f8c0,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,14198,0x55636987f900,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,14211,0x55636987f940,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,14225,0x55636987f980,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,14237,0x55636987f9c0,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,14248,0x55636987fa00,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,14259,0x55636987fa40,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,14271,0x55636987fa80,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,14282,0x55636987fac0,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,14294,0x55636987fb00,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,14304,0x55636987fb40,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,14315,0x55636987fb80,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,14327,0x55636987fbc0,12,CallSitePrototypeGetThis
code-creation,Builtin,2,14338,0x55636987fc00,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,14348,0x55636987fc40,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,14364,0x55636987fc80,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,14376,0x55636987fcc0,12,CallSitePrototypeIsEval
code-creation,Builtin,2,14386,0x55636987fd00,12,CallSitePrototypeIsNative
code-creation,Builtin,2,14396,0x55636987fd40,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,14407,0x55636987fd80,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,14419,0x55636987fdc0,12,CallSitePrototypeToString
code-creation,Builtin,2,14429,0x55636987fe00,12,ConsoleDebug
code-creation,Builtin,2,14438,0x55636987fe40,12,ConsoleError
code-creation,Builtin,2,14449,0x55636987fe80,12,ConsoleInfo
code-creation,Builtin,2,14458,0x55636987fec0,12,ConsoleLog
code-creation,Builtin,2,14467,0x55636987ff00,12,ConsoleWarn
code-creation,Builtin,2,14476,0x55636987ff40,12,ConsoleDir
code-creation,Builtin,2,14485,0x55636987ff80,12,ConsoleDirXml
code-creation,Builtin,2,14494,0x55636987ffc0,12,ConsoleTable
code-creation,Builtin,2,14504,0x556369880000,12,ConsoleTrace
code-creation,Builtin,2,14514,0x556369880040,12,ConsoleGroup
code-creation,Builtin,2,14523,0x556369880080,12,ConsoleGroupCollapsed
code-creation,Builtin,2,14532,0x5563698800c0,12,ConsoleGroupEnd
code-creation,Builtin,2,14543,0x556369880100,12,ConsoleClear
code-creation,Builtin,2,14551,0x556369880140,12,ConsoleCount
code-creation,Builtin,2,14562,0x556369880180,12,ConsoleCountReset
code-creation,Builtin,2,14571,0x5563698801c0,12,ConsoleAssert
code-creation,Builtin,2,14582,0x556369880200,12,ConsoleProfile
code-creation,Builtin,2,14596,0x556369880240,12,ConsoleProfileEnd
code-creation,Builtin,2,14606,0x556369880280,12,ConsoleTime
code-creation,Builtin,2,14615,0x5563698802c0,12,ConsoleTimeLog
code-creation,Builtin,2,14625,0x556369880300,12,ConsoleTimeEnd
code-creation,Builtin,2,14633,0x556369880340,12,ConsoleTimeStamp
code-creation,Builtin,2,14644,0x556369880380,12,ConsoleContext
code-creation,Builtin,2,14661,0x5563698803c0,12,DataViewConstructor
code-creation,Builtin,2,14675,0x556369880400,12,DateConstructor
code-creation,Builtin,2,14688,0x556369880440,220,DatePrototypeGetDate
code-creation,Builtin,2,14698,0x556369880540,220,DatePrototypeGetDay
code-creation,Builtin,2,14708,0x556369880640,220,DatePrototypeGetFullYear
code-creation,Builtin,2,14720,0x556369880740,220,DatePrototypeGetHours
code-creation,Builtin,2,14731,0x556369880840,200,DatePrototypeGetMilliseconds
code-creation,Builtin,2,14743,0x556369880940,220,DatePrototypeGetMinutes
code-creation,Builtin,2,14755,0x556369880a40,220,DatePrototypeGetMonth
code-creation,Builtin,2,14768,0x556369880b40,220,DatePrototypeGetSeconds
code-creation,Builtin,2,14780,0x556369880c40,124,DatePrototypeGetTime
code-creation,Builtin,2,14792,0x556369880cc0,200,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,14803,0x556369880dc0,200,DatePrototypeGetUTCDate
code-creation,Builtin,2,14810,0x556369880ec0,200,DatePrototypeGetUTCDay
code-creation,Builtin,2,14816,0x556369880fc0,200,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,14823,0x5563698810c0,200,DatePrototypeGetUTCHours
code-creation,Builtin,2,14830,0x5563698811c0,200,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,14838,0x5563698812c0,200,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,14848,0x5563698813c0,200,DatePrototypeGetUTCMonth
code-creation,Builtin,2,14858,0x5563698814c0,200,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,14868,0x5563698815c0,124,DatePrototypeValueOf
code-creation,Builtin,2,14879,0x556369881640,360,DatePrototypeToPrimitive
code-creation,Builtin,2,14889,0x5563698817c0,12,DatePrototypeGetYear
code-creation,Builtin,2,14899,0x556369881800,12,DatePrototypeSetYear
code-creation,Builtin,2,14911,0x556369881840,12,DateNow
code-creation,Builtin,2,14921,0x556369881880,12,DateParse
code-creation,Builtin,2,14932,0x5563698818c0,12,DatePrototypeSetDate
code-creation,Builtin,2,14944,0x556369881900,12,DatePrototypeSetFullYear
code-creation,Builtin,2,14956,0x556369881940,12,DatePrototypeSetHours
code-creation,Builtin,2,14969,0x556369881980,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,14981,0x5563698819c0,12,DatePrototypeSetMinutes
code-creation,Builtin,2,14999,0x556369881a00,12,DatePrototypeSetMonth
code-creation,Builtin,2,15011,0x556369881a40,12,DatePrototypeSetSeconds
code-creation,Builtin,2,15024,0x556369881a80,12,DatePrototypeSetTime
code-creation,Builtin,2,15036,0x556369881ac0,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,15048,0x556369881b00,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,15060,0x556369881b40,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,15074,0x556369881b80,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,15087,0x556369881bc0,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,15098,0x556369881c00,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,15111,0x556369881c40,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,15124,0x556369881c80,12,DatePrototypeToDateString
code-creation,Builtin,2,15137,0x556369881cc0,12,DatePrototypeToISOString
code-creation,Builtin,2,15149,0x556369881d00,12,DatePrototypeToUTCString
code-creation,Builtin,2,15162,0x556369881d40,12,DatePrototypeToString
code-creation,Builtin,2,15174,0x556369881d80,12,DatePrototypeToTimeString
code-creation,Builtin,2,15187,0x556369881dc0,12,DatePrototypeToJson
code-creation,Builtin,2,15199,0x556369881e00,12,DateUTC
code-creation,Builtin,2,15210,0x556369881e40,12,ErrorConstructor
code-creation,Builtin,2,15222,0x556369881e80,12,ErrorCaptureStackTrace
code-creation,Builtin,2,15234,0x556369881ec0,12,ErrorPrototypeToString
code-creation,Builtin,2,15249,0x556369881f00,12,FunctionConstructor
code-creation,Builtin,2,15261,0x556369881f40,80,FunctionPrototypeApply
code-creation,Builtin,2,15272,0x556369881fc0,12,FunctionPrototypeBind
code-creation,Builtin,2,15285,0x556369882000,36,FunctionPrototypeCall
code-creation,Builtin,2,15297,0x556369882040,12,FunctionPrototypeToString
code-creation,Builtin,2,15310,0x556369882080,196,CreateIterResultObject
code-creation,Builtin,2,15322,0x556369882180,828,CreateGeneratorObject
code-creation,Builtin,2,15335,0x5563698824c0,12,GeneratorFunctionConstructor
code-creation,Builtin,2,15348,0x556369882500,392,GeneratorPrototypeNext
code-creation,Builtin,2,15361,0x5563698826c0,392,GeneratorPrototypeReturn
code-creation,Builtin,2,15373,0x556369882880,392,GeneratorPrototypeThrow
code-creation,Builtin,2,15386,0x556369882a40,12,AsyncFunctionConstructor
code-creation,Builtin,2,15398,0x556369882a80,400,SuspendGeneratorBaseline
code-creation,Builtin,2,15411,0x556369882c40,112,ResumeGeneratorBaseline
code-creation,Builtin,2,15423,0x556369882cc0,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,15437,0x556369882d00,12,GlobalDecodeURI
code-creation,Builtin,2,15448,0x556369882d40,12,GlobalDecodeURIComponent
code-creation,Builtin,2,15462,0x556369882d80,12,GlobalEncodeURI
code-creation,Builtin,2,15473,0x556369882dc0,12,GlobalEncodeURIComponent
code-creation,Builtin,2,15486,0x556369882e00,12,GlobalEscape
code-creation,Builtin,2,15497,0x556369882e40,12,GlobalUnescape
code-creation,Builtin,2,15510,0x556369882e80,12,GlobalEval
code-creation,Builtin,2,15521,0x556369882ec0,136,GlobalIsFinite
code-creation,Builtin,2,15533,0x556369882f80,128,GlobalIsNaN
code-creation,Builtin,2,15544,0x556369883040,12,JsonParse
code-creation,Builtin,2,15556,0x556369883080,12,JsonStringify
code-creation,Builtin,2,15567,0x5563698830c0,5032,LoadIC
code-creation,Builtin,2,15577,0x556369884480,4680,LoadIC_Megamorphic
code-creation,Builtin,2,15589,0x556369885700,4912,LoadIC_Noninlined
code-creation,Builtin,2,15601,0x556369886a40,48,LoadICTrampoline
code-creation,Builtin,2,15613,0x556369886a80,24,LoadICBaseline
code-creation,Builtin,2,15624,0x556369886ac0,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,15637,0x556369886b00,8140,LoadSuperIC
code-creation,Builtin,2,15652,0x556369888b00,24,LoadSuperICBaseline
code-creation,Builtin,2,15665,0x556369888b40,8784,KeyedLoadIC
code-creation,Builtin,2,15676,0x55636988adc0,14152,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,15689,0x55636988e540,48,KeyedLoadICTrampoline
code-creation,Builtin,2,15701,0x55636988e580,24,KeyedLoadICBaseline
code-creation,Builtin,2,15713,0x55636988e5c0,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,15731,0x55636988e600,5192,StoreGlobalIC
code-creation,Builtin,2,15743,0x55636988fa80,48,StoreGlobalICTrampoline
code-creation,Builtin,2,15757,0x55636988fac0,24,StoreGlobalICBaseline
code-creation,Builtin,2,15770,0x55636988fb00,5648,StoreIC
code-creation,Builtin,2,15781,0x556369891140,52,StoreICTrampoline
code-creation,Builtin,2,15793,0x556369891180,24,StoreICBaseline
code-creation,Builtin,2,15804,0x5563698911c0,5616,StoreOwnIC
code-creation,Builtin,2,15815,0x5563698927c0,52,StoreOwnICTrampoline
code-creation,Builtin,2,15827,0x556369892800,24,StoreOwnICBaseline
code-creation,Builtin,2,15838,0x556369892840,6108,KeyedStoreIC
code-creation,Builtin,2,15849,0x556369894040,52,KeyedStoreICTrampoline
code-creation,Builtin,2,15862,0x556369894080,24,KeyedStoreICBaseline
code-creation,Builtin,2,15873,0x5563698940c0,6080,KeyedDefineOwnIC
code-creation,Builtin,2,15886,0x5563698958c0,52,KeyedDefineOwnICTrampoline
code-creation,Builtin,2,15898,0x556369895900,24,KeyedDefineOwnICBaseline
code-creation,Builtin,2,15911,0x556369895940,416,StoreInArrayLiteralIC
code-creation,Builtin,2,15923,0x556369895b00,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,15937,0x556369895b40,152,LookupContextBaseline
code-creation,Builtin,2,15948,0x556369895c00,152,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,15962,0x556369895cc0,3584,LoadGlobalIC
code-creation,Builtin,2,15973,0x556369896b00,3564,LoadGlobalICInsideTypeof
code-creation,Builtin,2,15986,0x556369897900,48,LoadGlobalICTrampoline
code-creation,Builtin,2,15998,0x556369897940,24,LoadGlobalICBaseline
code-creation,Builtin,2,16011,0x556369897980,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,16024,0x5563698979c0,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,16036,0x556369897a00,156,LookupGlobalICBaseline
code-creation,Builtin,2,16050,0x556369897ac0,156,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,16063,0x556369897b80,2092,CloneObjectIC
code-creation,Builtin,2,16074,0x5563698983c0,24,CloneObjectICBaseline
code-creation,Builtin,2,16086,0x556369898400,2192,CloneObjectIC_Slow
code-creation,Builtin,2,16098,0x556369898cc0,2936,KeyedHasIC
code-creation,Builtin,2,16110,0x556369899840,24,KeyedHasICBaseline
code-creation,Builtin,2,16122,0x556369899880,2832,KeyedHasIC_Megamorphic
code-creation,Builtin,2,16135,0x55636989a3c0,1476,IterableToList
code-creation,Builtin,2,16146,0x55636989a9c0,1284,IterableToFixedArray
code-creation,Builtin,2,16159,0x55636989af00,804,IterableToListWithSymbolLookup
code-creation,Builtin,2,16171,0x55636989b240,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,16185,0x55636989b280,128,IterableToListMayPreserveHoles
code-creation,Builtin,2,16197,0x55636989b340,1012,IterableToFixedArrayForWasm
code-creation,Builtin,2,16211,0x55636989b740,1672,StringListFromIterable
code-creation,Builtin,2,16223,0x55636989be00,1264,FindOrderedHashMapEntry
code-creation,Builtin,2,16236,0x55636989c300,4348,MapConstructor
code-creation,Builtin,2,16247,0x55636989d400,2044,MapPrototypeSet
code-creation,Builtin,2,16261,0x55636989dc00,1596,MapPrototypeDelete
code-creation,Builtin,2,16273,0x55636989e240,220,MapPrototypeGet
code-creation,Builtin,2,16284,0x55636989e340,168,MapPrototypeHas
code-creation,Builtin,2,16297,0x55636989e400,12,MapPrototypeClear
code-creation,Builtin,2,16308,0x55636989e440,284,MapPrototypeEntries
code-creation,Builtin,2,16321,0x55636989e580,144,MapPrototypeGetSize
code-creation,Builtin,2,16333,0x55636989e640,520,MapPrototypeForEach
code-creation,Builtin,2,16346,0x55636989e880,284,MapPrototypeKeys
code-creation,Builtin,2,16357,0x55636989e9c0,284,MapPrototypeValues
code-creation,Builtin,2,16370,0x55636989eb00,1100,MapIteratorPrototypeNext
code-creation,Builtin,2,16382,0x55636989ef80,1228,MapIteratorToList
code-creation,Builtin,2,16394,0x55636989f480,12,NumberPrototypeToExponential
code-creation,Builtin,2,16406,0x55636989f4c0,12,NumberPrototypeToFixed
code-creation,Builtin,2,16418,0x55636989f500,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,16430,0x55636989f540,12,NumberPrototypeToPrecision
code-creation,Builtin,2,16448,0x55636989f580,336,SameValue
code-creation,Builtin,2,16459,0x55636989f700,200,SameValueNumbersOnly
code-creation,Builtin,2,16472,0x55636989f800,772,Add_Baseline
code-creation,Builtin,2,16483,0x55636989fb40,812,Subtract_Baseline
code-creation,Builtin,2,16494,0x55636989fe80,912,Multiply_Baseline
code-creation,Builtin,2,16505,0x5563698a0240,792,Divide_Baseline
code-creation,Builtin,2,16517,0x5563698a0580,840,Modulus_Baseline
code-creation,Builtin,2,16530,0x5563698a0900,796,Exponentiate_Baseline
code-creation,Builtin,2,16542,0x5563698a0c40,816,BitwiseAnd_Baseline
code-creation,Builtin,2,16554,0x5563698a0f80,820,BitwiseOr_Baseline
code-creation,Builtin,2,16565,0x5563698a12c0,816,BitwiseXor_Baseline
code-creation,Builtin,2,16578,0x5563698a1600,836,ShiftLeft_Baseline
code-creation,Builtin,2,16589,0x5563698a1980,836,ShiftRight_Baseline
code-creation,Builtin,2,16602,0x5563698a1d00,840,ShiftRightLogical_Baseline
code-creation,Builtin,2,16614,0x5563698a2080,696,Add_WithFeedback
code-creation,Builtin,2,16626,0x5563698a2340,764,Subtract_WithFeedback
code-creation,Builtin,2,16638,0x5563698a2640,880,Multiply_WithFeedback
code-creation,Builtin,2,16651,0x5563698a29c0,784,Divide_WithFeedback
code-creation,Builtin,2,16663,0x5563698a2d00,824,Modulus_WithFeedback
code-creation,Builtin,2,16676,0x5563698a3040,752,Exponentiate_WithFeedback
code-creation,Builtin,2,16688,0x5563698a3340,788,BitwiseAnd_WithFeedback
tick,0x7f056c958a9f,16708,0,0x0,6
tick,0x5563691af401,16728,0,0x0,6
tick,0x7f056c9d293f,16739,0,0x0,6
tick,0x7f056c963f41,16749,0,0x0,6
tick,0x7f056c9d293f,16758,0,0x0,6
tick,0x7f056cbffce9,16768,0,0x0,6
code-creation,Builtin,2,16779,0x5563698a3680,780,BitwiseOr_WithFeedback
code-creation,Builtin,2,16796,0x5563698a39c0,788,BitwiseXor_WithFeedback
code-creation,Builtin,2,16807,0x5563698a3d00,800,ShiftLeft_WithFeedback
code-creation,Builtin,2,16817,0x5563698a4040,800,ShiftRight_WithFeedback
code-creation,Builtin,2,16828,0x5563698a4380,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,16840,0x5563698a46c0,1588,Equal_Baseline
code-creation,Builtin,2,16851,0x5563698a4d00,848,StrictEqual_Baseline
code-creation,Builtin,2,16861,0x5563698a5080,1220,LessThan_Baseline
code-creation,Builtin,2,16871,0x5563698a5580,1220,GreaterThan_Baseline
code-creation,Builtin,2,16881,0x5563698a5a80,1220,LessThanOrEqual_Baseline
code-creation,Builtin,2,16892,0x5563698a5f80,1220,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,16902,0x5563698a6480,1560,Equal_WithFeedback
code-creation,Builtin,2,16913,0x5563698a6ac0,884,StrictEqual_WithFeedback
code-creation,Builtin,2,16922,0x5563698a6e40,1204,LessThan_WithFeedback
code-creation,Builtin,2,16933,0x5563698a7300,1204,GreaterThan_WithFeedback
code-creation,Builtin,2,16943,0x5563698a77c0,1204,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,16954,0x5563698a7c80,1204,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,16966,0x5563698a8140,448,BitwiseNot_Baseline
code-creation,Builtin,2,16976,0x5563698a8340,444,Decrement_Baseline
code-creation,Builtin,2,16986,0x5563698a8500,444,Increment_Baseline
code-creation,Builtin,2,16996,0x5563698a86c0,464,Negate_Baseline
code-creation,Builtin,2,17005,0x5563698a88c0,424,BitwiseNot_WithFeedback
code-creation,Builtin,2,17016,0x5563698a8a80,420,Decrement_WithFeedback
code-creation,Builtin,2,17026,0x5563698a8c40,420,Increment_WithFeedback
code-creation,Builtin,2,17037,0x5563698a8e00,444,Negate_WithFeedback
code-creation,Builtin,2,17047,0x5563698a8fc0,268,ObjectAssign
code-creation,Builtin,2,17056,0x5563698a9100,920,ObjectCreate
code-creation,Builtin,2,17071,0x5563698a94c0,12,ObjectDefineGetter
code-creation,Builtin,2,17082,0x5563698a9500,12,ObjectDefineProperties
code-creation,Builtin,2,17093,0x5563698a9540,12,ObjectDefineProperty
code-creation,Builtin,2,17102,0x5563698a9580,12,ObjectDefineSetter
code-creation,Builtin,2,17113,0x5563698a95c0,1568,ObjectEntries
code-creation,Builtin,2,17122,0x5563698a9c00,12,ObjectFreeze
code-creation,Builtin,2,17132,0x5563698a9c40,6088,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,17148,0x5563698ab440,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,17160,0x5563698ab480,612,ObjectGetOwnPropertyNames
code-creation,Builtin,2,17169,0x5563698ab700,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,17181,0x5563698ab740,164,ObjectHasOwn
code-creation,Builtin,2,17189,0x5563698ab800,396,ObjectIs
code-creation,Builtin,2,17199,0x5563698ab9c0,12,ObjectIsFrozen
code-creation,Builtin,2,17208,0x5563698aba00,12,ObjectIsSealed
code-creation,Builtin,2,17218,0x5563698aba40,552,ObjectKeys
code-creation,Builtin,2,17227,0x5563698abc80,12,ObjectLookupGetter
code-creation,Builtin,2,17238,0x5563698abcc0,12,ObjectLookupSetter
code-creation,Builtin,2,17247,0x5563698abd00,2396,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,17258,0x5563698ac680,244,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,17271,0x5563698ac780,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,17283,0x5563698ac7c0,12,ObjectPrototypeGetProto
code-creation,Builtin,2,17294,0x5563698ac800,12,ObjectPrototypeSetProto
code-creation,Builtin,2,17303,0x5563698ac840,12,ObjectSeal
code-creation,Builtin,2,17312,0x5563698ac880,1188,ObjectToString
code-creation,Builtin,2,17321,0x5563698acd40,1308,ObjectValues
code-creation,Builtin,2,17332,0x5563698ad280,312,OrdinaryHasInstance
code-creation,Builtin,2,17341,0x5563698ad3c0,364,InstanceOf
code-creation,Builtin,2,17350,0x5563698ad540,672,InstanceOf_WithFeedback
code-creation,Builtin,2,17360,0x5563698ad800,688,InstanceOf_Baseline
code-creation,Builtin,2,17371,0x5563698adac0,288,ForInEnumerate
code-creation,Builtin,2,17380,0x5563698adc00,144,ForInPrepare
code-creation,Builtin,2,17390,0x5563698adcc0,2768,ForInFilter
code-creation,Builtin,2,17399,0x5563698ae7c0,56,ReflectApply
code-creation,Builtin,2,17408,0x5563698ae800,64,ReflectConstruct
code-creation,Builtin,2,17417,0x5563698ae880,12,ReflectDefineProperty
code-creation,Builtin,2,17428,0x5563698ae8c0,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,17437,0x5563698ae900,12,ReflectOwnKeys
code-creation,Builtin,2,17447,0x5563698ae940,12,ReflectSet
code-creation,Builtin,2,17456,0x5563698ae980,12,RegExpCapture1Getter
code-creation,Builtin,2,17467,0x5563698ae9c0,12,RegExpCapture2Getter
code-creation,Builtin,2,17477,0x5563698aea00,12,RegExpCapture3Getter
code-creation,Builtin,2,17486,0x5563698aea40,12,RegExpCapture4Getter
code-creation,Builtin,2,17497,0x5563698aea80,12,RegExpCapture5Getter
code-creation,Builtin,2,17507,0x5563698aeac0,12,RegExpCapture6Getter
code-creation,Builtin,2,17517,0x5563698aeb00,12,RegExpCapture7Getter
code-creation,Builtin,2,17528,0x5563698aeb40,12,RegExpCapture8Getter
code-creation,Builtin,2,17538,0x5563698aeb80,12,RegExpCapture9Getter
code-creation,Builtin,2,17547,0x5563698aebc0,2292,RegExpConstructor
code-creation,Builtin,2,17558,0x5563698af4c0,12,RegExpInputGetter
code-creation,Builtin,2,17567,0x5563698af500,12,RegExpInputSetter
code-creation,Builtin,2,17578,0x5563698af540,12,RegExpLastMatchGetter
code-creation,Builtin,2,17588,0x5563698af580,12,RegExpLastParenGetter
code-creation,Builtin,2,17598,0x5563698af5c0,12,RegExpLeftContextGetter
code-creation,Builtin,2,17609,0x5563698af600,924,RegExpPrototypeCompile
code-creation,Builtin,2,17619,0x5563698af9c0,12,RegExpPrototypeToString
code-creation,Builtin,2,17629,0x5563698afa00,12,RegExpRightContextGetter
code-creation,Builtin,2,17640,0x5563698afa40,252,RegExpExecAtom
code-creation,Builtin,2,17649,0x5563698afb40,996,RegExpExecInternal
code-creation,Builtin,2,17660,0x5563698aff40,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,17672,0x5563698aff80,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,17685,0x5563698affc0,2776,SetConstructor
code-creation,Builtin,2,17696,0x5563698b0ac0,1376,SetPrototypeHas
code-creation,Builtin,2,17705,0x5563698b1040,1804,SetPrototypeAdd
code-creation,Builtin,2,17714,0x5563698b1780,1552,SetPrototypeDelete
code-creation,Builtin,2,17726,0x5563698b1dc0,12,SetPrototypeClear
code-creation,Builtin,2,17735,0x5563698b1e00,284,SetPrototypeEntries
code-creation,Builtin,2,17745,0x5563698b1f40,144,SetPrototypeGetSize
code-creation,Builtin,2,17766,0x5563698b2000,484,SetPrototypeForEach
code-creation,Builtin,2,17780,0x5563698b2200,284,SetPrototypeValues
code-creation,Builtin,2,17791,0x5563698b2340,1048,SetIteratorPrototypeNext
code-creation,Builtin,2,17804,0x5563698b2780,1180,SetOrSetIteratorToList
code-creation,Builtin,2,17816,0x5563698b2c40,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,17830,0x5563698b2c80,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,17842,0x5563698b2cc0,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,17856,0x5563698b2d00,1316,AtomicsLoad
code-creation,Builtin,2,17867,0x5563698b3240,1008,AtomicsStore
code-creation,Builtin,2,17879,0x5563698b3640,1728,AtomicsExchange
code-creation,Builtin,2,17890,0x5563698b3d40,2140,AtomicsCompareExchange
code-creation,Builtin,2,17903,0x5563698b45c0,1852,AtomicsAdd
code-creation,Builtin,2,17914,0x5563698b4d00,1852,AtomicsSub
code-creation,Builtin,2,17926,0x5563698b5440,1852,AtomicsAnd
code-creation,Builtin,2,17937,0x5563698b5b80,1852,AtomicsOr
code-creation,Builtin,2,17947,0x5563698b62c0,1852,AtomicsXor
code-creation,Builtin,2,17958,0x5563698b6a00,12,AtomicsNotify
code-creation,Builtin,2,17969,0x5563698b6a40,12,AtomicsIsLockFree
code-creation,Builtin,2,17980,0x5563698b6a80,12,AtomicsWait
code-creation,Builtin,2,18000,0x5563698b6ac0,12,AtomicsWaitAsync
code-creation,Builtin,2,18012,0x5563698b6b00,12,StringFromCodePoint
code-creation,Builtin,2,18024,0x5563698b6b40,1472,StringFromCharCode
code-creation,Builtin,2,18036,0x5563698b7140,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,18049,0x5563698b7180,4560,StringPrototypeMatchAll
code-creation,Builtin,2,18060,0x5563698b8380,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,18074,0x5563698b83c0,1300,StringPrototypeReplace
code-creation,Builtin,2,18086,0x5563698b8900,3012,StringPrototypeSplit
code-creation,Builtin,2,18099,0x5563698b9500,12,StringRaw
code-creation,Builtin,2,18109,0x5563698b9540,12,SymbolConstructor
code-creation,Builtin,2,18121,0x5563698b9580,12,SymbolFor
code-creation,Builtin,2,18132,0x5563698b95c0,12,SymbolKeyFor
code-creation,Builtin,2,18143,0x5563698b9600,84,TypedArrayBaseConstructor
code-creation,Builtin,2,18155,0x5563698b9680,260,TypedArrayConstructor
code-creation,Builtin,2,18168,0x5563698b97c0,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,18182,0x5563698b9800,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,18195,0x5563698b9b80,364,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,18207,0x5563698b9d00,600,TypedArrayPrototypeLength
code-creation,Builtin,2,18220,0x5563698b9f80,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,18232,0x5563698b9fc0,12,TypedArrayPrototypeFill
code-creation,Builtin,2,18245,0x5563698ba000,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,18258,0x5563698ba040,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,18271,0x5563698ba080,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,18284,0x5563698ba0c0,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,18297,0x5563698ba100,320,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,18310,0x5563698ba280,10772,TypedArrayPrototypeMap
code-creation,Builtin,2,18323,0x5563698bccc0,820,GenericJSToWasmWrapper
code-creation,Builtin,2,18334,0x5563698bd000,284,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,18348,0x5563698bd140,148,WasmCompileLazy
code-creation,Builtin,2,18359,0x5563698bd200,168,WasmDebugBreak
code-creation,Builtin,2,18371,0x5563698bd2c0,16,WasmOnStackReplace
code-creation,Builtin,2,18383,0x5563698bd300,140,WasmFloat32ToNumber
code-creation,Builtin,2,18395,0x5563698bd3c0,164,WasmFloat64ToNumber
code-creation,Builtin,2,18407,0x5563698bd480,4,WasmI32AtomicWait32
code-creation,Builtin,2,18419,0x5563698bd4c0,4,WasmI64AtomicWait32
code-creation,Builtin,2,18431,0x5563698bd500,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,18444,0x5563698bd540,4584,WeakMapConstructor
code-creation,Builtin,2,18456,0x5563698be740,212,WeakMapLookupHashIndex
code-creation,Builtin,2,18469,0x5563698be840,204,WeakMapGet
code-creation,Builtin,2,18480,0x5563698be940,176,WeakMapPrototypeHas
code-creation,Builtin,2,18503,0x5563698bea00,196,WeakMapPrototypeSet
code-creation,Builtin,2,18515,0x5563698beb00,144,WeakMapPrototypeDelete
code-creation,Builtin,2,18530,0x5563698bebc0,3024,WeakSetConstructor
code-creation,Builtin,2,18542,0x5563698bf7c0,176,WeakSetPrototypeHas
code-creation,Builtin,2,18554,0x5563698bf880,200,WeakSetPrototypeAdd
code-creation,Builtin,2,18567,0x5563698bf980,144,WeakSetPrototypeDelete
code-creation,Builtin,2,18578,0x5563698bfa40,424,WeakCollectionDelete
code-creation,Builtin,2,18591,0x5563698bfc00,832,WeakCollectionSet
code-creation,Builtin,2,18603,0x5563698bff80,312,AsyncGeneratorResolve
code-creation,Builtin,2,18615,0x5563698c00c0,108,AsyncGeneratorReject
code-creation,Builtin,2,18627,0x5563698c0140,2888,AsyncGeneratorYield
code-creation,Builtin,2,18640,0x5563698c0cc0,2960,AsyncGeneratorReturn
code-creation,Builtin,2,18651,0x5563698c1880,308,AsyncGeneratorResumeNext
code-creation,Builtin,2,18664,0x5563698c19c0,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,18677,0x5563698c1a00,1052,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,18690,0x5563698c1e40,1060,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,18704,0x5563698c2280,1060,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,18717,0x5563698c26c0,2876,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,18729,0x5563698c3200,2876,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,18742,0x5563698c3d40,120,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,18755,0x5563698c3dc0,124,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,18768,0x5563698c3e40,124,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,18781,0x5563698c3ec0,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,18793,0x5563698c3f40,116,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,18807,0x5563698c3fc0,124,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,18826,0x5563698c4040,1652,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,18840,0x5563698c46c0,1756,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,18853,0x5563698c4dc0,1772,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,18865,0x5563698c54c0,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,18879,0x5563698c5540,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,18894,0x5563698c5640,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,18909,0x5563698c5740,204,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,18925,0x5563698c5840,396,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,18940,0x5563698c5a00,396,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,18954,0x5563698c5bc0,220,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,18970,0x5563698c5cc0,220,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,18985,0x5563698c5dc0,204,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,19000,0x5563698c5ec0,396,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,19015,0x5563698c6080,396,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,19030,0x5563698c6240,4,DirectCEntry
code-creation,Builtin,2,19041,0x5563698c6280,1124,StringAdd_CheckNone
code-creation,Builtin,2,19054,0x5563698c6700,2608,SubString
code-creation,Builtin,2,19065,0x5563698c7140,16,StackCheck
code-creation,Builtin,2,19076,0x5563698c7180,84,DoubleToI
code-creation,Builtin,2,19087,0x5563698c7200,2424,GetProperty
code-creation,Builtin,2,19098,0x5563698c7b80,2524,GetPropertyWithReceiver
code-creation,Builtin,2,19111,0x5563698c8580,16248,SetProperty
code-creation,Builtin,2,19122,0x5563698cc500,14096,SetPropertyInLiteral
code-creation,Builtin,2,19135,0x5563698cfc40,8,MemCopyUint8Uint8
code-creation,Builtin,2,19147,0x5563698cfc80,8,MemMove
code-creation,Builtin,2,19159,0x5563698cfcc0,12,IsTraceCategoryEnabled
code-creation,Builtin,2,19170,0x5563698cfd00,12,Trace
code-creation,Builtin,2,19186,0x5563698cfd40,12,FinalizationRegistryUnregister
code-creation,Builtin,2,19199,0x5563698cfd80,396,AsyncModuleEvaluate
code-creation,Builtin,2,19211,0x5563698cff40,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,19224,0x5563698cff80,12,CallAsyncModuleRejected
code-creation,Builtin,2,19236,0x5563698cffc0,12,TemporalNowTimeZone
code-creation,Builtin,2,19251,0x5563698d0000,12,TemporalNowInstant
code-creation,Builtin,2,19264,0x5563698d0040,12,TemporalNowPlainDateTime
code-creation,Builtin,2,19276,0x5563698d0080,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,19289,0x5563698d00c0,12,TemporalNowZonedDateTime
code-creation,Builtin,2,19301,0x5563698d0100,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,19314,0x5563698d0140,12,TemporalNowPlainDate
code-creation,Builtin,2,19325,0x5563698d0180,12,TemporalNowPlainDateISO
code-creation,Builtin,2,19338,0x5563698d01c0,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,19350,0x5563698d0200,12,TemporalPlainDateConstructor
code-creation,Builtin,2,19363,0x5563698d0240,12,TemporalPlainDateFrom
code-creation,Builtin,2,19375,0x5563698d0280,12,TemporalPlainDateCompare
code-creation,Builtin,2,19388,0x5563698d02c0,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,19401,0x5563698d0300,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,19414,0x5563698d0340,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,19426,0x5563698d0380,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,19440,0x5563698d03c0,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,19452,0x5563698d0400,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,19466,0x5563698d0440,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,19478,0x5563698d0480,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,19492,0x5563698d04c0,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,19505,0x5563698d0500,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,19518,0x5563698d0540,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,19530,0x5563698d0580,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,19544,0x5563698d05c0,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,19557,0x5563698d0600,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,19571,0x5563698d0640,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,19586,0x5563698d0680,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,19599,0x5563698d06c0,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,19611,0x5563698d0700,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,19625,0x5563698d0740,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,19637,0x5563698d0780,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,19651,0x5563698d07c0,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,19664,0x5563698d0800,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,19677,0x5563698d0840,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,19690,0x5563698d0880,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,19703,0x5563698d08c0,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,19718,0x5563698d0900,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,19730,0x5563698d0940,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,19743,0x5563698d0980,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,19757,0x5563698d09c0,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,19769,0x5563698d0a00,12,TemporalPlainTimeFrom
code-creation,Builtin,2,19783,0x5563698d0a40,12,TemporalPlainTimeCompare
code-creation,Builtin,2,19796,0x5563698d0a80,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,19808,0x5563698d0ac0,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,19821,0x5563698d0b00,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,19834,0x5563698d0b40,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,19847,0x5563698d0b80,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,19866,0x5563698d0bc0,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,19884,0x5563698d0c00,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,19896,0x5563698d0c40,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,19907,0x5563698d0c80,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,19917,0x5563698d0cc0,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,19928,0x5563698d0d00,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,19940,0x5563698d0d40,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,19951,0x5563698d0d80,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,19962,0x5563698d0dc0,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,19972,0x5563698d0e00,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,19980,0x5563698d0e40,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,19987,0x5563698d0e80,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,19994,0x5563698d0ec0,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,20002,0x5563698d0f00,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,20013,0x5563698d0f40,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,20027,0x5563698d0f80,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,20038,0x5563698d0fc0,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,20047,0x5563698d1000,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,20056,0x5563698d1040,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,20067,0x5563698d1080,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,20077,0x5563698d10c0,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,20089,0x5563698d1100,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,20102,0x5563698d1140,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,20113,0x5563698d1180,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,20125,0x5563698d11c0,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,20135,0x5563698d1200,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,20152,0x5563698d1240,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,20166,0x5563698d1280,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,20180,0x5563698d12c0,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,20194,0x5563698d1300,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,20208,0x5563698d1340,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,20222,0x5563698d1380,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,20237,0x5563698d13c0,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,20251,0x5563698d1400,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,20265,0x5563698d1440,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,20281,0x5563698d1480,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,20295,0x5563698d14c0,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,20309,0x5563698d1500,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,20323,0x5563698d1540,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,20337,0x5563698d1580,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,20351,0x5563698d15c0,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,20366,0x5563698d1600,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,20379,0x5563698d1640,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,20393,0x5563698d1680,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,20407,0x5563698d16c0,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,20421,0x5563698d1700,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,20434,0x5563698d1740,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,20448,0x5563698d1780,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,20467,0x5563698d17c0,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,20481,0x5563698d1800,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,20495,0x5563698d1840,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,20509,0x5563698d1880,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,20523,0x5563698d18c0,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,20538,0x5563698d1900,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,20553,0x5563698d1940,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,20567,0x5563698d1980,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,20581,0x5563698d19c0,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,20595,0x5563698d1a00,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,20608,0x5563698d1a40,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,20621,0x5563698d1a80,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,20635,0x5563698d1ac0,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,20649,0x5563698d1b00,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,20662,0x5563698d1b40,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,20676,0x5563698d1b80,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,20690,0x5563698d1bc0,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,20704,0x5563698d1c00,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,20717,0x5563698d1c40,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,20731,0x5563698d1c80,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,20745,0x5563698d1cc0,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,20760,0x5563698d1d00,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,20774,0x5563698d1d40,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,20788,0x5563698d1d80,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,20802,0x5563698d1dc0,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,20817,0x5563698d1e00,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,20832,0x5563698d1e40,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,20847,0x5563698d1e80,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,20862,0x5563698d1ec0,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,20877,0x5563698d1f00,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,20891,0x5563698d1f40,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,20906,0x5563698d1f80,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,20920,0x5563698d1fc0,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,20939,0x5563698d2000,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,20953,0x5563698d2040,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,20967,0x5563698d2080,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,20981,0x5563698d20c0,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,20996,0x5563698d2100,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,21010,0x5563698d2140,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,21023,0x5563698d2180,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,21038,0x5563698d21c0,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,21052,0x5563698d2200,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,21066,0x5563698d2240,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,21080,0x5563698d2280,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,21094,0x5563698d22c0,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,21108,0x5563698d2300,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,21128,0x5563698d2340,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,21142,0x5563698d2380,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,21155,0x5563698d23c0,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,21169,0x5563698d2400,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,21183,0x5563698d2440,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,21197,0x5563698d2480,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,21211,0x5563698d24c0,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,21225,0x5563698d2500,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,21239,0x5563698d2540,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,21253,0x5563698d2580,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,21268,0x5563698d25c0,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,21282,0x5563698d2600,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,21296,0x5563698d2640,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,21311,0x5563698d2680,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,21340,0x5563698d26c0,12,TemporalDurationConstructor
code-creation,Builtin,2,21354,0x5563698d2700,12,TemporalDurationFrom
code-creation,Builtin,2,21366,0x5563698d2740,12,TemporalDurationCompare
code-creation,Builtin,2,21379,0x5563698d2780,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,21392,0x5563698d27c0,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,21405,0x5563698d2800,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,21419,0x5563698d2840,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,21433,0x5563698d2880,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,21446,0x5563698d28c0,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,21461,0x5563698d2900,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,21475,0x5563698d2940,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,21489,0x5563698d2980,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,21503,0x5563698d29c0,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,21516,0x5563698d2a00,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,21529,0x5563698d2a40,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,21543,0x5563698d2a80,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,21556,0x5563698d2ac0,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,21570,0x5563698d2b00,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,21583,0x5563698d2b40,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,21597,0x5563698d2b80,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,21610,0x5563698d2bc0,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,21624,0x5563698d2c00,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,21637,0x5563698d2c40,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,21651,0x5563698d2c80,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,21664,0x5563698d2cc0,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,21678,0x5563698d2d00,12,TemporalInstantConstructor
code-creation,Builtin,2,21691,0x5563698d2d40,12,TemporalInstantFrom
code-creation,Builtin,2,21704,0x5563698d2d80,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,21717,0x5563698d2dc0,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,21731,0x5563698d2e00,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,21745,0x5563698d2e40,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,21759,0x5563698d2e80,12,TemporalInstantCompare
code-creation,Builtin,2,21772,0x5563698d2ec0,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,21786,0x5563698d2f00,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,21800,0x5563698d2f40,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,21814,0x5563698d2f80,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,21833,0x5563698d2fc0,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,21846,0x5563698d3000,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,21861,0x5563698d3040,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,21874,0x5563698d3080,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,21888,0x5563698d30c0,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,21901,0x5563698d3100,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,21915,0x5563698d3140,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,21929,0x5563698d3180,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,21942,0x5563698d31c0,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,21956,0x5563698d3200,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,21973,0x5563698d3240,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,21987,0x5563698d3280,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,22001,0x5563698d32c0,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,22015,0x5563698d3300,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,22030,0x5563698d3340,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,22049,0x5563698d3380,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,22062,0x5563698d33c0,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,22076,0x5563698d3400,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,22090,0x5563698d3440,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,22104,0x5563698d3480,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,22118,0x5563698d34c0,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,22133,0x5563698d3500,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,22147,0x5563698d3540,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,22160,0x5563698d3580,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,22174,0x5563698d35c0,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,22189,0x5563698d3600,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,22203,0x5563698d3640,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,22217,0x5563698d3680,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,22231,0x5563698d36c0,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,22245,0x5563698d3700,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,22259,0x5563698d3740,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,22273,0x5563698d3780,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,22287,0x5563698d37c0,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,22302,0x5563698d3800,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,22315,0x5563698d3840,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,22329,0x5563698d3880,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,22343,0x5563698d38c0,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,22357,0x5563698d3900,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,22371,0x5563698d3940,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,22384,0x5563698d3980,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,22398,0x5563698d39c0,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,22412,0x5563698d3a00,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,22425,0x5563698d3a40,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,22439,0x5563698d3a80,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,22454,0x5563698d3ac0,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,22468,0x5563698d3b00,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,22482,0x5563698d3b40,12,TemporalTimeZoneFrom
code-creation,Builtin,2,22495,0x5563698d3b80,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,22508,0x5563698d3bc0,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,22527,0x5563698d3c00,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,22541,0x5563698d3c40,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,22555,0x5563698d3c80,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,22569,0x5563698d3cc0,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,22584,0x5563698d3d00,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,22598,0x5563698d3d40,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,22615,0x5563698d3d80,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,22627,0x5563698d3dc0,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,22640,0x5563698d3e00,12,TemporalCalendarConstructor
code-creation,Builtin,2,22654,0x5563698d3e40,12,TemporalCalendarFrom
code-creation,Builtin,2,22667,0x5563698d3e80,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,22680,0x5563698d3ec0,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,22694,0x5563698d3f00,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,22708,0x5563698d3f40,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,22723,0x5563698d3f80,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,22736,0x5563698d3fc0,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,22750,0x5563698d4000,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,22763,0x5563698d4040,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,22776,0x5563698d4080,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,22790,0x5563698d40c0,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,22804,0x5563698d4100,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,22818,0x5563698d4140,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,22831,0x5563698d4180,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,22844,0x5563698d41c0,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,22858,0x5563698d4200,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,22873,0x5563698d4240,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,22886,0x5563698d4280,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,22901,0x5563698d42c0,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,22914,0x5563698d4300,12,TemporalCalendarPrototypeFields
code-creation,Builtin,2,22928,0x5563698d4340,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,22942,0x5563698d4380,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,22956,0x5563698d43c0,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,22969,0x5563698d4400,268,AggregateErrorConstructor
code-creation,Builtin,2,22982,0x5563698d4540,876,ArrayPrototypeAt
code-creation,Builtin,2,22995,0x5563698d48c0,672,ArrayPrototypeConcat
code-creation,Builtin,2,23007,0x5563698d4b80,5880,ArrayPrototypeCopyWithin
code-creation,Builtin,2,23019,0x5563698d6280,224,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,23033,0x5563698d6380,628,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,23046,0x5563698d6600,3452,ArrayEveryLoopContinuation
code-creation,Builtin,2,23059,0x5563698d7380,1540,ArrayEvery
code-creation,Builtin,2,23070,0x5563698d79c0,292,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,23084,0x5563698d7b00,1000,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,23098,0x5563698d7f00,3796,ArrayFilterLoopContinuation
code-creation,Builtin,2,23112,0x5563698d8e00,4436,ArrayFilter
code-creation,Builtin,2,23124,0x5563698d9f80,208,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,23142,0x5563698da080,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,23156,0x5563698da0c0,332,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,23171,0x5563698da240,540,ArrayFindLoopContinuation
code-creation,Builtin,2,23184,0x5563698da480,1516,ArrayPrototypeFind
code-creation,Builtin,2,23201,0x5563698daa80,208,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,23215,0x5563698dab80,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,23229,0x5563698dabc0,332,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,23245,0x5563698dad40,532,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,23258,0x5563698daf80,1512,ArrayPrototypeFindIndex
code-creation,Builtin,2,23271,0x5563698db580,460,ArrayFindLastLoopContinuation
code-creation,Builtin,2,23284,0x5563698db780,1748,ArrayPrototypeFindLast
code-creation,Builtin,2,23298,0x5563698dbe80,452,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,23311,0x5563698dc080,1744,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,23325,0x5563698dc780,224,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,23339,0x5563698dc880,224,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,23353,0x5563698dc980,3348,ArrayForEachLoopContinuation
code-creation,Builtin,2,23366,0x5563698dd6c0,1376,ArrayForEach
code-creation,Builtin,2,23377,0x5563698ddc40,3520,ArrayFrom
code-creation,Builtin,2,23390,0x5563698dea40,164,ArrayIsArray
code-creation,Builtin,2,23402,0x5563698deb00,436,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,23416,0x5563698decc0,48,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,23430,0x5563698ded00,144,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,23443,0x5563698dedc0,336,ConvertToLocaleString
code-creation,Builtin,2,23457,0x5563698def40,768,JoinStackPush
code-creation,Builtin,2,23469,0x5563698df280,276,JoinStackPop
code-creation,Builtin,2,23481,0x5563698df3c0,6836,ArrayPrototypeJoin
code-creation,Builtin,2,23494,0x5563698e0e80,5512,ArrayPrototypeToLocaleString
code-creation,Builtin,2,23507,0x5563698e2440,244,ArrayPrototypeToString
code-creation,Builtin,2,23520,0x5563698e2540,6068,TypedArrayPrototypeJoin
code-creation,Builtin,2,23534,0x5563698e3d00,4716,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,23547,0x5563698e4f80,3868,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,23560,0x5563698e5ec0,264,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,23575,0x5563698e6000,260,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,23589,0x5563698e6140,548,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,23603,0x5563698e6380,3416,ArrayMapLoopContinuation
code-creation,Builtin,2,23615,0x5563698e7100,3916,ArrayMap
code-creation,Builtin,2,23626,0x5563698e8080,844,ArrayOf
code-creation,Builtin,2,23637,0x5563698e8400,452,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,23652,0x5563698e8600,208,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,23666,0x5563698e8700,208,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,23680,0x5563698e8800,3352,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,23694,0x5563698e9540,2080,ArrayReduceRight
code-creation,Builtin,2,23707,0x5563698e9d80,184,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,23721,0x5563698e9e40,208,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,23737,0x5563698e9f40,208,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,23751,0x5563698ea040,3412,ArrayReduceLoopContinuation
code-creation,Builtin,2,23764,0x5563698eadc0,1656,ArrayReduce
code-creation,Builtin,2,23775,0x5563698eb440,3352,ArrayPrototypeReverse
code-creation,Builtin,2,23787,0x5563698ec180,3676,ArrayPrototypeShift
code-creation,Builtin,2,23800,0x5563698ed000,5324,ArrayPrototypeSlice
code-creation,Builtin,2,23812,0x5563698ee500,224,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,23825,0x5563698ee600,592,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,23839,0x5563698ee880,3444,ArraySomeLoopContinuation
code-creation,Builtin,2,23852,0x5563698ef600,1520,ArraySome
code-creation,Builtin,2,23864,0x5563698efc00,15052,ArrayPrototypeSplice
code-creation,Builtin,2,23877,0x5563698f3700,3452,ArrayPrototypeUnshift
code-creation,Builtin,2,23889,0x5563698f4480,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,23907,0x5563698f4600,340,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,23920,0x5563698f4780,212,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,23934,0x5563698f4880,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,23948,0x5563698f4a00,212,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,23962,0x5563698f4b00,104,ArrayBufferIsView
code-creation,Builtin,2,23974,0x5563698f4b80,396,ToInteger
code-creation,Builtin,2,23985,0x5563698f4d40,3236,FastCreateDataProperty
code-creation,Builtin,2,23998,0x5563698f5a00,648,CheckSameObject
code-creation,Builtin,2,24009,0x5563698f5cc0,960,BooleanConstructor
code-creation,Builtin,2,24022,0x5563698f60c0,164,BooleanPrototypeToString
code-creation,Builtin,2,24035,0x5563698f6180,156,BooleanPrototypeValueOf
code-creation,Builtin,2,24047,0x5563698f6240,1184,BigIntAddNoThrow
code-creation,Builtin,2,24060,0x5563698f6700,1276,BigIntAdd
code-creation,Builtin,2,24072,0x5563698f6c00,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,24085,0x5563698f70c0,1276,BigIntSubtract
code-creation,Builtin,2,24097,0x5563698f75c0,272,BigIntUnaryMinus
code-creation,Builtin,2,24109,0x5563698f7700,1364,ToString
code-creation,Builtin,2,24121,0x5563698f7c80,156,StringPrototypeToString
code-creation,Builtin,2,24134,0x5563698f7d40,156,StringPrototypeValueOf
code-creation,Builtin,2,24147,0x5563698f7e00,2548,StringToList
code-creation,Builtin,2,24160,0x5563698f8800,1072,StringPrototypeCharAt
code-creation,Builtin,2,24173,0x5563698f8c40,740,StringPrototypeCharCodeAt
code-creation,Builtin,2,24186,0x5563698f8f40,1352,StringPrototypeCodePointAt
code-creation,Builtin,2,24199,0x5563698f94c0,420,StringPrototypeConcat
code-creation,Builtin,2,24212,0x5563698f9680,1040,StringConstructor
code-creation,Builtin,2,24225,0x5563698f9ac0,1432,StringAddConvertLeft
code-creation,Builtin,2,24244,0x5563698fa080,1484,StringAddConvertRight
code-creation,Builtin,2,24257,0x5563698fa680,856,StringCharAt
code-creation,Builtin,2,24270,0x5563698faa00,16,FastNewClosureBaseline
code-creation,Builtin,2,24283,0x5563698faa40,200,FastNewFunctionContextEval
code-creation,Builtin,2,24296,0x5563698fab40,196,FastNewFunctionContextFunction
code-creation,Builtin,2,24309,0x5563698fac40,260,CreateRegExpLiteral
code-creation,Builtin,2,24322,0x5563698fad80,1120,CreateShallowArrayLiteral
code-creation,Builtin,2,24335,0x5563698fb200,496,CreateEmptyArrayLiteral
code-creation,Builtin,2,24348,0x5563698fb400,1892,CreateShallowObjectLiteral
code-creation,Builtin,2,24361,0x5563698fbb80,400,ObjectConstructor
code-creation,Builtin,2,24374,0x5563698fbd40,184,CreateEmptyLiteralObject
code-creation,Builtin,2,24386,0x5563698fbe00,552,NumberConstructor
code-creation,Builtin,2,24398,0x5563698fc040,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,24412,0x5563698fc080,60,StringToNumber
code-creation,Builtin,2,24425,0x5563698fc0c0,188,NonNumberToNumber
code-creation,Builtin,2,24437,0x5563698fc180,244,NonNumberToNumeric
code-creation,Builtin,2,24449,0x5563698fc280,36,ToNumeric
code-creation,Builtin,2,24462,0x5563698fc2c0,1204,NumberToString
code-creation,Builtin,2,24474,0x5563698fc780,104,ToBoolean
code-creation,Builtin,2,24486,0x5563698fc800,100,ToBooleanForBaselineJump
code-creation,Builtin,2,24499,0x5563698fc880,740,ToLength
code-creation,Builtin,2,24511,0x5563698fcb80,1340,ToName
code-creation,Builtin,2,24523,0x5563698fd0c0,788,ToObject
code-creation,Builtin,2,24535,0x5563698fd400,232,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,24548,0x5563698fd500,232,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,24562,0x5563698fd600,232,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,24575,0x5563698fd700,348,OrdinaryToPrimitive_Number
code-creation,Builtin,2,24589,0x5563698fd880,348,OrdinaryToPrimitive_String
code-creation,Builtin,2,24601,0x5563698fda00,236,FastConsoleAssert
code-creation,Builtin,2,24614,0x5563698fdb00,156,DataViewPrototypeGetBuffer
code-creation,Builtin,2,24628,0x5563698fdbc0,356,DataViewPrototypeGetByteLength
code-creation,Builtin,2,24641,0x5563698fdd40,356,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,24666,0x5563698fdec0,596,DataViewPrototypeGetUint8
code-creation,Builtin,2,24680,0x5563698fe140,596,DataViewPrototypeGetInt8
code-creation,Builtin,2,24693,0x5563698fe3c0,656,DataViewPrototypeGetUint16
code-creation,Builtin,2,24707,0x5563698fe680,652,DataViewPrototypeGetInt16
code-creation,Builtin,2,24720,0x5563698fe940,816,DataViewPrototypeGetUint32
code-creation,Builtin,2,24734,0x5563698fec80,812,DataViewPrototypeGetInt32
code-creation,Builtin,2,24747,0x5563698fefc0,864,DataViewPrototypeGetFloat32
code-creation,Builtin,2,24760,0x5563698ff340,924,DataViewPrototypeGetFloat64
code-creation,Builtin,2,24773,0x5563698ff700,972,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,24787,0x5563698ffb00,996,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,24801,0x5563698fff00,956,DataViewPrototypeSetUint8
code-creation,Builtin,2,24818,0x5563699002c0,956,DataViewPrototypeSetInt8
code-creation,Builtin,2,24831,0x556369900680,1060,DataViewPrototypeSetUint16
code-creation,Builtin,2,24845,0x556369900ac0,1060,DataViewPrototypeSetInt16
code-creation,Builtin,2,24858,0x556369900f00,1100,DataViewPrototypeSetUint32
code-creation,Builtin,2,24871,0x556369901380,1100,DataViewPrototypeSetInt32
code-creation,Builtin,2,24884,0x556369901800,1064,DataViewPrototypeSetFloat32
code-creation,Builtin,2,24898,0x556369901c40,1128,DataViewPrototypeSetFloat64
code-creation,Builtin,2,24911,0x5563699020c0,968,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,24925,0x5563699024c0,968,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,24938,0x5563699028c0,856,FinalizationRegistryConstructor
code-creation,Builtin,2,24952,0x556369902c40,1176,FinalizationRegistryRegister
code-creation,Builtin,2,24965,0x556369903100,692,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,24979,0x5563699033c0,356,FunctionPrototypeHasInstance
code-creation,Builtin,2,24993,0x556369903540,952,FastFunctionPrototypeBind
code-creation,Builtin,2,25006,0x556369903900,88,IncBlockCounter
code-creation,Builtin,2,25018,0x556369903980,236,GetTemplateObject
code-creation,Builtin,2,25031,0x556369903a80,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,25044,0x556369903ac0,88,ForInNext
code-creation,Builtin,2,25056,0x556369903b40,144,GetImportMetaObjectBaseline
code-creation,Builtin,2,25069,0x556369903c00,112,GetIteratorWithFeedback
code-creation,Builtin,2,25082,0x556369903c80,96,GetIteratorBaseline
code-creation,Builtin,2,25095,0x556369903d00,276,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,25109,0x556369903e40,1164,CallIteratorWithFeedback
code-creation,Builtin,2,25122,0x556369904300,292,MathAbs
code-creation,Builtin,2,25133,0x556369904440,428,MathCeil
code-creation,Builtin,2,25145,0x556369904600,432,MathFloor
code-creation,Builtin,2,25156,0x5563699047c0,488,MathRound
code-creation,Builtin,2,25167,0x5563699049c0,428,MathTrunc
code-creation,Builtin,2,25178,0x556369904b80,368,MathPow
code-creation,Builtin,2,25190,0x556369904d00,412,MathMax
code-creation,Builtin,2,25202,0x556369904ec0,416,MathMin
code-creation,Builtin,2,25214,0x556369905080,324,MathAcos
code-creation,Builtin,2,25225,0x556369905200,324,MathAcosh
code-creation,Builtin,2,25238,0x556369905380,324,MathAsin
code-creation,Builtin,2,25247,0x556369905500,324,MathAsinh
code-creation,Builtin,2,25259,0x556369905680,324,MathAtan
code-creation,Builtin,2,25271,0x556369905800,416,MathAtan2
code-creation,Builtin,2,25281,0x5563699059c0,324,MathAtanh
code-creation,Builtin,2,25292,0x556369905b40,324,MathCbrt
code-creation,Builtin,2,25301,0x556369905cc0,260,MathClz32
code-creation,Builtin,2,25312,0x556369905e00,324,MathCos
code-creation,Builtin,2,25325,0x556369905f80,324,MathCosh
code-creation,Builtin,2,25341,0x556369906100,324,MathExp
code-creation,Builtin,2,25351,0x556369906280,324,MathExpm1
code-creation,Builtin,2,25361,0x556369906400,272,MathFround
code-creation,Builtin,2,25371,0x556369906540,388,MathImul
code-creation,Builtin,2,25384,0x556369906700,324,MathLog
code-creation,Builtin,2,25395,0x556369906880,324,MathLog1p
code-creation,Builtin,2,25405,0x556369906a00,324,MathLog10
code-creation,Builtin,2,25421,0x556369906b80,324,MathLog2
code-creation,Builtin,2,25432,0x556369906d00,324,MathSin
code-creation,Builtin,2,25442,0x556369906e80,152,MathSign
code-creation,Builtin,2,25452,0x556369906f40,324,MathSinh
code-creation,Builtin,2,25463,0x5563699070c0,268,MathSqrt
code-creation,Builtin,2,25473,0x556369907200,324,MathTan
code-creation,Builtin,2,25484,0x556369907380,324,MathTanh
code-creation,Builtin,2,25495,0x556369907500,1052,MathHypot
code-creation,Builtin,2,25508,0x556369907940,328,MathRandom
code-creation,Builtin,2,25518,0x556369907ac0,2924,NumberPrototypeToString
code-creation,Builtin,2,25531,0x556369908640,152,NumberIsFinite
code-creation,Builtin,2,25543,0x556369908700,344,NumberIsInteger
code-creation,Builtin,2,25555,0x556369908880,124,NumberIsNaN
code-creation,Builtin,2,25566,0x556369908900,376,NumberIsSafeInteger
code-creation,Builtin,2,25579,0x556369908a80,156,NumberPrototypeValueOf
code-creation,Builtin,2,25592,0x556369908b40,192,NumberParseFloat
code-creation,Builtin,2,25603,0x556369908c40,332,ParseInt
code-creation,Builtin,2,25615,0x556369908dc0,84,NumberParseInt
code-creation,Builtin,2,25627,0x556369908e40,864,Add
code-creation,Builtin,2,25639,0x5563699091c0,420,Subtract
code-creation,Builtin,2,25651,0x556369909380,688,Multiply
code-creation,Builtin,2,25663,0x556369909640,516,Divide
code-creation,Builtin,2,25675,0x556369909880,640,Modulus
code-creation,Builtin,2,25686,0x556369909b40,532,Exponentiate
code-creation,Builtin,2,25699,0x556369909d80,428,Negate
code-creation,Builtin,2,25711,0x556369909f40,104,BitwiseNot
code-creation,Builtin,2,25723,0x556369909fc0,104,Decrement
code-creation,Builtin,2,25735,0x55636990a040,104,Increment
code-creation,Builtin,2,25747,0x55636990a0c0,500,ShiftLeft
code-creation,Builtin,2,25759,0x55636990a2c0,500,ShiftRight
code-creation,Builtin,2,25772,0x55636990a4c0,508,ShiftRightLogical
code-creation,Builtin,2,25784,0x55636990a6c0,472,BitwiseAnd
code-creation,Builtin,2,25796,0x55636990a8c0,472,BitwiseOr
code-creation,Builtin,2,25810,0x55636990aac0,472,BitwiseXor
code-creation,Builtin,2,25822,0x55636990acc0,784,LessThan
code-creation,Builtin,2,25834,0x55636990b000,784,LessThanOrEqual
code-creation,Builtin,2,25846,0x55636990b340,784,GreaterThan
code-creation,Builtin,2,25858,0x55636990b680,784,GreaterThanOrEqual
code-creation,Builtin,2,25871,0x55636990b9c0,872,Equal
code-creation,Builtin,2,25882,0x55636990bd40,352,StrictEqual
code-creation,Builtin,2,25894,0x55636990bec0,3356,ObjectFromEntries
code-creation,Builtin,2,25907,0x55636990cc00,804,CreateObjectWithoutProperties
code-creation,Builtin,2,25920,0x55636990cf40,148,ObjectIsExtensible
code-creation,Builtin,2,25933,0x55636990d000,152,ObjectPreventExtensions
code-creation,Builtin,2,25945,0x55636990d0c0,144,ObjectGetPrototypeOf
code-creation,Builtin,2,25958,0x55636990d180,308,ObjectSetPrototypeOf
code-creation,Builtin,2,25971,0x55636990d2c0,80,ObjectPrototypeToString
code-creation,Builtin,2,25984,0x55636990d340,100,ObjectPrototypeValueOf
code-creation,Builtin,2,25997,0x55636990d3c0,176,ObjectPrototypeToLocaleString
code-creation,Builtin,2,26010,0x55636990d480,920,FulfillPromise
code-creation,Builtin,2,26022,0x55636990d840,1012,RejectPromise
code-creation,Builtin,2,26034,0x55636990dc40,2456,NewPromiseCapability
code-creation,Builtin,2,26047,0x55636990e600,172,PromiseCapabilityDefaultReject
code-creation,Builtin,2,26061,0x55636990e6c0,156,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,26074,0x55636990e780,1496,PerformPromiseThen
code-creation,Builtin,2,26087,0x55636990ed80,680,PromiseReject
code-creation,Builtin,2,26100,0x55636990f040,304,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,26113,0x55636990f180,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,26127,0x55636990f200,4772,PromiseAll
code-creation,Builtin,2,26139,0x5563699104c0,5060,PromiseAllSettled
code-creation,Builtin,2,26151,0x5563699118c0,1180,PromiseAllResolveElementClosure
code-creation,Builtin,2,26163,0x556369911d80,1508,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,26177,0x556369912380,1516,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,26195,0x556369912980,1228,PromiseAnyRejectElementClosure
code-creation,Builtin,2,26209,0x556369912e80,2460,PromiseAny
code-creation,Builtin,2,26221,0x556369913840,3040,PromiseConstructor
code-creation,Builtin,2,26233,0x556369914440,308,PromisePrototypeCatch
code-creation,Builtin,2,26246,0x556369914580,92,PromiseValueThunkFinally
code-creation,Builtin,2,26260,0x556369914600,84,PromiseThrowerFinally
code-creation,Builtin,2,26273,0x556369914680,932,PromiseCatchFinally
code-creation,Builtin,2,26286,0x556369914a40,932,PromiseThenFinally
code-creation,Builtin,2,26298,0x556369914e00,1728,PromisePrototypeFinally
code-creation,Builtin,2,26312,0x556369915500,1432,PromiseRace
code-creation,Builtin,2,26324,0x556369915ac0,324,PromiseFulfillReactionJob
code-creation,Builtin,2,26339,0x556369915c40,444,PromiseRejectReactionJob
code-creation,Builtin,2,26353,0x556369915e00,156,PromiseResolveTrampoline
code-creation,Builtin,2,26365,0x556369915ec0,696,PromiseResolve
code-creation,Builtin,2,26377,0x556369916180,752,ResolvePromise
code-creation,Builtin,2,26389,0x556369916480,2368,PromisePrototypeThen
code-creation,Builtin,2,26402,0x556369916e00,1136,PromiseResolveThenableJob
code-creation,Builtin,2,26415,0x556369917280,452,ProxyConstructor
code-creation,Builtin,2,26432,0x556369917480,1864,ProxyDeleteProperty
code-creation,Builtin,2,26445,0x556369917c00,2256,ProxyGetProperty
code-creation,Builtin,2,26458,0x556369918500,1088,ProxyGetPrototypeOf
code-creation,Builtin,2,26469,0x556369918980,1780,ProxyHasProperty
code-creation,Builtin,2,26483,0x556369919080,804,ProxyIsExtensible
code-creation,Builtin,2,26495,0x5563699193c0,836,ProxyPreventExtensions
code-creation,Builtin,2,26508,0x556369919740,1144,ProxyRevocable
code-creation,Builtin,2,26520,0x556369919bc0,132,ProxyRevoke
code-creation,Builtin,2,26531,0x556369919c80,2352,ProxySetProperty
code-creation,Builtin,2,26544,0x55636991a5c0,1368,ProxySetPrototypeOf
code-creation,Builtin,2,26557,0x55636991ab40,208,ReflectIsExtensible
code-creation,Builtin,2,26570,0x55636991ac40,220,ReflectPreventExtensions
code-creation,Builtin,2,26583,0x55636991ad40,184,ReflectGetPrototypeOf
code-creation,Builtin,2,26596,0x55636991ae00,296,ReflectSetPrototypeOf
code-creation,Builtin,2,26608,0x55636991af40,292,ReflectGet
code-creation,Builtin,2,26619,0x55636991b080,156,ReflectDeleteProperty
code-creation,Builtin,2,26632,0x55636991b140,144,ReflectHas
code-creation,Builtin,2,26644,0x55636991b200,5284,RegExpPrototypeExecSlow
code-creation,Builtin,2,26657,0x55636991c6c0,5264,RegExpPrototypeExec
code-creation,Builtin,2,26671,0x55636991db80,2420,RegExpPrototypeMatchAll
code-creation,Builtin,2,26683,0x55636991e500,9820,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,26697,0x556369920b80,9056,RegExpMatchFast
code-creation,Builtin,2,26709,0x556369922f00,3772,RegExpPrototypeMatch
code-creation,Builtin,2,26722,0x556369923dc0,6480,RegExpReplace
code-creation,Builtin,2,26735,0x556369925740,540,RegExpPrototypeReplace
code-creation,Builtin,2,26747,0x556369925980,1408,RegExpSearchFast
code-creation,Builtin,2,26760,0x556369925f40,1692,RegExpPrototypeSearch
code-creation,Builtin,2,26773,0x556369926600,208,RegExpPrototypeSourceGetter
code-creation,Builtin,2,26786,0x556369926700,5864,RegExpSplit
code-creation,Builtin,2,26799,0x556369927e00,504,RegExpPrototypeSplit
code-creation,Builtin,2,26811,0x556369928000,2332,RegExpPrototypeTest
code-creation,Builtin,2,26824,0x556369928940,1348,RegExpPrototypeTestFast
code-creation,Builtin,2,26837,0x556369928ec0,240,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,26850,0x556369928fc0,240,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,26865,0x5563699290c0,240,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,26879,0x5563699291c0,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,26893,0x5563699292c0,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,26905,0x5563699293c0,240,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,26918,0x5563699294c0,264,RegExpPrototypeStickyGetter
code-creation,Builtin,2,26936,0x556369929600,264,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,26950,0x556369929740,2352,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,26963,0x55636992a080,1552,StringPrototypeAt
code-creation,Builtin,2,26975,0x55636992a6c0,3108,StringPrototypeEndsWith
code-creation,Builtin,2,26988,0x55636992b300,500,CreateHTML
code-creation,Builtin,2,27002,0x55636992b500,168,StringPrototypeAnchor
code-creation,Builtin,2,27015,0x55636992b5c0,132,StringPrototypeBig
code-creation,Builtin,2,27028,0x55636992b680,132,StringPrototypeBlink
code-creation,Builtin,2,27040,0x55636992b740,132,StringPrototypeBold
code-creation,Builtin,2,27052,0x55636992b800,184,StringPrototypeFontcolor
code-creation,Builtin,2,27066,0x55636992b8c0,184,StringPrototypeFontsize
code-creation,Builtin,2,27079,0x55636992b980,132,StringPrototypeFixed
code-creation,Builtin,2,27091,0x55636992ba40,132,StringPrototypeItalics
code-creation,Builtin,2,27104,0x55636992bb00,184,StringPrototypeLink
code-creation,Builtin,2,27117,0x55636992bbc0,132,StringPrototypeSmall
code-creation,Builtin,2,27129,0x55636992bc80,132,StringPrototypeStrike
code-creation,Builtin,2,27142,0x55636992bd40,132,StringPrototypeSub
code-creation,Builtin,2,27155,0x55636992be00,132,StringPrototypeSup
code-creation,Builtin,2,27168,0x55636992bec0,1052,StringPrototypeIncludes
code-creation,Builtin,2,27181,0x55636992c300,640,StringPrototypeIndexOf
code-creation,Builtin,2,27194,0x55636992c5c0,348,StringPrototypeIterator
code-creation,Builtin,2,27207,0x55636992c740,2112,StringIteratorPrototypeNext
code-creation,Builtin,2,27221,0x55636992cfc0,1400,StringPrototypeMatch
code-creation,Builtin,2,27234,0x55636992d540,1400,StringPrototypeSearch
code-creation,Builtin,2,27247,0x55636992dac0,832,StringPrototypePadStart
code-creation,Builtin,2,27260,0x55636992de40,836,StringPrototypePadEnd
code-creation,Builtin,2,27273,0x55636992e1c0,124,StringRepeat
code-creation,Builtin,2,27285,0x55636992e240,392,StringPrototypeRepeat
code-creation,Builtin,2,27298,0x55636992e400,11712,StringPrototypeReplaceAll
code-creation,Builtin,2,27311,0x556369931200,3452,StringPrototypeSlice
code-creation,Builtin,2,27324,0x556369931f80,3148,StringPrototypeStartsWith
code-creation,Builtin,2,27337,0x556369932c00,3392,StringPrototypeSubstr
code-creation,Builtin,2,27350,0x556369933980,3328,StringPrototypeSubstring
code-creation,Builtin,2,27363,0x5563699346c0,7016,StringPrototypeTrim
code-creation,Builtin,2,27376,0x556369936240,6380,StringPrototypeTrimStart
code-creation,Builtin,2,27389,0x556369937b40,5932,StringPrototypeTrimEnd
code-creation,Builtin,2,27403,0x556369939280,164,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,27417,0x556369939340,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,27430,0x556369939400,176,SymbolPrototypeToString
code-creation,Builtin,2,27443,0x5563699394c0,156,SymbolPrototypeValueOf
code-creation,Builtin,2,27456,0x556369939580,1164,TypedArrayPrototypeAt
code-creation,Builtin,2,27469,0x556369939a40,10400,CreateTypedArray
code-creation,Builtin,2,27481,0x55636993c300,1716,TypedArrayPrototypeEvery
code-creation,Builtin,2,27494,0x55636993c9c0,424,TypedArrayPrototypeEntries
code-creation,Builtin,2,27507,0x55636993cb80,4348,TypedArrayPrototypeFilter
code-creation,Builtin,2,27521,0x55636993dc80,1708,TypedArrayPrototypeFind
code-creation,Builtin,2,27538,0x55636993e340,1708,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,27552,0x55636993ea00,1740,TypedArrayPrototypeFindLast
code-creation,Builtin,2,27565,0x55636993f100,1740,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,27578,0x55636993f800,1556,TypedArrayPrototypeForEach
code-creation,Builtin,2,27592,0x55636993fe40,2336,TypedArrayFrom
code-creation,Builtin,2,27604,0x556369940780,416,TypedArrayPrototypeKeys
code-creation,Builtin,2,27617,0x556369940940,980,TypedArrayOf
code-creation,Builtin,2,27629,0x556369940d40,1684,TypedArrayPrototypeReduce
code-creation,Builtin,2,27642,0x556369941400,1688,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,27656,0x556369941ac0,2776,TypedArrayPrototypeSet
code-creation,Builtin,2,27669,0x5563699425c0,4020,TypedArrayPrototypeSlice
code-creation,Builtin,2,27686,0x556369943580,1708,TypedArrayPrototypeSome
code-creation,Builtin,2,27698,0x556369943c40,1116,TypedArrayMergeSort
code-creation,Builtin,2,27711,0x5563699440c0,1548,TypedArrayPrototypeSort
code-creation,Builtin,2,27723,0x556369944700,2852,TypedArrayPrototypeSubArray
code-creation,Builtin,2,27736,0x556369945240,424,TypedArrayPrototypeValues
code-creation,Builtin,2,27749,0x556369945400,992,WeakRefConstructor
code-creation,Builtin,2,27762,0x556369945800,184,WeakRefDeref
code-creation,Builtin,2,27773,0x5563699458c0,716,NewSloppyArgumentsElements
code-creation,Builtin,2,27786,0x556369945bc0,324,NewStrictArgumentsElements
code-creation,Builtin,2,27799,0x556369945d40,340,NewRestArgumentsElements
code-creation,Builtin,2,27812,0x556369945ec0,1436,FastNewSloppyArguments
code-creation,Builtin,2,27825,0x556369946480,540,FastNewStrictArguments
code-creation,Builtin,2,27838,0x5563699466c0,592,FastNewRestArguments
code-creation,Builtin,2,27851,0x556369946940,724,StringSlowFlatten
code-creation,Builtin,2,27863,0x556369946c40,2112,StringIndexOf
code-creation,Builtin,2,27876,0x5563699474c0,1864,TestTurbofanType
code-creation,Builtin,2,27888,0x556369947c40,152,CheckTurbofanType
code-creation,Builtin,2,27901,0x556369947d00,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,27914,0x556369947d40,8,TestHelperPlus1
code-creation,Builtin,2,27926,0x556369947d80,8,TestHelperPlus2
code-creation,Builtin,2,27941,0x556369947dc0,96,NewSmiBox
code-creation,Builtin,2,27952,0x556369947e40,16,ReturnTwoValues
code-creation,Builtin,2,27964,0x556369947e80,32,Load_FastSmiElements_0
code-creation,Builtin,2,27977,0x556369947ec0,32,Load_FastObjectElements_0
code-creation,Builtin,2,27995,0x556369947f00,148,Load_FastDoubleElements_0
code-creation,Builtin,2,28009,0x556369947fc0,32,Store_FastSmiElements_0
code-creation,Builtin,2,28023,0x556369948000,104,Store_FastObjectElements_0
code-creation,Builtin,2,28036,0x556369948080,48,Store_FastDoubleElements_0
code-creation,Builtin,2,28049,0x5563699480c0,40,Delete_FastSmiElements_0
code-creation,Builtin,2,28060,0x556369948100,40,Delete_FastObjectElements_0
code-creation,Builtin,2,28073,0x556369948140,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,28087,0x556369948180,320,SortCompareDefault
code-creation,Builtin,2,28099,0x556369948300,96,SortCompareUserFn
code-creation,Builtin,2,28112,0x556369948380,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,28126,0x5563699483c0,304,Copy
code-creation,Builtin,2,28138,0x556369948500,5768,MergeAt
code-creation,Builtin,2,28150,0x556369949bc0,832,GallopLeft
code-creation,Builtin,2,28162,0x556369949f40,832,GallopRight
code-creation,Builtin,2,28174,0x55636994a2c0,3724,ArrayTimSort
code-creation,Builtin,2,28187,0x55636994b180,2124,ArrayPrototypeSort
code-creation,Builtin,2,28199,0x55636994ba00,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,28212,0x55636994ba80,120,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,28226,0x55636994bb00,72,WasmTaggedToFloat64
code-creation,Builtin,2,28238,0x55636994bb80,72,WasmMemoryGrow
code-creation,Builtin,2,28250,0x55636994bc00,100,WasmTableInit
code-creation,Builtin,2,28263,0x55636994bc80,100,WasmTableCopy
code-creation,Builtin,2,28275,0x55636994bd00,84,WasmTableFill
code-creation,Builtin,2,28288,0x55636994bd80,68,WasmTableGrow
code-creation,Builtin,2,28300,0x55636994be00,176,WasmTableGet
code-creation,Builtin,2,28312,0x55636994bec0,260,WasmTableSet
code-creation,Builtin,2,28324,0x55636994c000,104,WasmRefFunc
code-creation,Builtin,2,28337,0x55636994c080,144,WasmAllocateFixedArray
code-creation,Builtin,2,28349,0x55636994c140,44,WasmThrow
code-creation,Builtin,2,28362,0x55636994c180,56,WasmRethrow
code-creation,Builtin,2,28374,0x55636994c1c0,44,WasmRethrowExplicitContext
code-creation,Builtin,2,28387,0x55636994c200,48,WasmTriggerTierUp
code-creation,Builtin,2,28400,0x55636994c240,32,WasmStackGuard
code-creation,Builtin,2,28412,0x55636994c280,32,WasmStackOverflow
code-creation,Builtin,2,28425,0x55636994c2c0,44,WasmTraceMemory
code-creation,Builtin,2,28437,0x55636994c300,32,WasmTraceEnter
code-creation,Builtin,2,28454,0x55636994c340,44,WasmTraceExit
code-creation,Builtin,2,28468,0x55636994c380,368,WasmAllocateJSArray
code-creation,Builtin,2,28480,0x55636994c500,64,WasmAllocateRtt
code-creation,Builtin,2,28492,0x55636994c580,64,WasmAllocateFreshRtt
code-creation,Builtin,2,28505,0x55636994c600,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,28518,0x55636994c680,136,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,28532,0x55636994c740,172,WasmAllocateArray_InitZero
code-creation,Builtin,2,28545,0x55636994c800,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,28558,0x55636994c8c0,140,WasmArrayCopyWithChecks
code-creation,Builtin,2,28571,0x55636994c980,76,WasmArrayCopy
code-creation,Builtin,2,28583,0x55636994ca00,252,WasmAllocateObjectWrapper
code-creation,Builtin,2,28596,0x55636994cb00,52,WasmSubtypeCheck
code-creation,Builtin,2,28609,0x55636994cb40,112,WasmInt32ToNumber
code-creation,Builtin,2,28625,0x55636994cbc0,116,WasmUint32ToNumber
code-creation,Builtin,2,28638,0x55636994cc40,140,UintPtr53ToNumber
code-creation,Builtin,2,28650,0x55636994cd00,96,WasmAtomicNotify
code-creation,Builtin,2,28664,0x55636994cd80,116,WasmI32AtomicWait64
code-creation,Builtin,2,28677,0x55636994ce00,116,WasmI64AtomicWait64
code-creation,Builtin,2,28690,0x55636994ce80,1696,CallRefIC
code-creation,Builtin,2,28701,0x55636994d540,616,WasmGetOwnProperty
code-creation,Builtin,2,28713,0x55636994d7c0,44,WasmTrap
code-creation,Builtin,2,28724,0x55636994d800,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,28737,0x55636994d840,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,28750,0x55636994d880,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,28764,0x55636994d8c0,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,28777,0x55636994d900,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,28790,0x55636994d940,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,28803,0x55636994d980,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,28817,0x55636994d9c0,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,28830,0x55636994da00,12,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,28843,0x55636994da40,12,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,28856,0x55636994da80,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,28870,0x55636994dac0,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,28883,0x55636994db00,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,28896,0x55636994db40,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,28909,0x55636994db80,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,28922,0x55636994dbc0,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,28935,0x55636994dc00,168,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,28949,0x55636994dcc0,120,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,28964,0x55636994dd40,112,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,28978,0x55636994ddc0,108,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,28992,0x55636994de40,20,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,29008,0x55636994de80,200,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,29022,0x55636994df80,228,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,29036,0x55636994e080,20,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,29050,0x55636994e0c0,20,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,29063,0x55636994e100,20,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,29077,0x55636994e140,20,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,29091,0x55636994e180,124,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,29104,0x55636994e200,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,29117,0x55636994e240,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,29132,0x55636994e280,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,29146,0x55636994e2c0,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,29160,0x55636994e300,2868,Load_GenericElementsAccessor_0
code-creation,Builtin,2,29178,0x55636994ee40,28,Store_GenericElementsAccessor_0
code-creation,Builtin,2,29192,0x55636994ee80,32,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,29205,0x55636994eec0,120,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,29219,0x55636994ef40,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,29233,0x55636994f000,176,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,29247,0x55636994f0c0,112,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,29260,0x55636994f140,28,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,29274,0x55636994f180,152,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,29288,0x55636994f240,108,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,29302,0x55636994f2c0,24,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,29316,0x55636994f300,148,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,29328,0x55636994f3c0,20,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,29341,0x55636994f400,20,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,29355,0x55636994f440,600,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,29370,0x55636994f6c0,200,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,29383,0x55636994f7c0,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,29398,0x55636994f800,192,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,29412,0x55636994f900,228,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,29426,0x55636994fa00,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,29440,0x55636994fa40,192,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,29454,0x55636994fb40,20,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,29468,0x55636994fb80,20,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,29482,0x55636994fbc0,176,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,29496,0x55636994fc80,20,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,29510,0x55636994fcc0,20,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,29524,0x55636994fd00,176,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,29537,0x55636994fdc0,20,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,29551,0x55636994fe00,20,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,29565,0x55636994fe40,176,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,29581,0x55636994ff00,20,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,29594,0x55636994ff40,20,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,29609,0x55636994ff80,176,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,29622,0x556369950040,124,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,29636,0x5563699500c0,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,29651,0x556369950180,176,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,29664,0x556369950240,12,CollatorConstructor
code-creation,Builtin,2,29677,0x556369950280,12,CollatorInternalCompare
code-creation,Builtin,2,29691,0x5563699502c0,12,CollatorPrototypeCompare
code-creation,Builtin,2,29704,0x556369950300,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,29717,0x556369950340,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,29735,0x556369950380,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,29749,0x5563699503c0,12,DatePrototypeToLocaleString
code-creation,Builtin,2,29762,0x556369950400,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,29775,0x556369950440,12,DateTimeFormatConstructor
code-creation,Builtin,2,29788,0x556369950480,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,29802,0x5563699504c0,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,29815,0x556369950500,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,29829,0x556369950540,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,29848,0x556369950580,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,29862,0x5563699505c0,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,29876,0x556369950600,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,29889,0x556369950640,12,DisplayNamesConstructor
code-creation,Builtin,2,29902,0x556369950680,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,29915,0x5563699506c0,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,29929,0x556369950700,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,29942,0x556369950740,12,IntlGetCanonicalLocales
code-creation,Builtin,2,29955,0x556369950780,12,IntlSupportedValuesOf
code-creation,Builtin,2,29968,0x5563699507c0,12,ListFormatConstructor
code-creation,Builtin,2,29981,0x556369950800,224,ListFormatPrototypeFormat
code-creation,Builtin,2,29994,0x556369950900,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,30008,0x556369950a00,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,30022,0x556369950a40,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,30035,0x556369950a80,12,LocaleConstructor
code-creation,Builtin,2,30047,0x556369950ac0,12,LocalePrototypeBaseName
code-creation,Builtin,2,30060,0x556369950b00,12,LocalePrototypeCalendar
code-creation,Builtin,2,30073,0x556369950b40,12,LocalePrototypeCalendars
code-creation,Builtin,2,30086,0x556369950b80,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,30099,0x556369950bc0,12,LocalePrototypeCollation
code-creation,Builtin,2,30112,0x556369950c00,12,LocalePrototypeCollations
code-creation,Builtin,2,30126,0x556369950c40,12,LocalePrototypeHourCycle
code-creation,Builtin,2,30140,0x556369950c80,12,LocalePrototypeHourCycles
code-creation,Builtin,2,30154,0x556369950cc0,12,LocalePrototypeLanguage
code-creation,Builtin,2,30167,0x556369950d00,12,LocalePrototypeMaximize
code-creation,Builtin,2,30180,0x556369950d40,12,LocalePrototypeMinimize
code-creation,Builtin,2,30193,0x556369950d80,12,LocalePrototypeNumeric
code-creation,Builtin,2,30206,0x556369950dc0,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,30219,0x556369950e00,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,30232,0x556369950e40,12,LocalePrototypeRegion
code-creation,Builtin,2,30245,0x556369950e80,12,LocalePrototypeScript
code-creation,Builtin,2,30258,0x556369950ec0,12,LocalePrototypeTextInfo
code-creation,Builtin,2,30272,0x556369950f00,12,LocalePrototypeTimeZones
code-creation,Builtin,2,30285,0x556369950f40,12,LocalePrototypeToString
code-creation,Builtin,2,30298,0x556369950f80,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,30311,0x556369950fc0,12,NumberFormatConstructor
code-creation,Builtin,2,30324,0x556369951000,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,30338,0x556369951040,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,30351,0x556369951080,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,30365,0x5563699510c0,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,30379,0x556369951100,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,30392,0x556369951140,12,PluralRulesConstructor
code-creation,Builtin,2,30408,0x556369951180,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,30422,0x5563699511c0,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,30435,0x556369951200,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,30448,0x556369951240,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,30461,0x556369951280,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,30475,0x5563699512c0,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,30489,0x556369951300,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,30503,0x556369951340,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,30517,0x556369951380,12,SegmenterConstructor
code-creation,Builtin,2,30529,0x5563699513c0,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,30543,0x556369951400,12,SegmenterPrototypeSegment
tick,0x7f056c9d293f,30590,0,0x0,6
tick,0x556368b7ff27,30619,0,0x0,6
tick,0x7f056c958b5c,30631,0,0x0,6
tick,0x7f056c958b33,30641,0,0x0,6
tick,0x7f056c963f30,30651,0,0x0,6
tick,0x7f056c958abc,30661,0,0x0,6
tick,0x7f056c958b33,30672,0,0x0,6
tick,0x556368b7fe23,30681,0,0x0,6
tick,0x7f056c9d293f,30691,0,0x0,6
tick,0x556368b8000e,30700,0,0x0,6
tick,0x7f056c9a9964,30710,0,0x0,6
tick,0x556368b903f6,30720,0,0x0,6
code-creation,Builtin,2,30731,0x556369951440,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,30749,0x556369951480,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,30761,0x5563699514c0,12,SegmentsPrototypeContaining
code-creation,Builtin,2,30771,0x556369951500,12,SegmentsPrototypeIterator
code-creation,Builtin,2,30780,0x556369951540,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,30797,0x556369951580,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,30811,0x5563699515c0,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,30825,0x556369951600,204,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,30839,0x556369951700,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,30853,0x556369951740,660,StringToLowerCaseIntl
code-creation,Builtin,2,30868,0x556369951a00,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,30882,0x556369951a40,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,30896,0x556369951a80,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,30910,0x556369951ac0,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,30924,0x556369951b00,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,30938,0x556369951b40,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,30952,0x556369951b80,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,30967,0x556369951bc0,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,30981,0x556369951c00,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,30994,0x556369951c40,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,31009,0x556369951c80,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,31023,0x556369951cc0,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,31038,0x556369951d00,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,31052,0x556369951d40,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,31066,0x556369951d80,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,31081,0x556369951dc0,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,31095,0x556369951e00,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,31109,0x556369951e40,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,31124,0x556369951e80,12,V8BreakIteratorConstructor
code-creation,Builtin,2,31138,0x556369951ec0,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,31151,0x556369951f00,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,31165,0x556369951f40,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,31179,0x556369951f80,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,31193,0x556369951fc0,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,31207,0x556369952000,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,31221,0x556369952040,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,31235,0x556369952080,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,31248,0x5563699520c0,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,31262,0x556369952100,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,31276,0x556369952140,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,31290,0x556369952180,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,31305,0x5563699521c0,24,Wide
tick,0x7f056c9d293f,31326,0,0x0,6
code-creation,BytecodeHandler,0,31343,0x556369952200,24,ExtraWide
code-creation,BytecodeHandler,0,31359,0x556369952240,100,DebugBreakWide
code-creation,BytecodeHandler,0,31371,0x5563699522c0,100,DebugBreakExtraWide
code-creation,BytecodeHandler,0,31382,0x556369952340,160,DebugBreak0
code-creation,BytecodeHandler,0,31397,0x556369952400,100,DebugBreak1
code-creation,BytecodeHandler,0,31407,0x556369952480,100,DebugBreak2
code-creation,BytecodeHandler,0,31418,0x556369952500,100,DebugBreak3
code-creation,BytecodeHandler,0,31428,0x556369952580,100,DebugBreak4
code-creation,BytecodeHandler,0,31439,0x556369952600,100,DebugBreak5
code-creation,BytecodeHandler,0,31452,0x556369952680,100,DebugBreak6
code-creation,BytecodeHandler,0,31463,0x556369952700,32,Ldar
code-creation,BytecodeHandler,0,31472,0x556369952740,60,LdaZero
code-creation,BytecodeHandler,0,31483,0x556369952780,60,LdaSmi
code-creation,BytecodeHandler,0,31492,0x5563699527c0,64,LdaUndefined
code-creation,BytecodeHandler,0,31503,0x556369952840,64,LdaNull
code-creation,BytecodeHandler,0,31512,0x5563699528c0,64,LdaTheHole
code-creation,BytecodeHandler,0,31523,0x556369952940,24,LdaTrue
code-creation,BytecodeHandler,0,31532,0x556369952980,24,LdaFalse
code-creation,BytecodeHandler,0,31543,0x5563699529c0,72,LdaConstant
code-creation,BytecodeHandler,0,31553,0x556369952a40,132,LdaContextSlot
code-creation,BytecodeHandler,0,31563,0x556369952b00,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,31575,0x556369952bc0,84,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,31586,0x556369952c40,84,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,31599,0x556369952cc0,32,Star
code-creation,BytecodeHandler,0,31607,0x556369952d00,40,Mov
code-creation,BytecodeHandler,0,31618,0x556369952d40,40,PushContext
code-creation,BytecodeHandler,0,31628,0x556369952d80,36,PopContext
code-creation,BytecodeHandler,0,31639,0x556369952dc0,52,TestReferenceEqual
code-creation,BytecodeHandler,0,31649,0x556369952e00,60,TestUndetectable
code-creation,BytecodeHandler,0,31660,0x556369952e40,44,TestNull
code-creation,BytecodeHandler,0,31669,0x556369952e80,44,TestUndefined
code-creation,BytecodeHandler,0,31680,0x556369952ec0,376,TestTypeOf
code-creation,BytecodeHandler,0,31689,0x556369953040,6092,LdaGlobal
code-creation,BytecodeHandler,0,31700,0x556369954840,4852,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,31711,0x556369955b40,168,StaGlobal
code-creation,BytecodeHandler,0,31720,0x556369955c00,164,StaContextSlot
code-creation,BytecodeHandler,0,31731,0x556369955cc0,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,31742,0x556369955d40,124,LdaLookupSlot
code-creation,BytecodeHandler,0,31751,0x556369955dc0,260,LdaLookupContextSlot
code-creation,BytecodeHandler,0,31762,0x556369955f00,5068,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,31773,0x556369957300,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,31784,0x556369957380,260,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,31797,0x5563699574c0,5032,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,31809,0x556369958880,204,StaLookupSlot
code-creation,BytecodeHandler,0,31819,0x556369958980,5520,LdaNamedProperty
code-creation,BytecodeHandler,0,31830,0x556369959f40,196,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,31841,0x55636995a040,208,LdaKeyedProperty
code-creation,BytecodeHandler,0,31861,0x55636995a140,188,LdaModuleVariable
code-creation,BytecodeHandler,0,31875,0x55636995a200,308,StaModuleVariable
code-creation,BytecodeHandler,0,31887,0x55636995a340,180,StaNamedProperty
code-creation,BytecodeHandler,0,31901,0x55636995a400,180,StaNamedOwnProperty
code-creation,BytecodeHandler,0,31915,0x55636995a4c0,168,StaKeyedProperty
code-creation,BytecodeHandler,0,31928,0x55636995a580,168,StaKeyedPropertyAsDefine
code-creation,BytecodeHandler,0,31942,0x55636995a640,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,31955,0x55636995a700,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,31969,0x55636995a800,164,CollectTypeProfile
code-creation,BytecodeHandler,0,31982,0x55636995a8c0,992,Add
code-creation,BytecodeHandler,0,31994,0x55636995acc0,1048,Sub
code-creation,BytecodeHandler,0,32006,0x55636995b100,1144,Mul
code-creation,BytecodeHandler,0,32019,0x55636995b580,948,Div
code-creation,BytecodeHandler,0,32031,0x55636995b940,1012,Mod
code-creation,BytecodeHandler,0,32049,0x55636995bd40,960,Exp
code-creation,BytecodeHandler,0,32062,0x55636995c140,992,BitwiseOr
code-creation,BytecodeHandler,0,32075,0x55636995c540,988,BitwiseXor
code-creation,BytecodeHandler,0,32087,0x55636995c940,988,BitwiseAnd
code-creation,BytecodeHandler,0,32100,0x55636995cd40,988,ShiftLeft
code-creation,BytecodeHandler,0,32112,0x55636995d140,988,ShiftRight
code-creation,BytecodeHandler,0,32125,0x55636995d540,992,ShiftRightLogical
code-creation,BytecodeHandler,0,32138,0x55636995d940,916,AddSmi
code-creation,BytecodeHandler,0,32150,0x55636995dd00,980,SubSmi
code-creation,BytecodeHandler,0,32162,0x55636995e100,1048,MulSmi
code-creation,BytecodeHandler,0,32175,0x55636995e540,936,DivSmi
code-creation,BytecodeHandler,0,32187,0x55636995e900,932,ModSmi
code-creation,BytecodeHandler,0,32199,0x55636995ecc0,848,ExpSmi
code-creation,BytecodeHandler,0,32211,0x55636995f040,600,BitwiseOrSmi
code-creation,BytecodeHandler,0,32227,0x55636995f2c0,600,BitwiseXorSmi
code-creation,BytecodeHandler,0,32240,0x55636995f540,600,BitwiseAndSmi
code-creation,BytecodeHandler,0,32253,0x55636995f7c0,600,ShiftLeftSmi
code-creation,BytecodeHandler,0,32266,0x55636995fa40,600,ShiftRightSmi
code-creation,BytecodeHandler,0,32279,0x55636995fcc0,604,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,32292,0x55636995ff40,628,Inc
code-creation,BytecodeHandler,0,32303,0x5563699601c0,632,Dec
code-creation,BytecodeHandler,0,32315,0x556369960440,616,Negate
code-creation,BytecodeHandler,0,32327,0x5563699606c0,596,BitwiseNot
code-creation,BytecodeHandler,0,32340,0x556369960940,124,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,32353,0x5563699609c0,44,LogicalNot
code-creation,BytecodeHandler,0,32365,0x556369960a00,204,TypeOf
code-creation,BytecodeHandler,0,32378,0x556369960b00,112,DeletePropertyStrict
code-creation,BytecodeHandler,0,32391,0x556369960b80,108,DeletePropertySloppy
code-creation,BytecodeHandler,0,32405,0x556369960c00,44,GetSuperConstructor
code-creation,BytecodeHandler,0,32418,0x556369960c40,1160,CallAnyReceiver
code-creation,BytecodeHandler,0,32433,0x556369961100,1160,CallProperty
code-creation,BytecodeHandler,0,32446,0x5563699615c0,1092,CallProperty0
code-creation,BytecodeHandler,0,32459,0x556369961a40,1104,CallProperty1
code-creation,BytecodeHandler,0,32472,0x556369961ec0,1116,CallProperty2
code-creation,BytecodeHandler,0,32485,0x556369962340,1092,CallUndefinedReceiver
code-creation,BytecodeHandler,0,32499,0x5563699627c0,1120,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,32512,0x556369962c40,1072,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,32526,0x556369963080,1088,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,32539,0x556369963500,1160,CallWithSpread
code-creation,BytecodeHandler,0,32551,0x5563699639c0,128,CallRuntime
code-creation,BytecodeHandler,0,32564,0x556369963a80,160,CallRuntimeForPair
code-creation,BytecodeHandler,0,32577,0x556369963b40,92,CallJSRuntime
code-creation,BytecodeHandler,0,32590,0x556369963bc0,1228,InvokeIntrinsic
code-creation,BytecodeHandler,0,32603,0x5563699640c0,1064,Construct
code-creation,BytecodeHandler,0,32615,0x556369964500,548,ConstructWithSpread
code-creation,BytecodeHandler,0,32628,0x556369964740,1848,TestEqual
code-creation,BytecodeHandler,0,32640,0x556369964e80,1036,TestEqualStrict
code-creation,BytecodeHandler,0,32653,0x5563699652c0,1316,TestLessThan
code-creation,BytecodeHandler,0,32666,0x556369965800,1316,TestGreaterThan
code-creation,BytecodeHandler,0,32679,0x556369965d40,1316,TestLessThanOrEqual
code-creation,BytecodeHandler,0,32693,0x556369966280,1316,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,32706,0x5563699667c0,864,TestInstanceOf
code-creation,BytecodeHandler,0,32719,0x556369966b40,164,TestIn
code-creation,BytecodeHandler,0,32732,0x556369966c00,108,ToName
code-creation,BytecodeHandler,0,32744,0x556369966c80,208,ToNumber
code-creation,BytecodeHandler,0,32756,0x556369966d80,224,ToNumeric
code-creation,BytecodeHandler,0,32769,0x556369966e80,108,ToObject
code-creation,BytecodeHandler,0,32782,0x556369966f00,116,ToString
code-creation,BytecodeHandler,0,32809,0x556369966f80,424,CreateRegExpLiteral
code-creation,BytecodeHandler,0,32823,0x556369967140,1452,CreateArrayLiteral
code-creation,BytecodeHandler,0,32836,0x556369967700,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,32850,0x556369967780,804,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,32864,0x556369967ac0,2240,CreateObjectLiteral
code-creation,BytecodeHandler,0,32877,0x5563699683c0,228,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,32891,0x5563699684c0,176,CloneObject
code-creation,BytecodeHandler,0,32903,0x556369968580,216,GetTemplateObject
code-creation,BytecodeHandler,0,32922,0x556369968680,336,CreateClosure
code-creation,BytecodeHandler,0,32934,0x556369968800,128,CreateBlockContext
code-creation,BytecodeHandler,0,32947,0x5563699688c0,140,CreateCatchContext
code-creation,BytecodeHandler,0,32960,0x556369968980,264,CreateFunctionContext
code-creation,BytecodeHandler,0,32973,0x556369968ac0,268,CreateEvalContext
code-creation,BytecodeHandler,0,32988,0x556369968c00,140,CreateWithContext
code-creation,BytecodeHandler,0,33002,0x556369968cc0,1604,CreateMappedArguments
code-creation,BytecodeHandler,0,33015,0x556369969340,568,CreateUnmappedArguments
code-creation,BytecodeHandler,0,33029,0x556369969580,620,CreateRestParameter
code-creation,BytecodeHandler,0,33043,0x556369969800,420,JumpLoop
code-creation,BytecodeHandler,0,33055,0x5563699699c0,44,Jump
code-creation,BytecodeHandler,0,33067,0x556369969a00,64,JumpConstant
code-creation,BytecodeHandler,0,33080,0x556369969a80,88,JumpIfNullConstant
code-creation,BytecodeHandler,0,33093,0x556369969b00,88,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,33107,0x556369969b80,88,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,33120,0x556369969c00,88,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,33134,0x556369969c80,96,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,33148,0x556369969d00,88,JumpIfTrueConstant
code-creation,BytecodeHandler,0,33162,0x556369969d80,88,JumpIfFalseConstant
code-creation,BytecodeHandler,0,33175,0x556369969e00,96,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,33189,0x556369969e80,164,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,33202,0x556369969f40,164,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,33216,0x55636996a000,148,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,33229,0x55636996a0c0,148,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,33243,0x55636996a180,68,JumpIfTrue
code-creation,BytecodeHandler,0,33255,0x55636996a200,68,JumpIfFalse
code-creation,BytecodeHandler,0,33268,0x55636996a280,68,JumpIfNull
code-creation,BytecodeHandler,0,33281,0x55636996a300,68,JumpIfNotNull
code-creation,BytecodeHandler,0,33294,0x55636996a380,68,JumpIfUndefined
code-creation,BytecodeHandler,0,33307,0x55636996a400,68,JumpIfNotUndefined
code-creation,BytecodeHandler,0,33320,0x55636996a480,80,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,33333,0x55636996a500,80,JumpIfJSReceiver
code-creation,BytecodeHandler,0,33346,0x55636996a580,112,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,33359,0x55636996a600,484,ForInEnumerate
code-creation,BytecodeHandler,0,33373,0x55636996a800,300,ForInPrepare
code-creation,BytecodeHandler,0,33385,0x55636996a940,64,ForInContinue
code-creation,BytecodeHandler,0,33398,0x55636996a9c0,260,ForInNext
code-creation,BytecodeHandler,0,33411,0x55636996ab00,36,ForInStep
code-creation,BytecodeHandler,0,33424,0x55636996ab40,36,SetPendingMessage
code-creation,BytecodeHandler,0,33437,0x55636996ab80,100,Throw
code-creation,BytecodeHandler,0,33449,0x55636996ac00,100,ReThrow
code-creation,BytecodeHandler,0,33461,0x55636996ac80,108,Return
code-creation,BytecodeHandler,0,33474,0x55636996ad00,180,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,33488,0x55636996adc0,120,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,33502,0x55636996ae40,120,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,33516,0x55636996aec0,148,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,33537,0x55636996af80,128,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,33550,0x55636996b040,548,SuspendGenerator
code-creation,BytecodeHandler,0,33564,0x55636996b280,188,ResumeGenerator
code-creation,BytecodeHandler,0,33576,0x55636996b340,164,GetIterator
code-creation,BytecodeHandler,0,33588,0x55636996b400,112,Debugger
code-creation,BytecodeHandler,0,33600,0x55636996b480,116,IncBlockCounter
code-creation,BytecodeHandler,0,33613,0x55636996b500,48,Abort
code-creation,BytecodeHandler,0,33625,0x55636996b540,32,Star0
code-creation,BytecodeHandler,0,33637,0x55636996b580,52,Illegal
code-creation,BytecodeHandler,0,33650,0x55636996b5c0,100,DebugBreak1.Wide
code-creation,BytecodeHandler,0,33663,0x55636996b640,100,DebugBreak2.Wide
code-creation,BytecodeHandler,0,33677,0x55636996b6c0,100,DebugBreak3.Wide
code-creation,BytecodeHandler,0,33690,0x55636996b740,100,DebugBreak4.Wide
code-creation,BytecodeHandler,0,33703,0x55636996b7c0,100,DebugBreak5.Wide
code-creation,BytecodeHandler,0,33716,0x55636996b840,100,DebugBreak6.Wide
code-creation,BytecodeHandler,0,33729,0x55636996b8c0,32,Ldar.Wide
code-creation,BytecodeHandler,0,33742,0x55636996b900,28,LdaSmi.Wide
code-creation,BytecodeHandler,0,33755,0x55636996b940,40,LdaConstant.Wide
code-creation,BytecodeHandler,0,33768,0x55636996b980,100,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,33782,0x55636996ba00,100,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,33797,0x55636996ba80,52,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,33811,0x55636996bac0,52,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,33826,0x55636996bb00,32,Star.Wide
code-creation,BytecodeHandler,0,33838,0x55636996bb40,40,Mov.Wide
code-creation,BytecodeHandler,0,33850,0x55636996bb80,40,PushContext.Wide
code-creation,BytecodeHandler,0,33864,0x55636996bbc0,36,PopContext.Wide
code-creation,BytecodeHandler,0,33877,0x55636996bc00,52,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,33890,0x55636996bc40,4964,LdaGlobal.Wide
code-creation,BytecodeHandler,0,33903,0x55636996cfc0,4896,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,33917,0x55636996e300,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,33932,0x55636996e3c0,164,StaContextSlot.Wide
code-creation,BytecodeHandler,0,33946,0x55636996e480,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,33960,0x55636996e500,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,33976,0x55636996e5c0,260,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,33990,0x55636996e700,5116,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,34004,0x55636996fb00,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,34019,0x55636996fbc0,260,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,34034,0x55636996fd00,5076,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,34049,0x556369971100,216,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,34062,0x556369971200,5516,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,34076,0x5563699727c0,196,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,34091,0x5563699728c0,164,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,34105,0x556369972980,188,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,34118,0x556369972a40,308,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,34132,0x556369972b80,184,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,34146,0x556369972c40,184,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,34160,0x556369972d00,176,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,34173,0x556369972dc0,176,StaKeyedPropertyAsDefine.Wide
code-creation,BytecodeHandler,0,34187,0x556369972e80,176,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,34201,0x556369972f40,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,34215,0x556369973040,168,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,34229,0x556369973100,948,Add.Wide
code-creation,BytecodeHandler,0,34242,0x5563699734c0,1008,Sub.Wide
code-creation,BytecodeHandler,0,34254,0x5563699738c0,1104,Mul.Wide
code-creation,BytecodeHandler,0,34271,0x556369973d40,952,Div.Wide
code-creation,BytecodeHandler,0,34284,0x556369974100,1020,Mod.Wide
code-creation,BytecodeHandler,0,34296,0x556369974500,964,Exp.Wide
code-creation,BytecodeHandler,0,34309,0x556369974900,996,BitwiseOr.Wide
code-creation,BytecodeHandler,0,34322,0x556369974d00,992,BitwiseXor.Wide
code-creation,BytecodeHandler,0,34335,0x556369975100,992,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,34348,0x556369975500,992,ShiftLeft.Wide
code-creation,BytecodeHandler,0,34361,0x556369975900,992,ShiftRight.Wide
code-creation,BytecodeHandler,0,34375,0x556369975d00,996,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,34388,0x556369976100,884,AddSmi.Wide
code-creation,BytecodeHandler,0,34401,0x556369976480,944,SubSmi.Wide
code-creation,BytecodeHandler,0,34414,0x556369976840,1052,MulSmi.Wide
code-creation,BytecodeHandler,0,34427,0x556369976c80,936,DivSmi.Wide
code-creation,BytecodeHandler,0,34440,0x556369977040,936,ModSmi.Wide
code-creation,BytecodeHandler,0,34453,0x556369977400,848,ExpSmi.Wide
code-creation,BytecodeHandler,0,34465,0x556369977780,604,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,34479,0x556369977a00,604,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,34492,0x556369977c80,604,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,34505,0x556369977f00,604,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,34519,0x556369978180,604,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,34532,0x556369978400,608,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,34544,0x556369978680,600,Inc.Wide
code-creation,BytecodeHandler,0,34557,0x556369978900,600,Dec.Wide
code-creation,BytecodeHandler,0,34569,0x556369978b80,620,Negate.Wide
code-creation,BytecodeHandler,0,34582,0x556369978e00,600,BitwiseNot.Wide
code-creation,BytecodeHandler,0,34596,0x556369979080,116,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,34610,0x556369979100,112,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,34624,0x556369979180,44,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,34639,0x5563699791c0,1164,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,34677,0x556369979680,1164,CallProperty.Wide
code-creation,BytecodeHandler,0,34693,0x556369979b40,1092,CallProperty0.Wide
code-creation,BytecodeHandler,0,34707,0x556369979fc0,1104,CallProperty1.Wide
code-creation,BytecodeHandler,0,34720,0x55636997a440,1120,CallProperty2.Wide
code-creation,BytecodeHandler,0,34734,0x55636997a8c0,1096,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,34748,0x55636997ad40,1120,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,34763,0x55636997b1c0,1076,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,34778,0x55636997b600,1092,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,34793,0x55636997ba80,1164,CallWithSpread.Wide
code-creation,BytecodeHandler,0,34807,0x55636997bf40,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,34820,0x55636997c000,172,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,34834,0x55636997c0c0,96,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,34847,0x55636997c140,1232,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,34861,0x55636997c640,1016,Construct.Wide
code-creation,BytecodeHandler,0,34874,0x55636997ca40,492,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,34887,0x55636997cc40,1868,TestEqual.Wide
code-creation,BytecodeHandler,0,34900,0x55636997d3c0,1040,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,34913,0x55636997d800,1348,TestLessThan.Wide
code-creation,BytecodeHandler,0,34926,0x55636997dd80,1348,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,34939,0x55636997e300,1348,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,34953,0x55636997e880,1348,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,34968,0x55636997ee00,868,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,34981,0x55636997f180,164,TestIn.Wide
code-creation,BytecodeHandler,0,34994,0x55636997f240,112,ToName.Wide
code-creation,BytecodeHandler,0,35008,0x55636997f2c0,212,ToNumber.Wide
code-creation,BytecodeHandler,0,35025,0x55636997f3c0,228,ToNumeric.Wide
code-creation,BytecodeHandler,0,35043,0x55636997f4c0,112,ToObject.Wide
code-creation,BytecodeHandler,0,35057,0x55636997f540,424,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,35071,0x55636997f700,1372,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,35084,0x55636997fc80,804,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,35097,0x55636997ffc0,2160,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,35111,0x556369980840,176,CloneObject.Wide
code-creation,BytecodeHandler,0,35124,0x556369980900,172,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,35138,0x5563699809c0,336,CreateClosure.Wide
code-creation,BytecodeHandler,0,35151,0x556369980b40,128,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,35165,0x556369980c00,144,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,35179,0x556369980cc0,264,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,35193,0x556369980e00,268,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,35207,0x556369980f40,144,CreateWithContext.Wide
code-creation,BytecodeHandler,0,35221,0x556369981000,432,JumpLoop.Wide
code-creation,BytecodeHandler,0,35235,0x5563699811c0,44,Jump.Wide
code-creation,BytecodeHandler,0,35248,0x556369981200,64,JumpConstant.Wide
code-creation,BytecodeHandler,0,35262,0x556369981280,88,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,35276,0x556369981300,88,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,35289,0x556369981380,88,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,35304,0x556369981400,88,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,35318,0x556369981480,96,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,35332,0x556369981500,88,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,35346,0x556369981580,88,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,35360,0x556369981600,96,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,35374,0x556369981680,164,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,35389,0x556369981740,164,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,35403,0x556369981800,148,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,35418,0x5563699818c0,148,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,35432,0x556369981980,68,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,35446,0x556369981a00,68,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,35459,0x556369981a80,68,JumpIfNull.Wide
code-creation,BytecodeHandler,0,35472,0x556369981b00,68,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,35501,0x556369981b80,68,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,35516,0x556369981c00,68,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,35531,0x556369981c80,80,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,35546,0x556369981d00,80,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,35562,0x556369981d80,112,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,35577,0x556369981e00,484,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,35592,0x556369982000,300,ForInPrepare.Wide
code-creation,BytecodeHandler,0,35607,0x556369982140,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,35622,0x5563699821c0,260,ForInNext.Wide
code-creation,BytecodeHandler,0,35636,0x556369982300,36,ForInStep.Wide
code-creation,BytecodeHandler,0,35651,0x556369982340,148,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,35667,0x556369982400,148,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,35684,0x5563699824c0,128,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,35699,0x556369982580,560,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,35714,0x5563699827c0,188,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,35729,0x556369982880,164,GetIterator.Wide
code-creation,BytecodeHandler,0,35743,0x556369982940,120,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,35761,0x5563699829c0,52,Abort.Wide
code-creation,BytecodeHandler,0,35776,0x556369982a00,100,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,35796,0x556369982a80,100,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,35811,0x556369982b00,100,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,35826,0x556369982b80,100,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,35841,0x556369982c00,100,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,35858,0x556369982c80,100,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,35873,0x556369982d00,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,35887,0x556369982d40,24,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,35902,0x556369982d80,36,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,35917,0x556369982dc0,96,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,35932,0x556369982e40,96,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,35948,0x556369982ec0,52,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,35965,0x556369982f00,52,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,35981,0x556369982f40,28,Star.ExtraWide
code-creation,BytecodeHandler,0,35995,0x556369982f80,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,36008,0x556369982fc0,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,36023,0x556369983000,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,36038,0x556369983040,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,36054,0x556369983080,4952,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,36066,0x556369984400,4884,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36079,0x556369985740,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,36095,0x556369985800,160,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36109,0x5563699858c0,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36124,0x556369985940,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,36137,0x556369985a00,260,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36149,0x556369985b40,5100,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,36163,0x556369986f40,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36174,0x556369987000,260,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36194,0x556369987140,5064,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36208,0x556369988540,212,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,36223,0x556369988640,5500,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,36237,0x556369989bc0,192,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,36254,0x556369989cc0,164,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,36268,0x556369989d80,188,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,36282,0x556369989e40,304,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,36295,0x556369989f80,184,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,36311,0x55636998a040,184,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,36325,0x55636998a100,172,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,36340,0x55636998a1c0,172,StaKeyedPropertyAsDefine.ExtraWide
code-creation,BytecodeHandler,0,36356,0x55636998a280,172,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,36372,0x55636998a340,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,36388,0x55636998a440,168,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,36404,0x55636998a500,948,Add.ExtraWide
code-creation,BytecodeHandler,0,36419,0x55636998a8c0,1004,Sub.ExtraWide
code-creation,BytecodeHandler,0,36433,0x55636998acc0,1104,Mul.ExtraWide
code-creation,BytecodeHandler,0,36447,0x55636998b140,952,Div.ExtraWide
code-creation,BytecodeHandler,0,36464,0x55636998b500,1016,Mod.ExtraWide
code-creation,BytecodeHandler,0,36478,0x55636998b900,964,Exp.ExtraWide
code-creation,BytecodeHandler,0,36493,0x55636998bd00,992,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,36522,0x55636998c100,988,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,36536,0x55636998c500,988,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,36555,0x55636998c900,988,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,36570,0x55636998cd00,988,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,36584,0x55636998d100,992,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,36599,0x55636998d500,884,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,36613,0x55636998d880,944,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,36627,0x55636998dc40,1048,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,36641,0x55636998e080,936,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,36655,0x55636998e440,932,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,36669,0x55636998e800,848,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,36683,0x55636998eb80,604,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,36698,0x55636998ee00,604,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,36713,0x55636998f080,604,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,36728,0x55636998f300,604,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,36742,0x55636998f580,604,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,36757,0x55636998f800,608,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,36772,0x55636998fa80,596,Inc.ExtraWide
code-creation,BytecodeHandler,0,36786,0x55636998fd00,600,Dec.ExtraWide
code-creation,BytecodeHandler,0,36800,0x55636998ff80,616,Negate.ExtraWide
code-creation,BytecodeHandler,0,36813,0x556369990200,600,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,36827,0x556369990480,112,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,36842,0x556369990500,112,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,36857,0x556369990580,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,36874,0x5563699905c0,1156,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,36889,0x556369990a80,1156,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,36903,0x556369990f40,1088,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,36920,0x5563699913c0,1100,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,36935,0x556369991840,1112,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,36949,0x556369991cc0,1092,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,36965,0x556369992140,1120,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,36980,0x5563699925c0,1072,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,36995,0x556369992a00,1088,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,37011,0x556369992e80,1156,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,37026,0x556369993340,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,37040,0x556369993400,172,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,37055,0x5563699934c0,92,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,37070,0x556369993540,1232,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,37087,0x556369993a40,1012,Construct.ExtraWide
code-creation,BytecodeHandler,0,37102,0x556369993e40,488,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,37117,0x556369994040,1864,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,37131,0x5563699947c0,1036,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,37146,0x556369994c00,1348,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,37165,0x556369995180,1348,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,37180,0x556369995700,1348,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,37195,0x556369995c80,1348,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,37211,0x556369996200,868,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,37226,0x556369996580,164,TestIn.ExtraWide
code-creation,BytecodeHandler,0,37240,0x556369996640,112,ToName.ExtraWide
code-creation,BytecodeHandler,0,37254,0x5563699966c0,208,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,37269,0x5563699967c0,228,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,37283,0x5563699968c0,112,ToObject.ExtraWide
code-creation,BytecodeHandler,0,37302,0x556369996940,424,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,37318,0x556369996b00,1368,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,37333,0x556369997080,804,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,37348,0x5563699973c0,2156,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,37363,0x556369997c40,176,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,37378,0x556369997d00,172,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,37390,0x556369997dc0,336,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,37405,0x556369997f40,128,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,37420,0x556369998000,140,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,37435,0x5563699980c0,264,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,37451,0x556369998200,264,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,37465,0x556369998340,140,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,37480,0x556369998400,428,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,37494,0x5563699985c0,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,37508,0x556369998600,64,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,37523,0x556369998680,88,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,37538,0x556369998700,88,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,37554,0x556369998780,88,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,37569,0x556369998800,88,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,37585,0x556369998880,96,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,37601,0x556369998900,88,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,37616,0x556369998980,88,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,37631,0x556369998a00,96,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,37645,0x556369998a80,164,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,37661,0x556369998b40,164,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,37677,0x556369998c00,148,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,37694,0x556369998cc0,148,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,37712,0x556369998d80,68,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,37726,0x556369998e00,68,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,37741,0x556369998e80,68,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,37755,0x556369998f00,68,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,37770,0x556369998f80,68,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,37785,0x556369999000,68,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,37800,0x556369999080,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,37815,0x556369999100,76,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,37830,0x556369999180,112,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,37845,0x556369999200,484,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,37861,0x556369999400,296,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,37875,0x556369999540,60,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,37890,0x556369999580,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,37904,0x5563699996c0,36,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,37918,0x556369999700,148,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,37934,0x5563699997c0,144,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,37950,0x556369999880,128,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,37965,0x556369999940,560,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,37980,0x556369999b80,188,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,38009,0x556369999c40,160,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,38024,0x556369999d00,120,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,38039,0x556369999d80,52,Abort.ExtraWide
tick,0x7f056c963f41,38067,0,0x0,6
tick,0x7f056c94ee65,38092,0,0x0,6
tick,0x7f056c9d293f,38105,0,0x0,6
tick,0x7f056ca4657e,38112,0,0x0,6
tick,0x7f056c9d293f,38118,0,0x0,6
tick,0x7f056c9679bd,38125,0,0x0,6
tick,0x7f056c9dc3cb,38228,0,0x0,6
new,MemoryChunk,0xb7b082c0000,262144
new,MemoryChunk,0xb7b08300000,262144
tick,0x556369557772,39283,0,0x0,5
tick,0x55636918fffc,40337,0,0x0,5
tick,0x556369190ee4,41377,0,0x0,5
new,MemoryChunk,0xb7b08340000,262144
tick,0x55636919112e,42472,0,0x0,5
tick,0x5563690141c0,43733,0,0x0,5
tick,0x55636949d580,44718,0,0x0,6
tick,0x55636a64ea20,45766,0,0x0,6
tick,0x556369070660,47041,0,0x0,3
tick,0x556369445183,47961,0,0x0,2
tick,0x556368e78090,48956,0,0x0,3
code-creation,Script,10,49285,0xb7b0835823e,15, :1:1,0xb7b083581c4,~
script-source,77,<unknown>,Deno.core.opresolve
code-source-info,0xb7b0835823e,77,0,19,C0O0C4O5C9O10C14O19,,
tick,0x5563698548c0,50251,0,0x0,0,0xb7b0835823e
tick,0x55636996ac80,51114,0,0x0,0,0xb7b08358247
code-creation,Script,10,51192,0xb7b08358372,15, :1:1,0xb7b083582f8,~
script-source,78,<unknown>,Deno.core.syncOpsCache
code-source-info,0xb7b08358372,78,0,22,C0O0C4O5C9O10C14O22,,
tick,0x55636990bec0,52388,0,0x0,0
tick,0x556368fe86e7,53149,0,0x0,0,0x55636910e0b0,0x55636990c34c,0xb7b080e5ac8
tick,0x556368e563bf,54215,0,0x0,3
code-creation,Script,10,54351,0xb7b0835905e,21, [deno:runtime/worker.rs:174:24]:1:1,0xb7b08358f5c,~
script-source,79,[deno:runtime/worker.rs:174:24],bootstrap.mainRuntime({\n  "args": []\x2C\n  "applySourceMaps": true\x2C\n  "cpuCount": 8\x2C\n  "debugFlag": false\x2C\n  "denoVersion": "1.16.3"\x2C\n  "location": null\x2C\n  "noColor": false\x2C\n  "tsVersion": "4.4.2"\x2C\n  "unstableFlag": false\x2C\n  "enableTestingFeaturesFlag": false\x2C\n  "pid": 31636\x2C\n  "ppid": 21752\x2C\n  "target": "x86_64-unknown-linux-gnu"\x2C\n  "v8Version": "9.7.106.5"\n})
code-source-info,0xb7b0835905e,79,0,360,C0O0C4O10C14O10C20O360,,
code-creation,LazyCompile,10,54810,0xb7b0835941e,817,bootstrapMainRuntime deno:runtime/js/99_main.js:529:32,0xb7b082998a4,~
script-source,76,deno:runtime/js/99_main.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n// Removes the `__proto__` for security reasons.  This intentionally makes\n// Deno non compliant with ECMA-262 Annex B.2.2.1\n//\n"use strict";\ndelete Object.prototype.__proto__;\n\n((window) => {\n  const core = Deno.core;\n  const {\n    ArrayPrototypeMap\x2C\n    Error\x2C\n    FunctionPrototypeCall\x2C\n    FunctionPrototypeBind\x2C\n    ObjectAssign\x2C\n    ObjectDefineProperty\x2C\n    ObjectDefineProperties\x2C\n    ObjectFreeze\x2C\n    ObjectSetPrototypeOf\x2C\n    PromiseResolve\x2C\n    Symbol\x2C\n    SymbolFor\x2C\n    SymbolIterator\x2C\n    PromisePrototypeThen\x2C\n    TypeError\x2C\n  } = window.__bootstrap.primordials;\n  const util = window.__bootstrap.util;\n  const eventTarget = window.__bootstrap.eventTarget;\n  const globalInterfaces = window.__bootstrap.globalInterfaces;\n  const location = window.__bootstrap.location;\n  const build = window.__bootstrap.build;\n  const version = window.__bootstrap.version;\n  const errorStack = window.__bootstrap.errorStack;\n  const os = window.__bootstrap.os;\n  const timers = window.__bootstrap.timers;\n  const base64 = window.__bootstrap.base64;\n  const encoding = window.__bootstrap.encoding;\n  const Console = window.__bootstrap.console.Console;\n  const worker = window.__bootstrap.worker;\n  const internals = window.__bootstrap.internals;\n  const performance = window.__bootstrap.performance;\n  const crypto = window.__bootstrap.crypto;\n  const url = window.__bootstrap.url;\n  const urlPattern = window.__bootstrap.urlPattern;\n  const headers = window.__bootstrap.headers;\n  const streams = window.__bootstrap.streams;\n  const fileReader = window.__bootstrap.fileReader;\n  const webgpu = window.__bootstrap.webgpu;\n  const webSocket = window.__bootstrap.webSocket;\n  const webStorage = window.__bootstrap.webStorage;\n  const broadcastChannel = window.__bootstrap.broadcastChannel;\n  const file = window.__bootstrap.file;\n  const formData = window.__bootstrap.formData;\n  const fetch = window.__bootstrap.fetch;\n  const prompt = window.__bootstrap.prompt;\n  const messagePort = window.__bootstrap.messagePort;\n  const denoNs = window.__bootstrap.denoNs;\n  const denoNsUnstable = window.__bootstrap.denoNsUnstable;\n  const errors = window.__bootstrap.errors.errors;\n  const webidl = window.__bootstrap.webidl;\n  const domException = window.__bootstrap.domException;\n  const { defineEventHandler } = window.__bootstrap.event;\n  const { deserializeJsMessageData\x2C serializeJsMessageData } =\n    window.__bootstrap.messagePort;\n\n  let windowIsClosing = false;\n\n  function windowClose() {\n    if (!windowIsClosing) {\n      windowIsClosing = true;\n      // Push a macrotask to exit after a promise resolve.\n      // This is not perfect\x2C but should be fine for first pass.\n      PromisePrototypeThen(\n        PromiseResolve()\x2C\n        () =>\n          FunctionPrototypeCall(timers.setTimeout\x2C null\x2C () => {\n            // This should be fine\x2C since only Window/MainWorker has .close()\n            os.exit(0);\n          }\x2C 0)\x2C\n      );\n    }\n  }\n\n  function workerClose() {\n    if (isClosing) {\n      return;\n    }\n\n    isClosing = true;\n    core.opSync("op_worker_close");\n  }\n\n  function postMessage(message\x2C transferOrOptions = {}) {\n    const prefix =\n      "Failed to execute 'postMessage' on 'DedicatedWorkerGlobalScope'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C { prefix });\n    message = webidl.converters.any(message);\n    let options;\n    if (\n      webidl.type(transferOrOptions) === "Object" &&\n      transferOrOptions !== undefined &&\n      transferOrOptions[SymbolIterator] !== undefined\n    ) {\n      const transfer = webidl.converters["sequence<object>"](\n        transferOrOptions\x2C\n        { prefix\x2C context: "Argument 2" }\x2C\n      );\n      options = { transfer };\n    } else {\n      options = webidl.converters.StructuredSerializeOptions(\n        transferOrOptions\x2C\n        {\n          prefix\x2C\n          context: "Argument 2"\x2C\n        }\x2C\n      );\n    }\n    const { transfer } = options;\n    const data = serializeJsMessageData(message\x2C transfer);\n    core.opSync("op_worker_post_message"\x2C data);\n  }\n\n  let isClosing = false;\n  let globalDispatchEvent;\n\n  async function pollForMessages() {\n    if (!globalDispatchEvent) {\n      globalDispatchEvent = FunctionPrototypeBind(\n        globalThis.dispatchEvent\x2C\n        globalThis\x2C\n      );\n    }\n    while (!isClosing) {\n      const data = await core.opAsync("op_worker_recv_message");\n      if (data === null) break;\n      const v = deserializeJsMessageData(data);\n      const message = v[0];\n      const transferables = v[1];\n\n      const msgEvent = new MessageEvent("message"\x2C {\n        cancelable: false\x2C\n        data: message\x2C\n        ports: transferables.filter((t) => t instanceof MessagePort)\x2C\n      });\n\n      try {\n        globalDispatchEvent(msgEvent);\n      } catch (e) {\n        const errorEvent = new ErrorEvent("error"\x2C {\n          cancelable: true\x2C\n          message: e.message\x2C\n          lineno: e.lineNumber ? e.lineNumber + 1 : undefined\x2C\n          colno: e.columnNumber ? e.columnNumber + 1 : undefined\x2C\n          filename: e.fileName\x2C\n          error: e\x2C\n        });\n\n        globalDispatchEvent(errorEvent);\n        if (!errorEvent.defaultPrevented) {\n          throw e;\n        }\n      }\n    }\n  }\n\n  let loadedMainWorkerScript = false;\n\n  function importScripts(...urls) {\n    if (core.opSync("op_worker_get_type") === "module") {\n      throw new TypeError("Can't import scripts in a module worker.");\n    }\n\n    const baseUrl = location.getLocationHref();\n    const parsedUrls = ArrayPrototypeMap(urls\x2C (scriptUrl) => {\n      try {\n        return new url.URL(scriptUrl\x2C baseUrl ?? undefined).href;\n      } catch {\n        throw new domException.DOMException(\n          "Failed to parse URL."\x2C\n          "SyntaxError"\x2C\n        );\n      }\n    });\n\n    // A classic worker's main script has looser MIME type checks than any\n    // imported scripts\x2C so we use `loadedMainWorkerScript` to distinguish them.\n    // TODO(andreubotella) Refactor worker creation so the main script isn't\n    // loaded with `importScripts()`.\n    const scripts = core.opSync(\n      "op_worker_sync_fetch"\x2C\n      parsedUrls\x2C\n      !loadedMainWorkerScript\x2C\n    );\n    loadedMainWorkerScript = true;\n\n    for (const { url\x2C script } of scripts) {\n      const err = core.evalContext(script\x2C url)[1];\n      if (err !== null) {\n        throw err.thrown;\n      }\n    }\n  }\n\n  function opMainModule() {\n    return core.opSync("op_main_module");\n  }\n\n  function runtimeStart(runtimeOptions\x2C source) {\n    core.setMacrotaskCallback(timers.handleTimerMacrotask);\n    core.setWasmStreamingCallback(fetch.handleWasmStreaming);\n    version.setVersions(\n      runtimeOptions.denoVersion\x2C\n      runtimeOptions.v8Version\x2C\n      runtimeOptions.tsVersion\x2C\n    );\n    if (runtimeOptions.unstableFlag) {\n      internals.enableTestSteps();\n    }\n    build.setBuildInfo(runtimeOptions.target);\n    util.setLogDebug(runtimeOptions.debugFlag\x2C source);\n    const prepareStackTrace = core.createPrepareStackTrace(\n      // TODO(bartlomieju): a very crude way to disable\n      // source mapping of errors. This condition is true\n      // only for compiled standalone binaries.\n      runtimeOptions.applySourceMaps ? errorStack.opApplySourceMap : undefined\x2C\n      errorStack.opFormatFileName\x2C\n    );\n    // deno-lint-ignore prefer-primordials\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  function registerErrors() {\n    core.registerErrorClass("NotFound"\x2C errors.NotFound);\n    core.registerErrorClass("PermissionDenied"\x2C errors.PermissionDenied);\n    core.registerErrorClass("ConnectionRefused"\x2C errors.ConnectionRefused);\n    core.registerErrorClass("ConnectionReset"\x2C errors.ConnectionReset);\n    core.registerErrorClass("ConnectionAborted"\x2C errors.ConnectionAborted);\n    core.registerErrorClass("NotConnected"\x2C errors.NotConnected);\n    core.registerErrorClass("AddrInUse"\x2C errors.AddrInUse);\n    core.registerErrorClass("AddrNotAvailable"\x2C errors.AddrNotAvailable);\n    core.registerErrorClass("BrokenPipe"\x2C errors.BrokenPipe);\n    core.registerErrorClass("AlreadyExists"\x2C errors.AlreadyExists);\n    core.registerErrorClass("InvalidData"\x2C errors.InvalidData);\n    core.registerErrorClass("TimedOut"\x2C errors.TimedOut);\n    core.registerErrorClass("Interrupted"\x2C errors.Interrupted);\n    core.registerErrorClass("WriteZero"\x2C errors.WriteZero);\n    core.registerErrorClass("UnexpectedEof"\x2C errors.UnexpectedEof);\n    core.registerErrorClass("BadResource"\x2C errors.BadResource);\n    core.registerErrorClass("Http"\x2C errors.Http);\n    core.registerErrorClass("Busy"\x2C errors.Busy);\n    core.registerErrorClass("NotSupported"\x2C errors.NotSupported);\n    core.registerErrorBuilder(\n      "DOMExceptionOperationError"\x2C\n      function DOMExceptionOperationError(msg) {\n        return new domException.DOMException(msg\x2C "OperationError");\n      }\x2C\n    );\n    core.registerErrorBuilder(\n      "DOMExceptionQuotaExceededError"\x2C\n      function DOMExceptionQuotaExceededError(msg) {\n        return new domException.DOMException(msg\x2C "QuotaExceededError");\n      }\x2C\n    );\n    core.registerErrorBuilder(\n      "DOMExceptionNotSupportedError"\x2C\n      function DOMExceptionNotSupportedError(msg) {\n        return new domException.DOMException(msg\x2C "NotSupported");\n      }\x2C\n    );\n    core.registerErrorBuilder(\n      "DOMExceptionNetworkError"\x2C\n      function DOMExceptionNetworkError(msg) {\n        return new domException.DOMException(msg\x2C "NetworkError");\n      }\x2C\n    );\n    core.registerErrorBuilder(\n      "DOMExceptionAbortError"\x2C\n      function DOMExceptionAbortError(msg) {\n        return new domException.DOMException(msg\x2C "AbortError");\n      }\x2C\n    );\n    core.registerErrorBuilder(\n      "DOMExceptionInvalidCharacterError"\x2C\n      function DOMExceptionInvalidCharacterError(msg) {\n        return new domException.DOMException(msg\x2C "InvalidCharacterError");\n      }\x2C\n    );\n    core.registerErrorBuilder(\n      "DOMExceptionDataError"\x2C\n      function DOMExceptionDataError(msg) {\n        return new domException.DOMException(msg\x2C "DataError");\n      }\x2C\n    );\n  }\n\n  class Navigator {\n    constructor() {\n      webidl.illegalConstructor();\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return `${this.constructor.name} ${inspect({})}`;\n    }\n  }\n\n  const navigator = webidl.createBranded(Navigator);\n\n  let numCpus;\n\n  ObjectDefineProperties(Navigator.prototype\x2C {\n    gpu: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get() {\n        webidl.assertBranded(this\x2C Navigator);\n        return webgpu.gpu;\n      }\x2C\n    }\x2C\n    hardwareConcurrency: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get() {\n        webidl.assertBranded(this\x2C Navigator);\n        return numCpus;\n      }\x2C\n    }\x2C\n  });\n\n  class WorkerNavigator {\n    constructor() {\n      webidl.illegalConstructor();\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return `${this.constructor.name} ${inspect({})}`;\n    }\n  }\n\n  const workerNavigator = webidl.createBranded(WorkerNavigator);\n\n  ObjectDefineProperties(WorkerNavigator.prototype\x2C {\n    gpu: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get() {\n        webidl.assertBranded(this\x2C WorkerNavigator);\n        return webgpu.gpu;\n      }\x2C\n    }\x2C\n    hardwareConcurrency: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get() {\n        webidl.assertBranded(this\x2C WorkerNavigator);\n        return numCpus;\n      }\x2C\n    }\x2C\n  });\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\n  const windowOrWorkerGlobalScope = {\n    Blob: util.nonEnumerable(file.Blob)\x2C\n    ByteLengthQueuingStrategy: util.nonEnumerable(\n      streams.ByteLengthQueuingStrategy\x2C\n    )\x2C\n    CloseEvent: util.nonEnumerable(CloseEvent)\x2C\n    CountQueuingStrategy: util.nonEnumerable(\n      streams.CountQueuingStrategy\x2C\n    )\x2C\n    CryptoKey: util.nonEnumerable(crypto.CryptoKey)\x2C\n    CustomEvent: util.nonEnumerable(CustomEvent)\x2C\n    DOMException: util.nonEnumerable(domException.DOMException)\x2C\n    ErrorEvent: util.nonEnumerable(ErrorEvent)\x2C\n    Event: util.nonEnumerable(Event)\x2C\n    EventTarget: util.nonEnumerable(EventTarget)\x2C\n    File: util.nonEnumerable(file.File)\x2C\n    FileReader: util.nonEnumerable(fileReader.FileReader)\x2C\n    FormData: util.nonEnumerable(formData.FormData)\x2C\n    Headers: util.nonEnumerable(headers.Headers)\x2C\n    MessageEvent: util.nonEnumerable(MessageEvent)\x2C\n    Performance: util.nonEnumerable(performance.Performance)\x2C\n    PerformanceEntry: util.nonEnumerable(performance.PerformanceEntry)\x2C\n    PerformanceMark: util.nonEnumerable(performance.PerformanceMark)\x2C\n    PerformanceMeasure: util.nonEnumerable(performance.PerformanceMeasure)\x2C\n    ProgressEvent: util.nonEnumerable(ProgressEvent)\x2C\n    ReadableStream: util.nonEnumerable(streams.ReadableStream)\x2C\n    ReadableStreamDefaultReader: util.nonEnumerable(\n      streams.ReadableStreamDefaultReader\x2C\n    )\x2C\n    Request: util.nonEnumerable(fetch.Request)\x2C\n    Response: util.nonEnumerable(fetch.Response)\x2C\n    TextDecoder: util.nonEnumerable(encoding.TextDecoder)\x2C\n    TextEncoder: util.nonEnumerable(encoding.TextEncoder)\x2C\n    TextDecoderStream: util.nonEnumerable(encoding.TextDecoderStream)\x2C\n    TextEncoderStream: util.nonEnumerable(encoding.TextEncoderStream)\x2C\n    TransformStream: util.nonEnumerable(streams.TransformStream)\x2C\n    URL: util.nonEnumerable(url.URL)\x2C\n    URLPattern: util.nonEnumerable(urlPattern.URLPattern)\x2C\n    URLSearchParams: util.nonEnumerable(url.URLSearchParams)\x2C\n    WebSocket: util.nonEnumerable(webSocket.WebSocket)\x2C\n    MessageChannel: util.nonEnumerable(messagePort.MessageChannel)\x2C\n    MessagePort: util.nonEnumerable(messagePort.MessagePort)\x2C\n    Worker: util.nonEnumerable(worker.Worker)\x2C\n    WritableStream: util.nonEnumerable(streams.WritableStream)\x2C\n    WritableStreamDefaultWriter: util.nonEnumerable(\n      streams.WritableStreamDefaultWriter\x2C\n    )\x2C\n    WritableStreamDefaultController: util.nonEnumerable(\n      streams.WritableStreamDefaultController\x2C\n    )\x2C\n    ReadableByteStreamController: util.nonEnumerable(\n      streams.ReadableByteStreamController\x2C\n    )\x2C\n    ReadableStreamBYOBReader: util.nonEnumerable(\n      streams.ReadableStreamBYOBReader\x2C\n    )\x2C\n    ReadableStreamBYOBRequest: util.nonEnumerable(\n      streams.ReadableStreamBYOBRequest\x2C\n    )\x2C\n    ReadableStreamDefaultController: util.nonEnumerable(\n      streams.ReadableStreamDefaultController\x2C\n    )\x2C\n    TransformStreamDefaultController: util.nonEnumerable(\n      streams.TransformStreamDefaultController\x2C\n    )\x2C\n    atob: util.writable(base64.atob)\x2C\n    btoa: util.writable(base64.btoa)\x2C\n    clearInterval: util.writable(timers.clearInterval)\x2C\n    clearTimeout: util.writable(timers.clearTimeout)\x2C\n    console: util.nonEnumerable(\n      new Console((msg\x2C level) => core.print(msg\x2C level > 1))\x2C\n    )\x2C\n    crypto: util.readOnly(crypto.crypto)\x2C\n    Crypto: util.nonEnumerable(crypto.Crypto)\x2C\n    SubtleCrypto: util.nonEnumerable(crypto.SubtleCrypto)\x2C\n    fetch: util.writable(fetch.fetch)\x2C\n    performance: util.writable(performance.performance)\x2C\n    setInterval: util.writable(timers.setInterval)\x2C\n    setTimeout: util.writable(timers.setTimeout)\x2C\n    structuredClone: util.writable(messagePort.structuredClone)\x2C\n  };\n\n  const unstableWindowOrWorkerGlobalScope = {\n    BroadcastChannel: util.nonEnumerable(broadcastChannel.BroadcastChannel)\x2C\n    WebSocketStream: util.nonEnumerable(webSocket.WebSocketStream)\x2C\n\n    GPU: util.nonEnumerable(webgpu.GPU)\x2C\n    GPUAdapter: util.nonEnumerable(webgpu.GPUAdapter)\x2C\n    GPUSupportedLimits: util.nonEnumerable(webgpu.GPUSupportedLimits)\x2C\n    GPUSupportedFeatures: util.nonEnumerable(webgpu.GPUSupportedFeatures)\x2C\n    GPUDevice: util.nonEnumerable(webgpu.GPUDevice)\x2C\n    GPUQueue: util.nonEnumerable(webgpu.GPUQueue)\x2C\n    GPUBuffer: util.nonEnumerable(webgpu.GPUBuffer)\x2C\n    GPUBufferUsage: util.nonEnumerable(webgpu.GPUBufferUsage)\x2C\n    GPUMapMode: util.nonEnumerable(webgpu.GPUMapMode)\x2C\n    GPUTexture: util.nonEnumerable(webgpu.GPUTexture)\x2C\n    GPUTextureUsage: util.nonEnumerable(webgpu.GPUTextureUsage)\x2C\n    GPUTextureView: util.nonEnumerable(webgpu.GPUTextureView)\x2C\n    GPUSampler: util.nonEnumerable(webgpu.GPUSampler)\x2C\n    GPUBindGroupLayout: util.nonEnumerable(webgpu.GPUBindGroupLayout)\x2C\n    GPUPipelineLayout: util.nonEnumerable(webgpu.GPUPipelineLayout)\x2C\n    GPUBindGroup: util.nonEnumerable(webgpu.GPUBindGroup)\x2C\n    GPUShaderModule: util.nonEnumerable(webgpu.GPUShaderModule)\x2C\n    GPUShaderStage: util.nonEnumerable(webgpu.GPUShaderStage)\x2C\n    GPUComputePipeline: util.nonEnumerable(webgpu.GPUComputePipeline)\x2C\n    GPURenderPipeline: util.nonEnumerable(webgpu.GPURenderPipeline)\x2C\n    GPUColorWrite: util.nonEnumerable(webgpu.GPUColorWrite)\x2C\n    GPUCommandEncoder: util.nonEnumerable(webgpu.GPUCommandEncoder)\x2C\n    GPURenderPassEncoder: util.nonEnumerable(webgpu.GPURenderPassEncoder)\x2C\n    GPUComputePassEncoder: util.nonEnumerable(webgpu.GPUComputePassEncoder)\x2C\n    GPUCommandBuffer: util.nonEnumerable(webgpu.GPUCommandBuffer)\x2C\n    GPURenderBundleEncoder: util.nonEnumerable(webgpu.GPURenderBundleEncoder)\x2C\n    GPURenderBundle: util.nonEnumerable(webgpu.GPURenderBundle)\x2C\n    GPUQuerySet: util.nonEnumerable(webgpu.GPUQuerySet)\x2C\n    GPUOutOfMemoryError: util.nonEnumerable(webgpu.GPUOutOfMemoryError)\x2C\n    GPUValidationError: util.nonEnumerable(webgpu.GPUValidationError)\x2C\n  };\n\n  const mainRuntimeGlobalProperties = {\n    Location: location.locationConstructorDescriptor\x2C\n    location: location.locationDescriptor\x2C\n    Window: globalInterfaces.windowConstructorDescriptor\x2C\n    window: util.readOnly(globalThis)\x2C\n    self: util.writable(globalThis)\x2C\n    Navigator: util.nonEnumerable(Navigator)\x2C\n    navigator: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get: () => navigator\x2C\n    }\x2C\n    close: util.writable(windowClose)\x2C\n    closed: util.getterOnly(() => windowIsClosing)\x2C\n    alert: util.writable(prompt.alert)\x2C\n    confirm: util.writable(prompt.confirm)\x2C\n    prompt: util.writable(prompt.prompt)\x2C\n    localStorage: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get: webStorage.localStorage\x2C\n    }\x2C\n    sessionStorage: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get: webStorage.sessionStorage\x2C\n    }\x2C\n    Storage: util.nonEnumerable(webStorage.Storage)\x2C\n  };\n\n  const workerRuntimeGlobalProperties = {\n    WorkerLocation: location.workerLocationConstructorDescriptor\x2C\n    location: location.workerLocationDescriptor\x2C\n    WorkerGlobalScope: globalInterfaces.workerGlobalScopeConstructorDescriptor\x2C\n    DedicatedWorkerGlobalScope:\n      globalInterfaces.dedicatedWorkerGlobalScopeConstructorDescriptor\x2C\n    WorkerNavigator: util.nonEnumerable(WorkerNavigator)\x2C\n    navigator: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get: () => workerNavigator\x2C\n    }\x2C\n    self: util.readOnly(globalThis)\x2C\n    // TODO(bartlomieju): should be readonly?\n    close: util.nonEnumerable(workerClose)\x2C\n    postMessage: util.writable(postMessage)\x2C\n  };\n\n  let hasBootstrapped = false;\n\n  function bootstrapMainRuntime(runtimeOptions) {\n    if (hasBootstrapped) {\n      throw new Error("Worker runtime already bootstrapped");\n    }\n\n    const consoleFromV8 = window.console;\n    const wrapConsole = window.__bootstrap.console.wrapConsole;\n\n    // Remove bootstrapping data from the global scope\n    delete globalThis.__bootstrap;\n    delete globalThis.bootstrap;\n    util.log("bootstrapMainRuntime");\n    hasBootstrapped = true;\n    ObjectDefineProperties(globalThis\x2C windowOrWorkerGlobalScope);\n    if (runtimeOptions.unstableFlag) {\n      ObjectDefineProperties(globalThis\x2C unstableWindowOrWorkerGlobalScope);\n    }\n    ObjectDefineProperties(globalThis\x2C mainRuntimeGlobalProperties);\n    ObjectSetPrototypeOf(globalThis\x2C Window.prototype);\n\n    const consoleFromDeno = globalThis.console;\n    wrapConsole(consoleFromDeno\x2C consoleFromV8);\n\n    eventTarget.setEventTargetData(globalThis);\n\n    defineEventHandler(window\x2C "load");\n    defineEventHandler(window\x2C "unload");\n\n    const isUnloadDispatched = SymbolFor("isUnloadDispatched");\n    // Stores the flag for checking whether unload is dispatched or not.\n    // This prevents the recursive dispatches of unload events.\n    // See https://github.com/denoland/deno/issues/9201.\n    window[isUnloadDispatched] = false;\n    window.addEventListener("unload"\x2C () => {\n      window[isUnloadDispatched] = true;\n    });\n\n    runtimeStart(runtimeOptions);\n    const {\n      args\x2C\n      location: locationHref\x2C\n      noColor\x2C\n      pid\x2C\n      ppid\x2C\n      unstableFlag\x2C\n      cpuCount\x2C\n    } = runtimeOptions;\n\n    if (locationHref != null) {\n      location.setLocationHref(locationHref);\n    }\n    numCpus = cpuCount;\n    registerErrors();\n\n    const internalSymbol = Symbol("Deno.internal");\n\n    const finalDenoNs = {\n      core\x2C\n      internal: internalSymbol\x2C\n      [internalSymbol]: internals\x2C\n      resources: core.resources\x2C\n      close: core.close\x2C\n      memoryUsage: core.memoryUsage\x2C\n      ...denoNs\x2C\n    };\n    ObjectDefineProperties(finalDenoNs\x2C {\n      pid: util.readOnly(pid)\x2C\n      ppid: util.readOnly(ppid)\x2C\n      noColor: util.readOnly(noColor)\x2C\n      args: util.readOnly(ObjectFreeze(args))\x2C\n      mainModule: util.getterOnly(opMainModule)\x2C\n    });\n\n    if (unstableFlag) {\n      ObjectAssign(finalDenoNs\x2C denoNsUnstable);\n    }\n\n    // Setup `Deno` global - we're actually overriding already existing global\n    // `Deno` with `Deno` namespace from "./deno.ts".\n    ObjectDefineProperty(globalThis\x2C "Deno"\x2C util.readOnly(finalDenoNs));\n    ObjectFreeze(globalThis.Deno.core);\n\n    util.log("args"\x2C args);\n  }\n\n  function bootstrapWorkerRuntime(\n    runtimeOptions\x2C\n    name\x2C\n    useDenoNamespace\x2C\n    internalName\x2C\n  ) {\n    if (hasBootstrapped) {\n      throw new Error("Worker runtime already bootstrapped");\n    }\n\n    const consoleFromV8 = window.console;\n    const wrapConsole = window.__bootstrap.console.wrapConsole;\n\n    // Remove bootstrapping data from the global scope\n    delete globalThis.__bootstrap;\n    delete globalThis.bootstrap;\n    util.log("bootstrapWorkerRuntime");\n    hasBootstrapped = true;\n    ObjectDefineProperties(globalThis\x2C windowOrWorkerGlobalScope);\n    if (runtimeOptions.unstableFlag) {\n      ObjectDefineProperties(globalThis\x2C unstableWindowOrWorkerGlobalScope);\n    }\n    ObjectDefineProperties(globalThis\x2C workerRuntimeGlobalProperties);\n    ObjectDefineProperties(globalThis\x2C { name: util.writable(name) });\n    if (runtimeOptions.enableTestingFeaturesFlag) {\n      ObjectDefineProperty(\n        globalThis\x2C\n        "importScripts"\x2C\n        util.writable(importScripts)\x2C\n      );\n    }\n    ObjectSetPrototypeOf(globalThis\x2C DedicatedWorkerGlobalScope.prototype);\n\n    const consoleFromDeno = globalThis.console;\n    wrapConsole(consoleFromDeno\x2C consoleFromV8);\n\n    eventTarget.setEventTargetData(globalThis);\n\n    defineEventHandler(self\x2C "message");\n    defineEventHandler(self\x2C "error"\x2C undefined\x2C true);\n\n    runtimeStart(\n      runtimeOptions\x2C\n      internalName ?? name\x2C\n    );\n    const {\n      unstableFlag\x2C\n      pid\x2C\n      noColor\x2C\n      args\x2C\n      location: locationHref\x2C\n      cpuCount\x2C\n    } = runtimeOptions;\n\n    location.setLocationHref(locationHref);\n    numCpus = cpuCount;\n    registerErrors();\n\n    pollForMessages();\n\n    const internalSymbol = Symbol("Deno.internal");\n\n    const finalDenoNs = {\n      core\x2C\n      internal: internalSymbol\x2C\n      [internalSymbol]: internals\x2C\n      resources: core.resources\x2C\n      close: core.close\x2C\n      ...denoNs\x2C\n    };\n    if (useDenoNamespace) {\n      if (unstableFlag) {\n        ObjectAssign(finalDenoNs\x2C denoNsUnstable);\n      }\n      ObjectDefineProperties(finalDenoNs\x2C {\n        pid: util.readOnly(pid)\x2C\n        noColor: util.readOnly(noColor)\x2C\n        args: util.readOnly(ObjectFreeze(args))\x2C\n      });\n      // Setup `Deno` global - we're actually overriding already\n      // existing global `Deno` with `Deno` namespace from "./deno.ts".\n      ObjectDefineProperty(globalThis\x2C "Deno"\x2C util.readOnly(finalDenoNs));\n      ObjectFreeze(globalThis.Deno.core);\n    } else {\n      delete globalThis.Deno;\n      util.assert(globalThis.Deno === undefined);\n    }\n  }\n\n  ObjectDefineProperties(globalThis\x2C {\n    bootstrap: {\n      value: {\n        mainRuntime: bootstrapMainRuntime\x2C\n        workerRuntime: bootstrapWorkerRuntime\x2C\n      }\x2C\n      configurable: true\x2C\n    }\x2C\n  });\n})(this);\n
code-source-info,0xb7b0835941e
tick,0x7f056c958b5c,57080,0,0x0,3,0x55636916ccf0,0xb7b0835906c
tick,0x7f056c963f8f,57109,0,0x0,3,0x55636916ccf0,0xb7b0835906c
code-creation,LazyCompile,10,57874,0xb7b0835a4b6,51,log deno:runtime/js/06_util.js:24:15,0xb7b081f6068,~
script-source,55,deno:runtime/js/06_util.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const {\n    StringPrototypeReplace\x2C\n    TypeError\x2C\n    Promise\x2C\n    decodeURIComponent\x2C\n    Error\x2C\n  } = window.__bootstrap.primordials;\n  const { build } = window.__bootstrap.build;\n  const { URL } = window.__bootstrap.url;\n  let logDebug = false;\n  let logSource = "JS";\n\n  function setLogDebug(debug\x2C source) {\n    logDebug = debug;\n    if (source) {\n      logSource = source;\n    }\n  }\n\n  function log(...args) {\n    if (logDebug) {\n      // if we destructure `console` off `globalThis` too early\x2C we don't bind to\n      // the right console\x2C therefore we don't log anything out.\n      globalThis.console.log(`DEBUG ${logSource} -`\x2C ...args);\n    }\n  }\n\n  class AssertionError extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "AssertionError";\n    }\n  }\n\n  function assert(cond\x2C msg = "Assertion failed.") {\n    if (!cond) {\n      throw new AssertionError(msg);\n    }\n  }\n\n  function createResolvable() {\n    let resolve;\n    let reject;\n    const promise = new Promise((res\x2C rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    promise.resolve = resolve;\n    promise.reject = reject;\n    return promise;\n  }\n\n  // Keep in sync with `fromFileUrl()` in `std/path/win32.ts`.\n  function pathFromURLWin32(url) {\n    let p = StringPrototypeReplace(\n      url.pathname\x2C\n      /^\\/*([A-Za-z]:)(\\/|$)/\x2C\n      "$1/"\x2C\n    );\n    p = StringPrototypeReplace(\n      p\x2C\n      /\\//g\x2C\n      "\\\\"\x2C\n    );\n    p = StringPrototypeReplace(\n      p\x2C\n      /%(?![0-9A-Fa-f]{2})/g\x2C\n      "%25"\x2C\n    );\n    let path = decodeURIComponent(p);\n    if (url.hostname != "") {\n      // Note: The `URL` implementation guarantees that the drive letter and\n      // hostname are mutually exclusive. Otherwise it would not have been valid\n      // to append the hostname and path like this.\n      path = `\\\\\\\\${url.hostname}${path}`;\n    }\n    return path;\n  }\n\n  // Keep in sync with `fromFileUrl()` in `std/path/posix.ts`.\n  function pathFromURLPosix(url) {\n    if (url.hostname !== "") {\n      throw new TypeError(`Host must be empty.`);\n    }\n\n    return decodeURIComponent(\n      StringPrototypeReplace(url.pathname\x2C /%(?![0-9A-Fa-f]{2})/g\x2C "%25")\x2C\n    );\n  }\n\n  function pathFromURL(pathOrUrl) {\n    if (pathOrUrl instanceof URL) {\n      if (pathOrUrl.protocol != "file:") {\n        throw new TypeError("Must be a file URL.");\n      }\n\n      return build.os == "windows"\n        ? pathFromURLWin32(pathOrUrl)\n        : pathFromURLPosix(pathOrUrl);\n    }\n    return pathOrUrl;\n  }\n\n  window.__bootstrap.internals = {\n    ...window.__bootstrap.internals ?? {}\x2C\n    pathFromURL\x2C\n  };\n\n  function writable(value) {\n    return {\n      value\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function nonEnumerable(value) {\n    return {\n      value\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function readOnly(value) {\n    return {\n      value\x2C\n      enumerable: true\x2C\n      writable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function getterOnly(getter) {\n    return {\n      get: getter\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  window.__bootstrap.util = {\n    log\x2C\n    setLogDebug\x2C\n    createResolvable\x2C\n    assert\x2C\n    AssertionError\x2C\n    pathFromURL\x2C\n    writable\x2C\n    nonEnumerable\x2C\n    readOnly\x2C\n    getterOnly\x2C\n  };\n})(this);\n
code-source-info,0xb7b0835a4b6,55,512,763,C0O512C3O528C9O697C13O708C18O716C28O729C44O716C50O762,,
code-creation,LazyCompile,10,58753,0xb7b0835adbe,189,wrapConsole deno:ext/console/02_console.js:2107:23,0xb7b0816262c,~
script-source,8,deno:ext/console/02_console.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n\n/// <reference path="../../core/internal.d.ts" />\n\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const colors = window.__bootstrap.colors;\n  const {\n    ArrayBufferIsView\x2C\n    isNaN\x2C\n    DataView\x2C\n    Date\x2C\n    DateNow\x2C\n    DatePrototypeGetTime\x2C\n    DatePrototypeToISOString\x2C\n    Boolean\x2C\n    BooleanPrototypeToString\x2C\n    ObjectKeys\x2C\n    ObjectCreate\x2C\n    ObjectAssign\x2C\n    ObjectIs\x2C\n    ObjectValues\x2C\n    ObjectFromEntries\x2C\n    ObjectGetPrototypeOf\x2C\n    ObjectGetOwnPropertyDescriptor\x2C\n    ObjectGetOwnPropertySymbols\x2C\n    ObjectPrototypeHasOwnProperty\x2C\n    ObjectPrototypePropertyIsEnumerable\x2C\n    Promise\x2C\n    String\x2C\n    StringPrototypeRepeat\x2C\n    StringPrototypeReplace\x2C\n    StringPrototypeReplaceAll\x2C\n    StringPrototypeSplit\x2C\n    StringPrototypeSlice\x2C\n    StringPrototypeCodePointAt\x2C\n    StringPrototypeCharCodeAt\x2C\n    StringPrototypeNormalize\x2C\n    StringPrototypeMatch\x2C\n    StringPrototypePadStart\x2C\n    StringPrototypeLocaleCompare\x2C\n    StringPrototypeToString\x2C\n    StringPrototypeTrim\x2C\n    StringPrototypeIncludes\x2C\n    TypeError\x2C\n    NumberParseInt\x2C\n    RegExp\x2C\n    RegExpPrototypeTest\x2C\n    RegExpPrototypeToString\x2C\n    Set\x2C\n    SetPrototypeEntries\x2C\n    Symbol\x2C\n    SymbolPrototypeToString\x2C\n    SymbolPrototypeValueOf\x2C\n    SymbolToStringTag\x2C\n    SymbolHasInstance\x2C\n    SymbolFor\x2C\n    Array\x2C\n    ArrayIsArray\x2C\n    ArrayPrototypeJoin\x2C\n    ArrayPrototypeMap\x2C\n    ArrayPrototypeReduce\x2C\n    ArrayPrototypeEntries\x2C\n    ArrayPrototypePush\x2C\n    ArrayPrototypePop\x2C\n    ArrayPrototypeSort\x2C\n    ArrayPrototypeSlice\x2C\n    ArrayPrototypeIncludes\x2C\n    ArrayPrototypeFill\x2C\n    ArrayPrototypeFilter\x2C\n    ArrayPrototypeFind\x2C\n    FunctionPrototypeBind\x2C\n    Map\x2C\n    MapPrototypeHas\x2C\n    MapPrototypeGet\x2C\n    MapPrototypeSet\x2C\n    MapPrototypeDelete\x2C\n    MapPrototypeEntries\x2C\n    MapPrototypeForEach\x2C\n    Error\x2C\n    ErrorCaptureStackTrace\x2C\n    MathAbs\x2C\n    MathMax\x2C\n    MathMin\x2C\n    MathSqrt\x2C\n    MathRound\x2C\n    MathFloor\x2C\n    Number\x2C\n    NumberPrototypeToString\x2C\n    NumberPrototypeValueOf\x2C\n    BigInt\x2C\n    BigIntPrototypeToString\x2C\n    Proxy\x2C\n    ReflectGet\x2C\n    ReflectGetOwnPropertyDescriptor\x2C\n    ReflectGetPrototypeOf\x2C\n    WeakMap\x2C\n    WeakSet\x2C\n  } = window.__bootstrap.primordials;\n\n  function isInvalidDate(x) {\n    return isNaN(DatePrototypeGetTime(x));\n  }\n\n  function hasOwnProperty(obj\x2C v) {\n    if (obj == null) {\n      return false;\n    }\n    return ObjectPrototypeHasOwnProperty(obj\x2C v);\n  }\n\n  function propertyIsEnumerable(obj\x2C prop) {\n    if (\n      obj == null ||\n      typeof obj.propertyIsEnumerable !== "function"\n    ) {\n      return false;\n    }\n\n    return ObjectPrototypePropertyIsEnumerable(obj\x2C prop);\n  }\n\n  // Copyright Joyent\x2C Inc. and other Node contributors. MIT license.\n  // Forked from Node's lib/internal/cli_table.js\n\n  function isTypedArray(x) {\n    return ArrayBufferIsView(x) && !(x instanceof DataView);\n  }\n\n  const tableChars = {\n    middleMiddle: "\u2500"\x2C\n    rowMiddle: "\u253c"\x2C\n    topRight: "\u2510"\x2C\n    topLeft: "\u250c"\x2C\n    leftMiddle: "\u251c"\x2C\n    topMiddle: "\u252c"\x2C\n    bottomRight: "\u2518"\x2C\n    bottomLeft: "\u2514"\x2C\n    bottomMiddle: "\u2534"\x2C\n    rightMiddle: "\u2524"\x2C\n    left: "\u2502 "\x2C\n    right: " \u2502"\x2C\n    middle: " \u2502 "\x2C\n  };\n\n  function isFullWidthCodePoint(code) {\n    // Code points are partially derived from:\n    // http://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\n    return (\n      code >= 0x1100 &&\n      (code <= 0x115f || // Hangul Jamo\n        code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n        code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n        // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n        (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\n        // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n        (code >= 0x3250 && code <= 0x4dbf) ||\n        // CJK Unified Ideographs .. Yi Radicals\n        (code >= 0x4e00 && code <= 0xa4c6) ||\n        // Hangul Jamo Extended-A\n        (code >= 0xa960 && code <= 0xa97c) ||\n        // Hangul Syllables\n        (code >= 0xac00 && code <= 0xd7a3) ||\n        // CJK Compatibility Ideographs\n        (code >= 0xf900 && code <= 0xfaff) ||\n        // Vertical Forms\n        (code >= 0xfe10 && code <= 0xfe19) ||\n        // CJK Compatibility Forms .. Small Form Variants\n        (code >= 0xfe30 && code <= 0xfe6b) ||\n        // Halfwidth and Fullwidth Forms\n        (code >= 0xff01 && code <= 0xff60) ||\n        (code >= 0xffe0 && code <= 0xffe6) ||\n        // Kana Supplement\n        (code >= 0x1b000 && code <= 0x1b001) ||\n        // Enclosed Ideographic Supplement\n        (code >= 0x1f200 && code <= 0x1f251) ||\n        // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\n        // Emoticons 0x1f600 - 0x1f64f\n        (code >= 0x1f300 && code <= 0x1f64f) ||\n        // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n        (code >= 0x20000 && code <= 0x3fffd))\n    );\n  }\n\n  function getStringWidth(str) {\n    str = StringPrototypeNormalize(colors.stripColor(str)\x2C "NFC");\n    let width = 0;\n\n    for (const ch of str) {\n      width += isFullWidthCodePoint(StringPrototypeCodePointAt(ch\x2C 0)) ? 2 : 1;\n    }\n\n    return width;\n  }\n\n  function renderRow(row\x2C columnWidths\x2C columnRightAlign) {\n    let out = tableChars.left;\n    for (let i = 0; i < row.length; i++) {\n      const cell = row[i];\n      const len = getStringWidth(cell);\n      const padding = StringPrototypeRepeat(" "\x2C columnWidths[i] - len);\n      if (columnRightAlign?.[i]) {\n        out += `${padding}${cell}`;\n      } else {\n        out += `${cell}${padding}`;\n      }\n      if (i !== row.length - 1) {\n        out += tableChars.middle;\n      }\n    }\n    out += tableChars.right;\n    return out;\n  }\n\n  function canRightAlign(value) {\n    const isNumber = !isNaN(value);\n    return isNumber;\n  }\n\n  function cliTable(head\x2C columns) {\n    const rows = [];\n    const columnWidths = ArrayPrototypeMap(head\x2C (h) => getStringWidth(h));\n    const longestColumn = ArrayPrototypeReduce(\n      columns\x2C\n      (n\x2C a) => MathMax(n\x2C a.length)\x2C\n      0\x2C\n    );\n    const columnRightAlign = new Array(columnWidths.length).fill(true);\n\n    for (let i = 0; i < head.length; i++) {\n      const column = columns[i];\n      for (let j = 0; j < longestColumn; j++) {\n        if (rows[j] === undefined) {\n          rows[j] = [];\n        }\n        const value = (rows[j][i] = hasOwnProperty(column\x2C j) ? column[j] : "");\n        const width = columnWidths[i] || 0;\n        const counted = getStringWidth(value);\n        columnWidths[i] = MathMax(width\x2C counted);\n        columnRightAlign[i] &= canRightAlign(value);\n      }\n    }\n\n    const divider = ArrayPrototypeMap(\n      columnWidths\x2C\n      (i) => StringPrototypeRepeat(tableChars.middleMiddle\x2C i + 2)\x2C\n    );\n\n    let result =\n      `${tableChars.topLeft}${\n        ArrayPrototypeJoin(divider\x2C tableChars.topMiddle)\n      }` +\n      `${tableChars.topRight}\\n${renderRow(head\x2C columnWidths)}\\n` +\n      `${tableChars.leftMiddle}${\n        ArrayPrototypeJoin(divider\x2C tableChars.rowMiddle)\n      }` +\n      `${tableChars.rightMiddle}\\n`;\n\n    for (const row of rows) {\n      result += `${renderRow(row\x2C columnWidths\x2C columnRightAlign)}\\n`;\n    }\n\n    result +=\n      `${tableChars.bottomLeft}${\n        ArrayPrototypeJoin(divider\x2C tableChars.bottomMiddle)\n      }` +\n      tableChars.bottomRight;\n\n    return result;\n  }\n  /* End of forked part */\n\n  const DEFAULT_INSPECT_OPTIONS = {\n    depth: 4\x2C\n    indentLevel: 0\x2C\n    sorted: false\x2C\n    trailingComma: false\x2C\n    compact: true\x2C\n    iterableLimit: 100\x2C\n    showProxy: false\x2C\n    colors: false\x2C\n    getters: false\x2C\n    showHidden: false\x2C\n  };\n\n  const DEFAULT_INDENT = "  "; // Default indent string\n\n  const LINE_BREAKING_LENGTH = 80;\n  const MIN_GROUP_LENGTH = 6;\n  const STR_ABBREVIATE_SIZE = 100;\n\n  const PROMISE_STRING_BASE_LENGTH = 12;\n\n  class CSI {\n    static kClear = "\\x1b[1;1H";\n    static kClearScreenDown = "\\x1b[0J";\n  }\n\n  function getClassInstanceName(instance) {\n    if (typeof instance != "object") {\n      return "";\n    }\n    const constructor = instance?.constructor;\n    if (typeof constructor == "function") {\n      return constructor.name ?? "";\n    }\n    return "";\n  }\n\n  function maybeColor(fn\x2C inspectOptions) {\n    return inspectOptions.colors ? fn : (s) => s;\n  }\n\n  function inspectFunction(value\x2C level\x2C inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    if (customInspect in value && typeof value[customInspect] === "function") {\n      return String(value[customInspect](inspect));\n    }\n    // Might be Function/AsyncFunction/GeneratorFunction/AsyncGeneratorFunction\n    let cstrName = ObjectGetPrototypeOf(value)?.constructor?.name;\n    if (!cstrName) {\n      // If prototype is removed or broken\x2C\n      // use generic 'Function' instead.\n      cstrName = "Function";\n    }\n\n    // Our function may have properties\x2C so we want to format those\n    // as if our function was an object\n    // If we didn't find any properties\x2C we will just append an\n    // empty suffix.\n    let suffix = ``;\n    if (\n      ObjectKeys(value).length > 0 ||\n      ObjectGetOwnPropertySymbols(value).length > 0\n    ) {\n      const propString = inspectRawObject(value\x2C level\x2C inspectOptions);\n      // Filter out the empty string for the case we only have\n      // non-enumerable symbols.\n      if (\n        propString.length > 0 &&\n        propString !== "{}"\n      ) {\n        suffix = ` ${propString}`;\n      }\n    }\n\n    if (value.name && value.name !== "anonymous") {\n      // from MDN spec\n      return cyan(`[${cstrName}: ${value.name}]`) + suffix;\n    }\n    return cyan(`[${cstrName}]`) + suffix;\n  }\n\n  function inspectIterable(\n    value\x2C\n    level\x2C\n    options\x2C\n    inspectOptions\x2C\n  ) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    if (level >= inspectOptions.depth) {\n      return cyan(`[${options.typeName}]`);\n    }\n\n    const entries = [];\n    let iter;\n    let valueIsTypedArray = false;\n\n    switch (options.typeName) {\n      case "Map":\n        iter = MapPrototypeEntries(value);\n        break;\n      case "Set":\n        iter = SetPrototypeEntries(value);\n        break;\n      case "Array":\n        iter = ArrayPrototypeEntries(value);\n        break;\n      default:\n        if (isTypedArray(value)) {\n          iter = ArrayPrototypeEntries(value);\n          valueIsTypedArray = true;\n        } else {\n          throw new TypeError("unreachable");\n        }\n    }\n\n    let entriesLength = 0;\n    const next = () => {\n      return iter.next();\n    };\n    while (true) {\n      let el;\n      try {\n        const res = iter.next();\n        if (res.done) {\n          break;\n        }\n        el = res.value;\n      } catch (err) {\n        if (valueIsTypedArray) {\n          // TypedArray.prototype.entries doesn't throw\x2C unless the ArrayBuffer\n          // is detached. We don't want to show the exception in that case\x2C so\n          // we catch it here and pretend the ArrayBuffer has no entries (like\n          // Chrome DevTools does).\n          break;\n        }\n        throw err;\n      }\n      if (entriesLength < inspectOptions.iterableLimit) {\n        ArrayPrototypePush(\n          entries\x2C\n          options.entryHandler(\n            el\x2C\n            level + 1\x2C\n            inspectOptions\x2C\n            FunctionPrototypeBind(next\x2C iter)\x2C\n          )\x2C\n        );\n      }\n      entriesLength++;\n    }\n\n    if (options.sort) {\n      ArrayPrototypeSort(entries);\n    }\n\n    if (entriesLength > inspectOptions.iterableLimit) {\n      const nmore = entriesLength - inspectOptions.iterableLimit;\n      ArrayPrototypePush(entries\x2C `... ${nmore} more items`);\n    }\n\n    const iPrefix = `${options.displayName ? options.displayName + " " : ""}`;\n\n    const initIndentation = `\\n${\n      StringPrototypeRepeat(DEFAULT_INDENT\x2C level + 1)\n    }`;\n    const entryIndentation = `\x2C\\n${\n      StringPrototypeRepeat(DEFAULT_INDENT\x2C level + 1)\n    }`;\n    const closingIndentation = `${inspectOptions.trailingComma ? "\x2C" : ""}\\n${\n      StringPrototypeRepeat(DEFAULT_INDENT\x2C level)\n    }`;\n\n    let iContent;\n    if (options.group && entries.length > MIN_GROUP_LENGTH) {\n      const groups = groupEntries(entries\x2C level\x2C value);\n      iContent = `${initIndentation}${\n        ArrayPrototypeJoin(groups\x2C entryIndentation)\n      }${closingIndentation}`;\n    } else {\n      iContent = entries.length === 0\n        ? ""\n        : ` ${ArrayPrototypeJoin(entries\x2C "\x2C ")} `;\n      if (\n        colors.stripColor(iContent).length > LINE_BREAKING_LENGTH ||\n        !inspectOptions.compact\n      ) {\n        iContent = `${initIndentation}${\n          ArrayPrototypeJoin(entries\x2C entryIndentation)\n        }${closingIndentation}`;\n      }\n    }\n\n    return `${iPrefix}${options.delims[0]}${iContent}${options.delims[1]}`;\n  }\n\n  // Ported from Node.js\n  // Copyright Node.js contributors. All rights reserved.\n  function groupEntries(\n    entries\x2C\n    level\x2C\n    value\x2C\n    iterableLimit = 100\x2C\n  ) {\n    let totalLength = 0;\n    let maxLength = 0;\n    let entriesLength = entries.length;\n    if (iterableLimit < entriesLength) {\n      // This makes sure the "... n more items" part is not taken into account.\n      entriesLength--;\n    }\n    const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\n    const dataLen = new Array(entriesLength);\n    // Calculate the total length of all output entries and the individual max\n    // entries length of all output entries.\n    // IN PROGRESS: Colors are being taken into account.\n    for (let i = 0; i < entriesLength; i++) {\n      // Taking colors into account: removing the ANSI color\n      // codes from the string before measuring its length\n      const len = colors.stripColor(entries[i]).length;\n      dataLen[i] = len;\n      totalLength += len + separatorSpace;\n      if (maxLength < len) maxLength = len;\n    }\n    // Add two to `maxLength` as we add a single whitespace character plus a comma\n    // in-between two entries.\n    const actualMax = maxLength + separatorSpace;\n    // Check if at least three entries fit next to each other and prevent grouping\n    // of arrays that contains entries of very different length (i.e.\x2C if a single\n    // entry is longer than 1/5 of all other entries combined). Otherwise the\n    // space in-between small entries would be enormous.\n    if (\n      actualMax * 3 + (level + 1) < LINE_BREAKING_LENGTH &&\n      (totalLength / actualMax > 5 || maxLength <= 6)\n    ) {\n      const approxCharHeights = 2.5;\n      const averageBias = MathSqrt(actualMax - totalLength / entries.length);\n      const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\n      // Dynamically check how many columns seem possible.\n      const columns = MathMin(\n        // Ideally a square should be drawn. We expect a character to be about 2.5\n        // times as high as wide. This is the area formula to calculate a square\n        // which contains n rectangles of size `actualMax * approxCharHeights`.\n        // Divide that by `actualMax` to receive the correct number of columns.\n        // The added bias increases the columns for short entries.\n        MathRound(\n          MathSqrt(approxCharHeights * biasedMax * entriesLength) / biasedMax\x2C\n        )\x2C\n        // Do not exceed the breakLength.\n        MathFloor((LINE_BREAKING_LENGTH - (level + 1)) / actualMax)\x2C\n        // Limit the columns to a maximum of fifteen.\n        15\x2C\n      );\n      // Return with the original output if no grouping should happen.\n      if (columns <= 1) {\n        return entries;\n      }\n      const tmp = [];\n      const maxLineLength = [];\n      for (let i = 0; i < columns; i++) {\n        let lineMaxLength = 0;\n        for (let j = i; j < entries.length; j += columns) {\n          if (dataLen[j] > lineMaxLength) lineMaxLength = dataLen[j];\n        }\n        lineMaxLength += separatorSpace;\n        maxLineLength[i] = lineMaxLength;\n      }\n      let order = "padStart";\n      if (value !== undefined) {\n        for (let i = 0; i < entries.length; i++) {\n          if (\n            typeof value[i] !== "number" &&\n            typeof value[i] !== "bigint"\n          ) {\n            order = "padEnd";\n            break;\n          }\n        }\n      }\n      // Each iteration creates a single line of grouped entries.\n      for (let i = 0; i < entriesLength; i += columns) {\n        // The last lines may contain less entries than columns.\n        const max = MathMin(i + columns\x2C entriesLength);\n        let str = "";\n        let j = i;\n        for (; j < max - 1; j++) {\n          const lengthOfColorCodes = entries[j].length - dataLen[j];\n          const padding = maxLineLength[j - i] + lengthOfColorCodes;\n          str += `${entries[j]}\x2C `[order](padding\x2C " ");\n        }\n        if (order === "padStart") {\n          const lengthOfColorCodes = entries[j].length - dataLen[j];\n          const padding = maxLineLength[j - i] +\n            lengthOfColorCodes -\n            separatorSpace;\n          str += StringPrototypePadStart(entries[j]\x2C padding\x2C " ");\n        } else {\n          str += entries[j];\n        }\n        ArrayPrototypePush(tmp\x2C str);\n      }\n      if (iterableLimit < entries.length) {\n        ArrayPrototypePush(tmp\x2C entries[entriesLength]);\n      }\n      entries = tmp;\n    }\n    return entries;\n  }\n\n  function _inspectValue(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const proxyDetails = core.getProxyDetails(value);\n    if (proxyDetails != null && inspectOptions.showProxy) {\n      return inspectProxy(proxyDetails\x2C level\x2C inspectOptions);\n    }\n\n    const green = maybeColor(colors.green\x2C inspectOptions);\n    const yellow = maybeColor(colors.yellow\x2C inspectOptions);\n    const gray = maybeColor(colors.gray\x2C inspectOptions);\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    const bold = maybeColor(colors.bold\x2C inspectOptions);\n    const red = maybeColor(colors.red\x2C inspectOptions);\n\n    switch (typeof value) {\n      case "string":\n        return green(quoteString(value));\n      case "number": // Numbers are yellow\n        // Special handling of -0\n        return yellow(ObjectIs(value\x2C -0) ? "-0" : `${value}`);\n      case "boolean": // booleans are yellow\n        return yellow(String(value));\n      case "undefined": // undefined is gray\n        return gray(String(value));\n      case "symbol": // Symbols are green\n        return green(maybeQuoteSymbol(value));\n      case "bigint": // Bigints are yellow\n        return yellow(`${value}n`);\n      case "function": // Function string is cyan\n        if (ctxHas(value)) {\n          // Circular string is cyan\n          return cyan("[Circular]");\n        }\n\n        return inspectFunction(value\x2C level\x2C inspectOptions);\n      case "object": // null is bold\n        if (value === null) {\n          return bold("null");\n        }\n\n        if (ctxHas(value)) {\n          // Circular string is cyan\n          return cyan("[Circular]");\n        }\n        return inspectObject(value\x2C level\x2C inspectOptions);\n      default:\n        // Not implemented is red\n        return red("[Not Implemented]");\n    }\n  }\n\n  function inspectValue(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    ArrayPrototypePush(CTX_STACK\x2C value);\n    let x;\n    try {\n      x = _inspectValue(value\x2C level\x2C inspectOptions);\n    } finally {\n      ArrayPrototypePop(CTX_STACK);\n    }\n    return x;\n  }\n\n  // We can match Node's quoting behavior exactly by swapping the double quote and\n  // single quote in this array. That would give preference to single quotes.\n  // However\x2C we prefer double quotes as the default.\n  const QUOTES = ['"'\x2C "'"\x2C "`"];\n\n  /** Surround the string in quotes.\n   *\n   * The quote symbol is chosen by taking the first of the `QUOTES` array which\n   * does not occur in the string. If they all occur\x2C settle with `QUOTES[0]`.\n   *\n   * Insert a backslash before any occurrence of the chosen quote symbol and\n   * before any backslash.\n   */\n  function quoteString(string) {\n    const quote =\n      ArrayPrototypeFind(QUOTES\x2C (c) => !StringPrototypeIncludes(string\x2C c)) ??\n        QUOTES[0];\n    const escapePattern = new RegExp(`(?=[${quote}\\\\\\\\])`\x2C "g");\n    string = StringPrototypeReplace(string\x2C escapePattern\x2C "\\\\");\n    string = replaceEscapeSequences(string);\n    return `${quote}${string}${quote}`;\n  }\n\n  // Replace escape sequences that can modify output.\n  function replaceEscapeSequences(string) {\n    return StringPrototypeReplace(\n      StringPrototypeReplace(\n        StringPrototypeReplace(\n          StringPrototypeReplace(\n            StringPrototypeReplace(\n              StringPrototypeReplace(\n                StringPrototypeReplace(string\x2C /[\\b]/g\x2C "\\\\b")\x2C\n                /\\f/g\x2C\n                "\\\\f"\x2C\n              )\x2C\n              /\\n/g\x2C\n              "\\\\n"\x2C\n            )\x2C\n            /\\r/g\x2C\n            "\\\\r"\x2C\n          )\x2C\n          /\\t/g\x2C\n          "\\\\t"\x2C\n        )\x2C\n        /\\v/g\x2C\n        "\\\\v"\x2C\n      )\x2C\n      // deno-lint-ignore no-control-regex\n      /[\\x00-\\x1f\\x7f-\\x9f]/g\x2C\n      (c) =>\n        "\\\\x" +\n        StringPrototypePadStart(\n          NumberPrototypeToString(StringPrototypeCharCodeAt(c\x2C 0)\x2C 16)\x2C\n          2\x2C\n          "0"\x2C\n        )\x2C\n    );\n  }\n\n  // Surround a string with quotes when it is required (e.g the string not a valid identifier).\n  function maybeQuoteString(string) {\n    if (RegExpPrototypeTest(/^[a-zA-Z_][a-zA-Z_0-9]*$/\x2C string)) {\n      return replaceEscapeSequences(string);\n    }\n\n    return quoteString(string);\n  }\n\n  // Surround a symbol's description in quotes when it is required (e.g the description has non printable characters).\n  function maybeQuoteSymbol(symbol) {\n    if (symbol.description === undefined) {\n      return SymbolPrototypeToString(symbol);\n    }\n\n    if (RegExpPrototypeTest(/^[a-zA-Z_][a-zA-Z_.0-9]*$/\x2C symbol.description)) {\n      return SymbolPrototypeToString(symbol);\n    }\n\n    return `Symbol(${quoteString(symbol.description)})`;\n  }\n\n  const CTX_STACK = [];\n  function ctxHas(x) {\n    // Only check parent contexts\n    return ArrayPrototypeIncludes(\n      ArrayPrototypeSlice(CTX_STACK\x2C 0\x2C CTX_STACK.length - 1)\x2C\n      x\x2C\n    );\n  }\n\n  // Print strings when they are inside of arrays or objects with quotes\n  function inspectValueWithQuotes(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const green = maybeColor(colors.green\x2C inspectOptions);\n    switch (typeof value) {\n      case "string": {\n        const trunc = value.length > STR_ABBREVIATE_SIZE\n          ? StringPrototypeSlice(value\x2C 0\x2C STR_ABBREVIATE_SIZE) + "..."\n          : value;\n        return green(quoteString(trunc)); // Quoted strings are green\n      }\n      default:\n        return inspectValue(value\x2C level\x2C inspectOptions);\n    }\n  }\n\n  function inspectArray(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const gray = maybeColor(colors.gray\x2C inspectOptions);\n    const options = {\n      typeName: "Array"\x2C\n      displayName: ""\x2C\n      delims: ["["\x2C "]"]\x2C\n      entryHandler: (entry\x2C level\x2C inspectOptions\x2C next) => {\n        const [index\x2C val] = entry;\n        let i = index;\n        if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\n          i++;\n          while (!ObjectPrototypeHasOwnProperty(value\x2C i) && i < value.length) {\n            next();\n            i++;\n          }\n          const emptyItems = i - index;\n          const ending = emptyItems > 1 ? "s" : "";\n          return gray(`<${emptyItems} empty item${ending}>`);\n        } else {\n          return inspectValueWithQuotes(val\x2C level\x2C inspectOptions);\n        }\n      }\x2C\n      group: inspectOptions.compact\x2C\n      sort: false\x2C\n    };\n    return inspectIterable(value\x2C level\x2C options\x2C inspectOptions);\n  }\n\n  function inspectTypedArray(\n    typedArrayName\x2C\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const valueLength = value.length;\n    const options = {\n      typeName: typedArrayName\x2C\n      displayName: `${typedArrayName}(${valueLength})`\x2C\n      delims: ["["\x2C "]"]\x2C\n      entryHandler: (entry\x2C level\x2C inspectOptions) => {\n        const val = entry[1];\n        return inspectValueWithQuotes(val\x2C level + 1\x2C inspectOptions);\n      }\x2C\n      group: inspectOptions.compact\x2C\n      sort: false\x2C\n    };\n    return inspectIterable(value\x2C level\x2C options\x2C inspectOptions);\n  }\n\n  function inspectSet(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const options = {\n      typeName: "Set"\x2C\n      displayName: "Set"\x2C\n      delims: ["{"\x2C "}"]\x2C\n      entryHandler: (entry\x2C level\x2C inspectOptions) => {\n        const val = entry[1];\n        return inspectValueWithQuotes(val\x2C level + 1\x2C inspectOptions);\n      }\x2C\n      group: false\x2C\n      sort: inspectOptions.sorted\x2C\n    };\n    return inspectIterable(value\x2C level\x2C options\x2C inspectOptions);\n  }\n\n  function inspectMap(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const options = {\n      typeName: "Map"\x2C\n      displayName: "Map"\x2C\n      delims: ["{"\x2C "}"]\x2C\n      entryHandler: (entry\x2C level\x2C inspectOptions) => {\n        const [key\x2C val] = entry;\n        return `${\n          inspectValueWithQuotes(\n            key\x2C\n            level + 1\x2C\n            inspectOptions\x2C\n          )\n        } => ${inspectValueWithQuotes(val\x2C level + 1\x2C inspectOptions)}`;\n      }\x2C\n      group: false\x2C\n      sort: inspectOptions.sorted\x2C\n    };\n    return inspectIterable(\n      value\x2C\n      level\x2C\n      options\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  function inspectWeakSet(inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    return `WeakSet { ${cyan("[items unknown]")} }`; // as seen in Node\x2C with cyan color\n  }\n\n  function inspectWeakMap(inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    return `WeakMap { ${cyan("[items unknown]")} }`; // as seen in Node\x2C with cyan color\n  }\n\n  function inspectDate(value\x2C inspectOptions) {\n    // without quotes\x2C ISO format\x2C in magenta like before\n    const magenta = maybeColor(colors.magenta\x2C inspectOptions);\n    return magenta(\n      isInvalidDate(value) ? "Invalid Date" : DatePrototypeToISOString(value)\x2C\n    );\n  }\n\n  function inspectRegExp(value\x2C inspectOptions) {\n    const red = maybeColor(colors.red\x2C inspectOptions);\n    return red(RegExpPrototypeToString(value)); // RegExps are red\n  }\n\n  function inspectError(value) {\n    const causes = [];\n\n    let err = value;\n    while (\n      err.cause instanceof Error && err.cause !== value &&\n      !ArrayPrototypeIncludes(causes\x2C err.cause) // circular check\n    ) {\n      ArrayPrototypePush(causes\x2C err.cause);\n      err = err.cause;\n    }\n\n    return `${value.stack}${\n      ArrayPrototypeJoin(\n        ArrayPrototypeMap(causes\x2C (cause) => `\\nCaused by ${cause.stack}`)\x2C\n        ""\x2C\n      )\n    }`;\n  }\n\n  function inspectStringObject(value\x2C inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    return cyan(`[String: "${StringPrototypeToString(value)}"]`); // wrappers are in cyan\n  }\n\n  function inspectBooleanObject(value\x2C inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    return cyan(`[Boolean: ${BooleanPrototypeToString(value)}]`); // wrappers are in cyan\n  }\n\n  function inspectNumberObject(value\x2C inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    // Special handling of -0\n    return cyan(\n      `[Number: ${\n        ObjectIs(NumberPrototypeValueOf(value)\x2C -0)\n          ? "-0"\n          : NumberPrototypeToString(value)\n      }]`\x2C\n    ); // wrappers are in cyan\n  }\n\n  function inspectBigIntObject(value\x2C inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    return cyan(`[BigInt: ${BigIntPrototypeToString(value)}n]`); // wrappers are in cyan\n  }\n\n  function inspectSymbolObject(value\x2C inspectOptions) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    return cyan(`[Symbol: ${maybeQuoteSymbol(SymbolPrototypeValueOf(value))}]`); // wrappers are in cyan\n  }\n\n  const PromiseState = {\n    Pending: 0\x2C\n    Fulfilled: 1\x2C\n    Rejected: 2\x2C\n  };\n\n  function inspectPromise(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n    const red = maybeColor(colors.red\x2C inspectOptions);\n\n    const [state\x2C result] = core.getPromiseDetails(value);\n\n    if (state === PromiseState.Pending) {\n      return `Promise { ${cyan("<pending>")} }`;\n    }\n\n    const prefix = state === PromiseState.Fulfilled\n      ? ""\n      : `${red("<rejected>")} `;\n\n    const str = `${prefix}${\n      inspectValueWithQuotes(\n        result\x2C\n        level + 1\x2C\n        inspectOptions\x2C\n      )\n    }`;\n\n    if (str.length + PROMISE_STRING_BASE_LENGTH > LINE_BREAKING_LENGTH) {\n      return `Promise {\\n${\n        StringPrototypeRepeat(DEFAULT_INDENT\x2C level + 1)\n      }${str}\\n}`;\n    }\n\n    return `Promise { ${str} }`;\n  }\n\n  function inspectProxy(\n    targetAndHandler\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    return `Proxy ${inspectArray(targetAndHandler\x2C level\x2C inspectOptions)}`;\n  }\n\n  function inspectRawObject(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    const cyan = maybeColor(colors.cyan\x2C inspectOptions);\n\n    if (level >= inspectOptions.depth) {\n      return cyan("[Object]"); // wrappers are in cyan\n    }\n\n    let baseString;\n\n    let shouldShowDisplayName = false;\n    let displayName = value[\n      SymbolToStringTag\n    ];\n    if (!displayName) {\n      displayName = getClassInstanceName(value);\n    }\n    if (\n      displayName && displayName !== "Object" && displayName !== "anonymous"\n    ) {\n      shouldShowDisplayName = true;\n    }\n\n    const entries = [];\n    const stringKeys = ObjectKeys(value);\n    const symbolKeys = ObjectGetOwnPropertySymbols(value);\n    if (inspectOptions.sorted) {\n      ArrayPrototypeSort(stringKeys);\n      ArrayPrototypeSort(\n        symbolKeys\x2C\n        (s1\x2C s2) =>\n          StringPrototypeLocaleCompare(\n            s1.description ?? ""\x2C\n            s2.description ?? ""\x2C\n          )\x2C\n      );\n    }\n\n    const red = maybeColor(colors.red\x2C inspectOptions);\n\n    for (const key of stringKeys) {\n      if (inspectOptions.getters) {\n        let propertyValue;\n        let error = null;\n        try {\n          propertyValue = value[key];\n        } catch (error_) {\n          error = error_;\n        }\n        const inspectedValue = error == null\n          ? inspectValueWithQuotes(\n            propertyValue\x2C\n            level + 1\x2C\n            inspectOptions\x2C\n          )\n          : red(`[Thrown ${error.name}: ${error.message}]`);\n        ArrayPrototypePush(\n          entries\x2C\n          `${maybeQuoteString(key)}: ${inspectedValue}`\x2C\n        );\n      } else {\n        const descriptor = ObjectGetOwnPropertyDescriptor(value\x2C key);\n        if (descriptor.get !== undefined && descriptor.set !== undefined) {\n          ArrayPrototypePush(\n            entries\x2C\n            `${maybeQuoteString(key)}: [Getter/Setter]`\x2C\n          );\n        } else if (descriptor.get !== undefined) {\n          ArrayPrototypePush(entries\x2C `${maybeQuoteString(key)}: [Getter]`);\n        } else {\n          ArrayPrototypePush(\n            entries\x2C\n            `${maybeQuoteString(key)}: ${\n              inspectValueWithQuotes(value[key]\x2C level + 1\x2C inspectOptions)\n            }`\x2C\n          );\n        }\n      }\n    }\n\n    for (const key of symbolKeys) {\n      if (\n        !inspectOptions.showHidden &&\n        !propertyIsEnumerable(value\x2C key)\n      ) {\n        continue;\n      }\n\n      if (inspectOptions.getters) {\n        let propertyValue;\n        let error;\n        try {\n          propertyValue = value[key];\n        } catch (error_) {\n          error = error_;\n        }\n        const inspectedValue = error == null\n          ? inspectValueWithQuotes(\n            propertyValue\x2C\n            level + 1\x2C\n            inspectOptions\x2C\n          )\n          : red(`Thrown ${error.name}: ${error.message}`);\n        ArrayPrototypePush(\n          entries\x2C\n          `[${maybeQuoteSymbol(key)}]: ${inspectedValue}`\x2C\n        );\n      } else {\n        const descriptor = ObjectGetOwnPropertyDescriptor(value\x2C key);\n        if (descriptor.get !== undefined && descriptor.set !== undefined) {\n          ArrayPrototypePush(\n            entries\x2C\n            `[${maybeQuoteSymbol(key)}]: [Getter/Setter]`\x2C\n          );\n        } else if (descriptor.get !== undefined) {\n          ArrayPrototypePush(entries\x2C `[${maybeQuoteSymbol(key)}]: [Getter]`);\n        } else {\n          ArrayPrototypePush(\n            entries\x2C\n            `[${maybeQuoteSymbol(key)}]: ${\n              inspectValueWithQuotes(value[key]\x2C level + 1\x2C inspectOptions)\n            }`\x2C\n          );\n        }\n      }\n    }\n\n    // Making sure color codes are ignored when calculating the total length\n    const totalLength = entries.length + level +\n      colors.stripColor(ArrayPrototypeJoin(entries\x2C "")).length;\n\n    if (entries.length === 0) {\n      baseString = "{}";\n    } else if (totalLength > LINE_BREAKING_LENGTH || !inspectOptions.compact) {\n      const entryIndent = StringPrototypeRepeat(DEFAULT_INDENT\x2C level + 1);\n      const closingIndent = StringPrototypeRepeat(DEFAULT_INDENT\x2C level);\n      baseString = `{\\n${entryIndent}${\n        ArrayPrototypeJoin(entries\x2C `\x2C\\n${entryIndent}`)\n      }${inspectOptions.trailingComma ? "\x2C" : ""}\\n${closingIndent}}`;\n    } else {\n      baseString = `{ ${ArrayPrototypeJoin(entries\x2C "\x2C ")} }`;\n    }\n\n    if (shouldShowDisplayName) {\n      baseString = `${displayName} ${baseString}`;\n    }\n\n    return baseString;\n  }\n\n  function inspectObject(\n    value\x2C\n    level\x2C\n    inspectOptions\x2C\n  ) {\n    if (customInspect in value && typeof value[customInspect] === "function") {\n      return String(value[customInspect](inspect));\n    }\n    // This non-unique symbol is used to support op_crates\x2C ie.\n    // in extensions/web we don't want to depend on public\n    // Symbol.for("Deno.customInspect") symbol defined in the public API.\n    // Internal only\x2C shouldn't be used by users.\n    const privateCustomInspect = SymbolFor("Deno.privateCustomInspect");\n    if (\n      privateCustomInspect in value &&\n      typeof value[privateCustomInspect] === "function"\n    ) {\n      // TODO(nayeemrmn): `inspect` is passed as an argument because custom\n      // inspect implementations in `extensions` need it\x2C but may not have access\n      // to the `Deno` namespace in web workers. Remove when the `Deno`\n      // namespace is always enabled.\n      return String(value[privateCustomInspect](inspect));\n    }\n    if (value instanceof Error) {\n      return inspectError(value);\n    } else if (ArrayIsArray(value)) {\n      return inspectArray(value\x2C level\x2C inspectOptions);\n    } else if (value instanceof Number) {\n      return inspectNumberObject(value\x2C inspectOptions);\n    } else if (value instanceof BigInt) {\n      return inspectBigIntObject(value\x2C inspectOptions);\n    } else if (value instanceof Boolean) {\n      return inspectBooleanObject(value\x2C inspectOptions);\n    } else if (value instanceof String) {\n      return inspectStringObject(value\x2C inspectOptions);\n    } else if (value instanceof Symbol) {\n      return inspectSymbolObject(value\x2C inspectOptions);\n    } else if (value instanceof Promise) {\n      return inspectPromise(value\x2C level\x2C inspectOptions);\n    } else if (value instanceof RegExp) {\n      return inspectRegExp(value\x2C inspectOptions);\n    } else if (value instanceof Date) {\n      return inspectDate(value\x2C inspectOptions);\n    } else if (value instanceof Set) {\n      return inspectSet(value\x2C level\x2C inspectOptions);\n    } else if (value instanceof Map) {\n      return inspectMap(value\x2C level\x2C inspectOptions);\n    } else if (value instanceof WeakSet) {\n      return inspectWeakSet(inspectOptions);\n    } else if (value instanceof WeakMap) {\n      return inspectWeakMap(inspectOptions);\n    } else if (isTypedArray(value)) {\n      return inspectTypedArray(\n        ObjectGetPrototypeOf(value).constructor.name\x2C\n        value\x2C\n        level\x2C\n        inspectOptions\x2C\n      );\n    } else {\n      // Otherwise\x2C default object formatting\n      return inspectRawObject(value\x2C level\x2C inspectOptions);\n    }\n  }\n\n  const colorKeywords = new Map([\n    ["black"\x2C "#000000"]\x2C\n    ["silver"\x2C "#c0c0c0"]\x2C\n    ["gray"\x2C "#808080"]\x2C\n    ["white"\x2C "#ffffff"]\x2C\n    ["maroon"\x2C "#800000"]\x2C\n    ["red"\x2C "#ff0000"]\x2C\n    ["purple"\x2C "#800080"]\x2C\n    ["fuchsia"\x2C "#ff00ff"]\x2C\n    ["green"\x2C "#008000"]\x2C\n    ["lime"\x2C "#00ff00"]\x2C\n    ["olive"\x2C "#808000"]\x2C\n    ["yellow"\x2C "#ffff00"]\x2C\n    ["navy"\x2C "#000080"]\x2C\n    ["blue"\x2C "#0000ff"]\x2C\n    ["teal"\x2C "#008080"]\x2C\n    ["aqua"\x2C "#00ffff"]\x2C\n    ["orange"\x2C "#ffa500"]\x2C\n    ["aliceblue"\x2C "#f0f8ff"]\x2C\n    ["antiquewhite"\x2C "#faebd7"]\x2C\n    ["aquamarine"\x2C "#7fffd4"]\x2C\n    ["azure"\x2C "#f0ffff"]\x2C\n    ["beige"\x2C "#f5f5dc"]\x2C\n    ["bisque"\x2C "#ffe4c4"]\x2C\n    ["blanchedalmond"\x2C "#ffebcd"]\x2C\n    ["blueviolet"\x2C "#8a2be2"]\x2C\n    ["brown"\x2C "#a52a2a"]\x2C\n    ["burlywood"\x2C "#deb887"]\x2C\n    ["cadetblue"\x2C "#5f9ea0"]\x2C\n    ["chartreuse"\x2C "#7fff00"]\x2C\n    ["chocolate"\x2C "#d2691e"]\x2C\n    ["coral"\x2C "#ff7f50"]\x2C\n    ["cornflowerblue"\x2C "#6495ed"]\x2C\n    ["cornsilk"\x2C "#fff8dc"]\x2C\n    ["crimson"\x2C "#dc143c"]\x2C\n    ["cyan"\x2C "#00ffff"]\x2C\n    ["darkblue"\x2C "#00008b"]\x2C\n    ["darkcyan"\x2C "#008b8b"]\x2C\n    ["darkgoldenrod"\x2C "#b8860b"]\x2C\n    ["darkgray"\x2C "#a9a9a9"]\x2C\n    ["darkgreen"\x2C "#006400"]\x2C\n    ["darkgrey"\x2C "#a9a9a9"]\x2C\n    ["darkkhaki"\x2C "#bdb76b"]\x2C\n    ["darkmagenta"\x2C "#8b008b"]\x2C\n    ["darkolivegreen"\x2C "#556b2f"]\x2C\n    ["darkorange"\x2C "#ff8c00"]\x2C\n    ["darkorchid"\x2C "#9932cc"]\x2C\n    ["darkred"\x2C "#8b0000"]\x2C\n    ["darksalmon"\x2C "#e9967a"]\x2C\n    ["darkseagreen"\x2C "#8fbc8f"]\x2C\n    ["darkslateblue"\x2C "#483d8b"]\x2C\n    ["darkslategray"\x2C "#2f4f4f"]\x2C\n    ["darkslategrey"\x2C "#2f4f4f"]\x2C\n    ["darkturquoise"\x2C "#00ced1"]\x2C\n    ["darkviolet"\x2C "#9400d3"]\x2C\n    ["deeppink"\x2C "#ff1493"]\x2C\n    ["deepskyblue"\x2C "#00bfff"]\x2C\n    ["dimgray"\x2C "#696969"]\x2C\n    ["dimgrey"\x2C "#696969"]\x2C\n    ["dodgerblue"\x2C "#1e90ff"]\x2C\n    ["firebrick"\x2C "#b22222"]\x2C\n    ["floralwhite"\x2C "#fffaf0"]\x2C\n    ["forestgreen"\x2C "#228b22"]\x2C\n    ["gainsboro"\x2C "#dcdcdc"]\x2C\n    ["ghostwhite"\x2C "#f8f8ff"]\x2C\n    ["gold"\x2C "#ffd700"]\x2C\n    ["goldenrod"\x2C "#daa520"]\x2C\n    ["greenyellow"\x2C "#adff2f"]\x2C\n    ["grey"\x2C "#808080"]\x2C\n    ["honeydew"\x2C "#f0fff0"]\x2C\n    ["hotpink"\x2C "#ff69b4"]\x2C\n    ["indianred"\x2C "#cd5c5c"]\x2C\n    ["indigo"\x2C "#4b0082"]\x2C\n    ["ivory"\x2C "#fffff0"]\x2C\n    ["khaki"\x2C "#f0e68c"]\x2C\n    ["lavender"\x2C "#e6e6fa"]\x2C\n    ["lavenderblush"\x2C "#fff0f5"]\x2C\n    ["lawngreen"\x2C "#7cfc00"]\x2C\n    ["lemonchiffon"\x2C "#fffacd"]\x2C\n    ["lightblue"\x2C "#add8e6"]\x2C\n    ["lightcoral"\x2C "#f08080"]\x2C\n    ["lightcyan"\x2C "#e0ffff"]\x2C\n    ["lightgoldenrodyellow"\x2C "#fafad2"]\x2C\n    ["lightgray"\x2C "#d3d3d3"]\x2C\n    ["lightgreen"\x2C "#90ee90"]\x2C\n    ["lightgrey"\x2C "#d3d3d3"]\x2C\n    ["lightpink"\x2C "#ffb6c1"]\x2C\n    ["lightsalmon"\x2C "#ffa07a"]\x2C\n    ["lightseagreen"\x2C "#20b2aa"]\x2C\n    ["lightskyblue"\x2C "#87cefa"]\x2C\n    ["lightslategray"\x2C "#778899"]\x2C\n    ["lightslategrey"\x2C "#778899"]\x2C\n    ["lightsteelblue"\x2C "#b0c4de"]\x2C\n    ["lightyellow"\x2C "#ffffe0"]\x2C\n    ["limegreen"\x2C "#32cd32"]\x2C\n    ["linen"\x2C "#faf0e6"]\x2C\n    ["magenta"\x2C "#ff00ff"]\x2C\n    ["mediumaquamarine"\x2C "#66cdaa"]\x2C\n    ["mediumblue"\x2C "#0000cd"]\x2C\n    ["mediumorchid"\x2C "#ba55d3"]\x2C\n    ["mediumpurple"\x2C "#9370db"]\x2C\n    ["mediumseagreen"\x2C "#3cb371"]\x2C\n    ["mediumslateblue"\x2C "#7b68ee"]\x2C\n    ["mediumspringgreen"\x2C "#00fa9a"]\x2C\n    ["mediumturquoise"\x2C "#48d1cc"]\x2C\n    ["mediumvioletred"\x2C "#c71585"]\x2C\n    ["midnightblue"\x2C "#191970"]\x2C\n    ["mintcream"\x2C "#f5fffa"]\x2C\n    ["mistyrose"\x2C "#ffe4e1"]\x2C\n    ["moccasin"\x2C "#ffe4b5"]\x2C\n    ["navajowhite"\x2C "#ffdead"]\x2C\n    ["oldlace"\x2C "#fdf5e6"]\x2C\n    ["olivedrab"\x2C "#6b8e23"]\x2C\n    ["orangered"\x2C "#ff4500"]\x2C\n    ["orchid"\x2C "#da70d6"]\x2C\n    ["palegoldenrod"\x2C "#eee8aa"]\x2C\n    ["palegreen"\x2C "#98fb98"]\x2C\n    ["paleturquoise"\x2C "#afeeee"]\x2C\n    ["palevioletred"\x2C "#db7093"]\x2C\n    ["papayawhip"\x2C "#ffefd5"]\x2C\n    ["peachpuff"\x2C "#ffdab9"]\x2C\n    ["peru"\x2C "#cd853f"]\x2C\n    ["pink"\x2C "#ffc0cb"]\x2C\n    ["plum"\x2C "#dda0dd"]\x2C\n    ["powderblue"\x2C "#b0e0e6"]\x2C\n    ["rosybrown"\x2C "#bc8f8f"]\x2C\n    ["royalblue"\x2C "#4169e1"]\x2C\n    ["saddlebrown"\x2C "#8b4513"]\x2C\n    ["salmon"\x2C "#fa8072"]\x2C\n    ["sandybrown"\x2C "#f4a460"]\x2C\n    ["seagreen"\x2C "#2e8b57"]\x2C\n    ["seashell"\x2C "#fff5ee"]\x2C\n    ["sienna"\x2C "#a0522d"]\x2C\n    ["skyblue"\x2C "#87ceeb"]\x2C\n    ["slateblue"\x2C "#6a5acd"]\x2C\n    ["slategray"\x2C "#708090"]\x2C\n    ["slategrey"\x2C "#708090"]\x2C\n    ["snow"\x2C "#fffafa"]\x2C\n    ["springgreen"\x2C "#00ff7f"]\x2C\n    ["steelblue"\x2C "#4682b4"]\x2C\n    ["tan"\x2C "#d2b48c"]\x2C\n    ["thistle"\x2C "#d8bfd8"]\x2C\n    ["tomato"\x2C "#ff6347"]\x2C\n    ["turquoise"\x2C "#40e0d0"]\x2C\n    ["violet"\x2C "#ee82ee"]\x2C\n    ["wheat"\x2C "#f5deb3"]\x2C\n    ["whitesmoke"\x2C "#f5f5f5"]\x2C\n    ["yellowgreen"\x2C "#9acd32"]\x2C\n    ["rebeccapurple"\x2C "#663399"]\x2C\n  ]);\n\n  function parseCssColor(colorString) {\n    if (MapPrototypeHas(colorKeywords\x2C colorString)) {\n      colorString = MapPrototypeGet(colorKeywords\x2C colorString);\n    }\n    // deno-fmt-ignore\n    const hashMatch = StringPrototypeMatch(colorString\x2C /^#([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})?$/);\n    if (hashMatch != null) {\n      return [\n        Number(`0x${hashMatch[1]}`)\x2C\n        Number(`0x${hashMatch[2]}`)\x2C\n        Number(`0x${hashMatch[3]}`)\x2C\n      ];\n    }\n    // deno-fmt-ignore\n    const smallHashMatch = StringPrototypeMatch(colorString\x2C /^#([\\dA-Fa-f])([\\dA-Fa-f])([\\dA-Fa-f])([\\dA-Fa-f])?$/);\n    if (smallHashMatch != null) {\n      return [\n        Number(`0x${smallHashMatch[1]}0`)\x2C\n        Number(`0x${smallHashMatch[2]}0`)\x2C\n        Number(`0x${smallHashMatch[3]}0`)\x2C\n      ];\n    }\n    // deno-fmt-ignore\n    const rgbMatch = StringPrototypeMatch(colorString\x2C /^rgba?\\(\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*(\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*)?\\)$/);\n    if (rgbMatch != null) {\n      return [\n        MathRound(MathMax(0\x2C MathMin(255\x2C Number(rgbMatch[1]))))\x2C\n        MathRound(MathMax(0\x2C MathMin(255\x2C Number(rgbMatch[2]))))\x2C\n        MathRound(MathMax(0\x2C MathMin(255\x2C Number(rgbMatch[3]))))\x2C\n      ];\n    }\n    // deno-fmt-ignore\n    const hslMatch = StringPrototypeMatch(colorString\x2C /^hsla?\\(\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)%\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)%\\s*(\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*)?\\)$/);\n    if (hslMatch != null) {\n      // https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n      let h = Number(hslMatch[1]) % 360;\n      if (h < 0) {\n        h += 360;\n      }\n      const s = MathMax(0\x2C MathMin(100\x2C Number(hslMatch[2]))) / 100;\n      const l = MathMax(0\x2C MathMin(100\x2C Number(hslMatch[3]))) / 100;\n      const c = (1 - MathAbs(2 * l - 1)) * s;\n      const x = c * (1 - MathAbs((h / 60) % 2 - 1));\n      const m = l - c / 2;\n      let r_;\n      let g_;\n      let b_;\n      if (h < 60) {\n        [r_\x2C g_\x2C b_] = [c\x2C x\x2C 0];\n      } else if (h < 120) {\n        [r_\x2C g_\x2C b_] = [x\x2C c\x2C 0];\n      } else if (h < 180) {\n        [r_\x2C g_\x2C b_] = [0\x2C c\x2C x];\n      } else if (h < 240) {\n        [r_\x2C g_\x2C b_] = [0\x2C x\x2C c];\n      } else if (h < 300) {\n        [r_\x2C g_\x2C b_] = [x\x2C 0\x2C c];\n      } else {\n        [r_\x2C g_\x2C b_] = [c\x2C 0\x2C x];\n      }\n      return [\n        MathRound((r_ + m) * 255)\x2C\n        MathRound((g_ + m) * 255)\x2C\n        MathRound((b_ + m) * 255)\x2C\n      ];\n    }\n    return null;\n  }\n\n  function getDefaultCss() {\n    return {\n      backgroundColor: null\x2C\n      color: null\x2C\n      fontWeight: null\x2C\n      fontStyle: null\x2C\n      textDecorationColor: null\x2C\n      textDecorationLine: []\x2C\n    };\n  }\n\n  function parseCss(cssString) {\n    const css = getDefaultCss();\n\n    const rawEntries = [];\n    let inValue = false;\n    let currentKey = null;\n    let parenthesesDepth = 0;\n    let currentPart = "";\n    for (let i = 0; i < cssString.length; i++) {\n      const c = cssString[i];\n      if (c == "(") {\n        parenthesesDepth++;\n      } else if (parenthesesDepth > 0) {\n        if (c == ")") {\n          parenthesesDepth--;\n        }\n      } else if (inValue) {\n        if (c == ";") {\n          const value = StringPrototypeTrim(currentPart);\n          if (value != "") {\n            ArrayPrototypePush(rawEntries\x2C [currentKey\x2C value]);\n          }\n          currentKey = null;\n          currentPart = "";\n          inValue = false;\n          continue;\n        }\n      } else if (c == ":") {\n        currentKey = StringPrototypeTrim(currentPart);\n        currentPart = "";\n        inValue = true;\n        continue;\n      }\n      currentPart += c;\n    }\n    if (inValue && parenthesesDepth == 0) {\n      const value = StringPrototypeTrim(currentPart);\n      if (value != "") {\n        ArrayPrototypePush(rawEntries\x2C [currentKey\x2C value]);\n      }\n      currentKey = null;\n      currentPart = "";\n    }\n\n    for (const [key\x2C value] of rawEntries) {\n      if (key == "background-color") {\n        const color = parseCssColor(value);\n        if (color != null) {\n          css.backgroundColor = color;\n        }\n      } else if (key == "color") {\n        const color = parseCssColor(value);\n        if (color != null) {\n          css.color = color;\n        }\n      } else if (key == "font-weight") {\n        if (value == "bold") {\n          css.fontWeight = value;\n        }\n      } else if (key == "font-style") {\n        if (\n          ArrayPrototypeIncludes(["italic"\x2C "oblique"\x2C "oblique 14deg"]\x2C value)\n        ) {\n          css.fontStyle = "italic";\n        }\n      } else if (key == "text-decoration-line") {\n        css.textDecorationLine = [];\n        for (const lineType of StringPrototypeSplit(value\x2C /\\s+/g)) {\n          if (\n            ArrayPrototypeIncludes(\n              ["line-through"\x2C "overline"\x2C "underline"]\x2C\n              lineType\x2C\n            )\n          ) {\n            ArrayPrototypePush(css.textDecorationLine\x2C lineType);\n          }\n        }\n      } else if (key == "text-decoration-color") {\n        const color = parseCssColor(value);\n        if (color != null) {\n          css.textDecorationColor = color;\n        }\n      } else if (key == "text-decoration") {\n        css.textDecorationColor = null;\n        css.textDecorationLine = [];\n        for (const arg of StringPrototypeSplit(value\x2C /\\s+/g)) {\n          const maybeColor = parseCssColor(arg);\n          if (maybeColor != null) {\n            css.textDecorationColor = maybeColor;\n          } else if (\n            ArrayPrototypeIncludes(\n              ["line-through"\x2C "overline"\x2C "underline"]\x2C\n              arg\x2C\n            )\n          ) {\n            ArrayPrototypePush(css.textDecorationLine\x2C arg);\n          }\n        }\n      }\n    }\n\n    return css;\n  }\n\n  function colorEquals(color1\x2C color2) {\n    return color1?.[0] == color2?.[0] && color1?.[1] == color2?.[1] &&\n      color1?.[2] == color2?.[2];\n  }\n\n  function cssToAnsi(css\x2C prevCss = null) {\n    prevCss = prevCss ?? getDefaultCss();\n    let ansi = "";\n    if (!colorEquals(css.backgroundColor\x2C prevCss.backgroundColor)) {\n      if (css.backgroundColor != null) {\n        const [r\x2C g\x2C b] = css.backgroundColor;\n        ansi += `\\x1b[48;2;${r};${g};${b}m`;\n      } else {\n        ansi += "\\x1b[49m";\n      }\n    }\n    if (!colorEquals(css.color\x2C prevCss.color)) {\n      if (css.color != null) {\n        const [r\x2C g\x2C b] = css.color;\n        ansi += `\\x1b[38;2;${r};${g};${b}m`;\n      } else {\n        ansi += "\\x1b[39m";\n      }\n    }\n    if (css.fontWeight != prevCss.fontWeight) {\n      if (css.fontWeight == "bold") {\n        ansi += `\\x1b[1m`;\n      } else {\n        ansi += "\\x1b[22m";\n      }\n    }\n    if (css.fontStyle != prevCss.fontStyle) {\n      if (css.fontStyle == "italic") {\n        ansi += `\\x1b[3m`;\n      } else {\n        ansi += "\\x1b[23m";\n      }\n    }\n    if (!colorEquals(css.textDecorationColor\x2C prevCss.textDecorationColor)) {\n      if (css.textDecorationColor != null) {\n        const [r\x2C g\x2C b] = css.textDecorationColor;\n        ansi += `\\x1b[58;2;${r};${g};${b}m`;\n      } else {\n        ansi += "\\x1b[59m";\n      }\n    }\n    if (\n      ArrayPrototypeIncludes(css.textDecorationLine\x2C "line-through") !=\n        ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "line-through")\n    ) {\n      if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "line-through")) {\n        ansi += "\\x1b[9m";\n      } else {\n        ansi += "\\x1b[29m";\n      }\n    }\n    if (\n      ArrayPrototypeIncludes(css.textDecorationLine\x2C "overline") !=\n        ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "overline")\n    ) {\n      if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "overline")) {\n        ansi += "\\x1b[53m";\n      } else {\n        ansi += "\\x1b[55m";\n      }\n    }\n    if (\n      ArrayPrototypeIncludes(css.textDecorationLine\x2C "underline") !=\n        ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "underline")\n    ) {\n      if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "underline")) {\n        ansi += "\\x1b[4m";\n      } else {\n        ansi += "\\x1b[24m";\n      }\n    }\n    return ansi;\n  }\n\n  function inspectArgs(args\x2C inspectOptions = {}) {\n    const noColor = globalThis.Deno?.noColor ?? true;\n    const rInspectOptions = { ...DEFAULT_INSPECT_OPTIONS\x2C ...inspectOptions };\n    const first = args[0];\n    let a = 0;\n    let string = "";\n\n    if (typeof first == "string" && args.length > 1) {\n      a++;\n      // Index of the first not-yet-appended character. Use this so we only\n      // have to append to `string` when a substitution occurs / at the end.\n      let appendedChars = 0;\n      let usedStyle = false;\n      let prevCss = null;\n      for (let i = 0; i < first.length - 1; i++) {\n        if (first[i] == "%") {\n          const char = first[++i];\n          if (a < args.length) {\n            let formattedArg = null;\n            if (char == "s") {\n              // Format as a string.\n              formattedArg = String(args[a++]);\n            } else if (ArrayPrototypeIncludes(["d"\x2C "i"]\x2C char)) {\n              // Format as an integer.\n              const value = args[a++];\n              if (typeof value == "bigint") {\n                formattedArg = `${value}n`;\n              } else if (typeof value == "number") {\n                formattedArg = `${NumberParseInt(String(value))}`;\n              } else {\n                formattedArg = "NaN";\n              }\n            } else if (char == "f") {\n              // Format as a floating point value.\n              const value = args[a++];\n              if (typeof value == "number") {\n                formattedArg = `${value}`;\n              } else {\n                formattedArg = "NaN";\n              }\n            } else if (ArrayPrototypeIncludes(["O"\x2C "o"]\x2C char)) {\n              // Format as an object.\n              formattedArg = inspectValue(\n                args[a++]\x2C\n                0\x2C\n                rInspectOptions\x2C\n              );\n            } else if (char == "c") {\n              const value = args[a++];\n              if (!noColor) {\n                const css = parseCss(value);\n                formattedArg = cssToAnsi(css\x2C prevCss);\n                if (formattedArg != "") {\n                  usedStyle = true;\n                  prevCss = css;\n                }\n              } else {\n                formattedArg = "";\n              }\n            }\n\n            if (formattedArg != null) {\n              string += StringPrototypeSlice(first\x2C appendedChars\x2C i - 1) +\n                formattedArg;\n              appendedChars = i + 1;\n            }\n          }\n          if (char == "%") {\n            string += StringPrototypeSlice(first\x2C appendedChars\x2C i - 1) + "%";\n            appendedChars = i + 1;\n          }\n        }\n      }\n      string += StringPrototypeSlice(first\x2C appendedChars);\n      if (usedStyle) {\n        string += "\\x1b[0m";\n      }\n    }\n\n    for (; a < args.length; a++) {\n      if (a > 0) {\n        string += " ";\n      }\n      if (typeof args[a] == "string") {\n        string += args[a];\n      } else {\n        // Use default maximum depth for null or undefined arguments.\n        string += inspectValue(args[a]\x2C 0\x2C rInspectOptions);\n      }\n    }\n\n    if (rInspectOptions.indentLevel > 0) {\n      const groupIndent = StringPrototypeRepeat(\n        DEFAULT_INDENT\x2C\n        rInspectOptions.indentLevel\x2C\n      );\n      string = groupIndent +\n        StringPrototypeReplaceAll(string\x2C "\\n"\x2C `\\n${groupIndent}`);\n    }\n\n    return string;\n  }\n\n  const countMap = new Map();\n  const timerMap = new Map();\n  const isConsoleInstance = Symbol("isConsoleInstance");\n\n  function getConsoleInspectOptions() {\n    return {\n      ...DEFAULT_INSPECT_OPTIONS\x2C\n      colors: !(globalThis.Deno?.noColor ?? false)\x2C\n    };\n  }\n\n  class Console {\n    #printFunc = null;\n    [isConsoleInstance] = false;\n\n    constructor(printFunc) {\n      this.#printFunc = printFunc;\n      this.indentLevel = 0;\n      this[isConsoleInstance] = true;\n\n      // ref https://console.spec.whatwg.org/#console-namespace\n      // For historical web-compatibility reasons\x2C the namespace object for\n      // console must have as its [[Prototype]] an empty object\x2C created as if\n      // by ObjectCreate(%ObjectPrototype%)\x2C instead of %ObjectPrototype%.\n      const console = ObjectCreate({}\x2C {\n        [SymbolToStringTag]: {\n          enumerable: false\x2C\n          writable: false\x2C\n          configurable: true\x2C\n          value: "console"\x2C\n        }\x2C\n      });\n      ObjectAssign(console\x2C this);\n      return console;\n    }\n\n    log = (...args) => {\n      this.#printFunc(\n        inspectArgs(args\x2C {\n          ...getConsoleInspectOptions()\x2C\n          indentLevel: this.indentLevel\x2C\n        }) + "\\n"\x2C\n        1\x2C\n      );\n    };\n\n    debug = (...args) => {\n      this.#printFunc(\n        inspectArgs(args\x2C {\n          ...getConsoleInspectOptions()\x2C\n          indentLevel: this.indentLevel\x2C\n        }) + "\\n"\x2C\n        0\x2C\n      );\n    };\n\n    info = (...args) => {\n      this.#printFunc(\n        inspectArgs(args\x2C {\n          ...getConsoleInspectOptions()\x2C\n          indentLevel: this.indentLevel\x2C\n        }) + "\\n"\x2C\n        1\x2C\n      );\n    };\n\n    dir = (obj = undefined\x2C options = {}) => {\n      this.#printFunc(\n        inspectArgs([obj]\x2C { ...getConsoleInspectOptions()\x2C ...options }) +\n          "\\n"\x2C\n        1\x2C\n      );\n    };\n\n    dirxml = this.dir;\n\n    warn = (...args) => {\n      this.#printFunc(\n        inspectArgs(args\x2C {\n          ...getConsoleInspectOptions()\x2C\n          indentLevel: this.indentLevel\x2C\n        }) + "\\n"\x2C\n        2\x2C\n      );\n    };\n\n    error = (...args) => {\n      this.#printFunc(\n        inspectArgs(args\x2C {\n          ...getConsoleInspectOptions()\x2C\n          indentLevel: this.indentLevel\x2C\n        }) + "\\n"\x2C\n        3\x2C\n      );\n    };\n\n    assert = (condition = false\x2C ...args) => {\n      if (condition) {\n        return;\n      }\n\n      if (args.length === 0) {\n        this.error("Assertion failed");\n        return;\n      }\n\n      const [first\x2C ...rest] = args;\n\n      if (typeof first === "string") {\n        this.error(`Assertion failed: ${first}`\x2C ...rest);\n        return;\n      }\n\n      this.error(`Assertion failed:`\x2C ...args);\n    };\n\n    count = (label = "default") => {\n      label = String(label);\n\n      if (MapPrototypeHas(countMap\x2C label)) {\n        const current = MapPrototypeGet(countMap\x2C label) || 0;\n        MapPrototypeSet(countMap\x2C label\x2C current + 1);\n      } else {\n        MapPrototypeSet(countMap\x2C label\x2C 1);\n      }\n\n      this.info(`${label}: ${MapPrototypeGet(countMap\x2C label)}`);\n    };\n\n    countReset = (label = "default") => {\n      label = String(label);\n\n      if (MapPrototypeHas(countMap\x2C label)) {\n        MapPrototypeSet(countMap\x2C label\x2C 0);\n      } else {\n        this.warn(`Count for '${label}' does not exist`);\n      }\n    };\n\n    table = (data = undefined\x2C properties = undefined) => {\n      if (properties !== undefined && !ArrayIsArray(properties)) {\n        throw new Error(\n          "The 'properties' argument must be of type Array. " +\n            "Received type string"\x2C\n        );\n      }\n\n      if (data === null || typeof data !== "object") {\n        return this.log(data);\n      }\n\n      const stringifyValue = (value) =>\n        inspectValueWithQuotes(value\x2C 0\x2C {\n          ...DEFAULT_INSPECT_OPTIONS\x2C\n          depth: 1\x2C\n        });\n      const toTable = (header\x2C body) => this.log(cliTable(header\x2C body));\n\n      let resultData;\n      const isSet = data instanceof Set;\n      const isMap = data instanceof Map;\n      const valuesKey = "Values";\n      const indexKey = isSet || isMap ? "(iter idx)" : "(idx)";\n\n      if (data instanceof Set) {\n        resultData = [...data];\n      } else if (data instanceof Map) {\n        let idx = 0;\n        resultData = {};\n\n        MapPrototypeForEach(data\x2C (v\x2C k) => {\n          resultData[idx] = { Key: k\x2C Values: v };\n          idx++;\n        });\n      } else {\n        resultData = data;\n      }\n\n      const keys = ObjectKeys(resultData);\n      const numRows = keys.length;\n\n      const objectValues = properties\n        ? ObjectFromEntries(\n          ArrayPrototypeMap(\n            properties\x2C\n            (name) => [name\x2C ArrayPrototypeFill(new Array(numRows)\x2C "")]\x2C\n          )\x2C\n        )\n        : {};\n      const indexKeys = [];\n      const values = [];\n\n      let hasPrimitives = false;\n      keys.forEach((k\x2C idx) => {\n        const value = resultData[k];\n        const primitive = value === null ||\n          (typeof value !== "function" && typeof value !== "object");\n        if (properties === undefined && primitive) {\n          hasPrimitives = true;\n          ArrayPrototypePush(values\x2C stringifyValue(value));\n        } else {\n          const valueObj = value || {};\n          const keys = properties || ObjectKeys(valueObj);\n          for (const k of keys) {\n            if (!primitive && k in valueObj) {\n              if (!(k in objectValues)) {\n                objectValues[k] = ArrayPrototypeFill(new Array(numRows)\x2C "");\n              }\n              objectValues[k][idx] = stringifyValue(valueObj[k]);\n            }\n          }\n          ArrayPrototypePush(values\x2C "");\n        }\n\n        ArrayPrototypePush(indexKeys\x2C k);\n      });\n\n      const headerKeys = ObjectKeys(objectValues);\n      const bodyValues = ObjectValues(objectValues);\n      const header = ArrayPrototypeFilter([\n        indexKey\x2C\n        ...(properties ||\n          [...headerKeys\x2C !isMap && hasPrimitives && valuesKey])\x2C\n      ]\x2C Boolean);\n      const body = [indexKeys\x2C ...bodyValues\x2C values];\n\n      toTable(header\x2C body);\n    };\n\n    time = (label = "default") => {\n      label = String(label);\n\n      if (MapPrototypeHas(timerMap\x2C label)) {\n        this.warn(`Timer '${label}' already exists`);\n        return;\n      }\n\n      MapPrototypeSet(timerMap\x2C label\x2C DateNow());\n    };\n\n    timeLog = (label = "default"\x2C ...args) => {\n      label = String(label);\n\n      if (!MapPrototypeHas(timerMap\x2C label)) {\n        this.warn(`Timer '${label}' does not exists`);\n        return;\n      }\n\n      const startTime = MapPrototypeGet(timerMap\x2C label);\n      const duration = DateNow() - startTime;\n\n      this.info(`${label}: ${duration}ms`\x2C ...args);\n    };\n\n    timeEnd = (label = "default") => {\n      label = String(label);\n\n      if (!MapPrototypeHas(timerMap\x2C label)) {\n        this.warn(`Timer '${label}' does not exists`);\n        return;\n      }\n\n      const startTime = MapPrototypeGet(timerMap\x2C label);\n      MapPrototypeDelete(timerMap\x2C label);\n      const duration = DateNow() - startTime;\n\n      this.info(`${label}: ${duration}ms`);\n    };\n\n    group = (...label) => {\n      if (label.length > 0) {\n        this.log(...label);\n      }\n      this.indentLevel += 2;\n    };\n\n    groupCollapsed = this.group;\n\n    groupEnd = () => {\n      if (this.indentLevel > 0) {\n        this.indentLevel -= 2;\n      }\n    };\n\n    clear = () => {\n      this.indentLevel = 0;\n      this.#printFunc(CSI.kClear\x2C 1);\n      this.#printFunc(CSI.kClearScreenDown\x2C 1);\n    };\n\n    trace = (...args) => {\n      const message = inspectArgs(\n        args\x2C\n        { ...getConsoleInspectOptions()\x2C indentLevel: 0 }\x2C\n      );\n      const err = {\n        name: "Trace"\x2C\n        message\x2C\n      };\n      ErrorCaptureStackTrace(err\x2C this.trace);\n      this.error(err.stack);\n    };\n\n    static [SymbolHasInstance](instance) {\n      return instance[isConsoleInstance];\n    }\n  }\n\n  const customInspect = SymbolFor("Deno.customInspect");\n\n  function inspect(\n    value\x2C\n    inspectOptions = {}\x2C\n  ) {\n    return inspectValue(value\x2C 0\x2C {\n      ...DEFAULT_INSPECT_OPTIONS\x2C\n      ...inspectOptions\x2C\n      // TODO(nayeemrmn): Indent level is not supported.\n      indentLevel: 0\x2C\n    });\n  }\n\n  /** Creates a proxy that represents a subset of the properties\n   * of the original object optionally without evaluating the properties\n   * in order to get the values. */\n  function createFilteredInspectProxy({ object\x2C keys\x2C evaluate }) {\n    return new Proxy({}\x2C {\n      get(_target\x2C key) {\n        if (key === SymbolToStringTag) {\n          return object.constructor?.name;\n        } else if (ArrayPrototypeIncludes(keys\x2C key)) {\n          return ReflectGet(object\x2C key);\n        } else {\n          return undefined;\n        }\n      }\x2C\n      getOwnPropertyDescriptor(_target\x2C key) {\n        if (!ArrayPrototypeIncludes(keys\x2C key)) {\n          return undefined;\n        } else if (evaluate) {\n          return getEvaluatedDescriptor(object\x2C key);\n        } else {\n          return getDescendantPropertyDescriptor(object\x2C key) ??\n            getEvaluatedDescriptor(object\x2C key);\n        }\n      }\x2C\n      has(_target\x2C key) {\n        return ArrayPrototypeIncludes(keys\x2C key);\n      }\x2C\n      ownKeys() {\n        return keys;\n      }\x2C\n    });\n\n    function getDescendantPropertyDescriptor(object\x2C key) {\n      let propertyDescriptor = ReflectGetOwnPropertyDescriptor(object\x2C key);\n      if (!propertyDescriptor) {\n        const prototype = ReflectGetPrototypeOf(object);\n        if (prototype) {\n          propertyDescriptor = getDescendantPropertyDescriptor(prototype\x2C key);\n        }\n      }\n      return propertyDescriptor;\n    }\n\n    function getEvaluatedDescriptor(object\x2C key) {\n      return {\n        configurable: true\x2C\n        enumerable: true\x2C\n        value: object[key]\x2C\n      };\n    }\n  }\n\n  // A helper function that will bind our own console implementation\n  // with default implementation of Console from V8. This will cause\n  // console messages to be piped to inspector console.\n  //\n  // We are using `Deno.core.callConsole` binding to preserve proper stack\n  // frames in inspector console. This has to be done because V8 considers\n  // the last JS stack frame as gospel for the inspector. In our case we\n  // specifically want the latest user stack frame to be the one that matters\n  // though.\n  //\n  // Inspired by:\n  // https://github.com/nodejs/node/blob/1317252dfe8824fd9cfee125d2aaa94004db2f3b/lib/internal/util/inspector.js#L39-L61\n  function wrapConsole(consoleFromDeno\x2C consoleFromV8) {\n    const callConsole = core.callConsole;\n\n    for (const key of ObjectKeys(consoleFromV8)) {\n      if (ObjectPrototypeHasOwnProperty(consoleFromDeno\x2C key)) {\n        consoleFromDeno[key] = FunctionPrototypeBind(\n          callConsole\x2C\n          consoleFromDeno\x2C\n          consoleFromV8[key]\x2C\n          consoleFromDeno[key]\x2C\n        );\n      }\n    }\n  }\n\n  // Expose these fields to internalObject for tests.\n  window.__bootstrap.internals = {\n    ...window.__bootstrap.internals ?? {}\x2C\n    Console\x2C\n    cssToAnsi\x2C\n    inspectArgs\x2C\n    parseCss\x2C\n    parseCssColor\x2C\n  };\n\n  window.__bootstrap.console = {\n    CSI\x2C\n    inspectArgs\x2C\n    Console\x2C\n    customInspect\x2C\n    inspect\x2C\n    wrapConsole\x2C\n    createFilteredInspectProxy\x2C\n  };\n})(this);\n
code-source-info,0xb7b0835adbe,8,62269,62657,C0O62328C5O62333C10O62369C15O62369C44O62362C72O62362C75O62404C80O62408C90O62471C92O62494C97O62590C104O62622C115O62494C120O62492C124O62351C188O62656,,
tick,0x556369872240,64687,0,0x0,0,0xb7b08359464,0xb7b0835906c
tick,0x556368fb8a4a,64725,0,0x0,0,0x556368c173a0,0xb7b083594d6,0xb7b0835906c
tick,0x556368b8fef1,64735,0,0x0,3,0x55636916ccf0,0xb7b083594fd,0xb7b0835906c
tick,0x7f056c9d293f,64745,0,0x0,3,0x55636916ccf0,0xb7b083594fd,0xb7b0835906c
tick,0x556368bed6f6,64757,0,0x0,3,0x55636916ccf0,0xb7b083594fd,0xb7b0835906c
tick,0x556368ea0017,64768,0,0x0,3,0x55636916ccf0,0xb7b083594fd,0xb7b0835906c
tick,0x556368b8fee6,64778,0,0x0,3,0x55636916ccf0,0xb7b083594fd,0xb7b0835906c
tick,0x55636913a120,65741,0,0x0,0,0x55636913a120,0xb7b0835ae3a,0xb7b083594fd,0xb7b0835906c
code-creation,LazyCompile,10,65821,0xb7b0835d1f2,17,setEventTargetData deno:ext/web/02_event.js:845:30,0xb7b0817fd90,~
script-source,14,deno:ext/web/02_event.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n\n// This module follows most of the WHATWG Living Standard for the DOM logic.\n// Many parts of the DOM are not implemented in Deno\x2C but the logic for those\n// parts still exists.  This means you will observe a lot of strange structures\n// and impossible logic branches based on what Deno currently supports.\n"use strict";\n\n((window) => {\n  const webidl = window.__bootstrap.webidl;\n  const { DOMException } = window.__bootstrap.domException;\n  const consoleInternal = window.__bootstrap.console;\n  const {\n    ArrayPrototypeFilter\x2C\n    ArrayPrototypeIncludes\x2C\n    ArrayPrototypeIndexOf\x2C\n    ArrayPrototypeMap\x2C\n    ArrayPrototypePush\x2C\n    ArrayPrototypeSlice\x2C\n    ArrayPrototypeSplice\x2C\n    ArrayPrototypeUnshift\x2C\n    Boolean\x2C\n    DateNow\x2C\n    Error\x2C\n    FunctionPrototypeCall\x2C\n    Map\x2C\n    MapPrototypeGet\x2C\n    MapPrototypeSet\x2C\n    ObjectCreate\x2C\n    ObjectDefineProperty\x2C\n    ObjectGetOwnPropertyDescriptor\x2C\n    ReflectDefineProperty\x2C\n    Symbol\x2C\n    SymbolFor\x2C\n    SymbolToStringTag\x2C\n    TypeError\x2C\n  } = window.__bootstrap.primordials;\n\n  // accessors for non runtime visible data\n\n  function getDispatched(event) {\n    return Boolean(event[_dispatched]);\n  }\n\n  function getPath(event) {\n    return event[_path] ?? [];\n  }\n\n  function getStopImmediatePropagation(event) {\n    return Boolean(event[_stopImmediatePropagationFlag]);\n  }\n\n  function setCurrentTarget(\n    event\x2C\n    value\x2C\n  ) {\n    event[_attributes].currentTarget = value;\n  }\n\n  function setIsTrusted(event\x2C value) {\n    event[_isTrusted] = value;\n  }\n\n  function setDispatched(event\x2C value) {\n    event[_dispatched] = value;\n  }\n\n  function setEventPhase(event\x2C value) {\n    event[_attributes].eventPhase = value;\n  }\n\n  function setInPassiveListener(event\x2C value) {\n    event[_inPassiveListener] = value;\n  }\n\n  function setPath(event\x2C value) {\n    event[_path] = value;\n  }\n\n  function setRelatedTarget(\n    event\x2C\n    value\x2C\n  ) {\n    event[_attributes].relatedTarget = value;\n  }\n\n  function setTarget(event\x2C value) {\n    event[_attributes].target = value;\n  }\n\n  function setStopImmediatePropagation(\n    event\x2C\n    value\x2C\n  ) {\n    event[_stopImmediatePropagationFlag] = value;\n  }\n\n  // Type guards that widen the event type\n\n  function hasRelatedTarget(\n    event\x2C\n  ) {\n    return "relatedTarget" in event;\n  }\n\n  const isTrusted = ObjectGetOwnPropertyDescriptor({\n    get isTrusted() {\n      return this[_isTrusted];\n    }\x2C\n  }\x2C "isTrusted").get;\n\n  const eventInitConverter = webidl.createDictionaryConverter("EventInit"\x2C [{\n    key: "bubbles"\x2C\n    defaultValue: false\x2C\n    converter: webidl.converters.boolean\x2C\n  }\x2C {\n    key: "cancelable"\x2C\n    defaultValue: false\x2C\n    converter: webidl.converters.boolean\x2C\n  }\x2C {\n    key: "composed"\x2C\n    defaultValue: false\x2C\n    converter: webidl.converters.boolean\x2C\n  }]);\n\n  const _attributes = Symbol("[[attributes]]");\n  const _canceledFlag = Symbol("[[canceledFlag]]");\n  const _stopPropagationFlag = Symbol("[[stopPropagationFlag]]");\n  const _stopImmediatePropagationFlag = Symbol(\n    "[[stopImmediatePropagationFlag]]"\x2C\n  );\n  const _inPassiveListener = Symbol("[[inPassiveListener]]");\n  const _dispatched = Symbol("[[dispatched]]");\n  const _isTrusted = Symbol("[[isTrusted]]");\n  const _path = Symbol("[[path]]");\n\n  class Event {\n    constructor(type\x2C eventInitDict = {}) {\n      // TODO(lucacasonato): remove when this interface is spec aligned\n      this[SymbolToStringTag] = "Event";\n      this[_canceledFlag] = false;\n      this[_stopPropagationFlag] = false;\n      this[_stopImmediatePropagationFlag] = false;\n      this[_inPassiveListener] = false;\n      this[_dispatched] = false;\n      this[_isTrusted] = false;\n      this[_path] = [];\n\n      webidl.requiredArguments(arguments.length\x2C 1\x2C {\n        prefix: "Failed to construct 'Event'"\x2C\n      });\n      type = webidl.converters.DOMString(type\x2C {\n        prefix: "Failed to construct 'Event'"\x2C\n        context: "Argument 1"\x2C\n      });\n      const eventInit = eventInitConverter(eventInitDict\x2C {\n        prefix: "Failed to construct 'Event'"\x2C\n        context: "Argument 2"\x2C\n      });\n      this[_attributes] = {\n        type\x2C\n        ...eventInit\x2C\n        currentTarget: null\x2C\n        eventPhase: Event.NONE\x2C\n        target: null\x2C\n        timeStamp: DateNow()\x2C\n      };\n      ReflectDefineProperty(this\x2C "isTrusted"\x2C {\n        enumerable: true\x2C\n        get: isTrusted\x2C\n      });\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return inspect(consoleInternal.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: this instanceof Event\x2C\n        keys: EVENT_PROPS\x2C\n      }));\n    }\n\n    get type() {\n      return this[_attributes].type;\n    }\n\n    get target() {\n      return this[_attributes].target;\n    }\n\n    get srcElement() {\n      return null;\n    }\n\n    set srcElement(_) {\n      // this member is deprecated\n    }\n\n    get currentTarget() {\n      return this[_attributes].currentTarget;\n    }\n\n    composedPath() {\n      const path = this[_path];\n      if (path.length === 0) {\n        return [];\n      }\n\n      if (!this.currentTarget) {\n        throw new Error("assertion error");\n      }\n      const composedPath = [\n        {\n          item: this.currentTarget\x2C\n          itemInShadowTree: false\x2C\n          relatedTarget: null\x2C\n          rootOfClosedTree: false\x2C\n          slotInClosedTree: false\x2C\n          target: null\x2C\n          touchTargetList: []\x2C\n        }\x2C\n      ];\n\n      let currentTargetIndex = 0;\n      let currentTargetHiddenSubtreeLevel = 0;\n\n      for (let index = path.length - 1; index >= 0; index--) {\n        const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[index];\n\n        if (rootOfClosedTree) {\n          currentTargetHiddenSubtreeLevel++;\n        }\n\n        if (item === this.currentTarget) {\n          currentTargetIndex = index;\n          break;\n        }\n\n        if (slotInClosedTree) {\n          currentTargetHiddenSubtreeLevel--;\n        }\n      }\n\n      let currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n      let maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n\n      for (let i = currentTargetIndex - 1; i >= 0; i--) {\n        const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[i];\n\n        if (rootOfClosedTree) {\n          currentHiddenLevel++;\n        }\n\n        if (currentHiddenLevel <= maxHiddenLevel) {\n          ArrayPrototypeUnshift(composedPath\x2C {\n            item\x2C\n            itemInShadowTree: false\x2C\n            relatedTarget: null\x2C\n            rootOfClosedTree: false\x2C\n            slotInClosedTree: false\x2C\n            target: null\x2C\n            touchTargetList: []\x2C\n          });\n        }\n\n        if (slotInClosedTree) {\n          currentHiddenLevel--;\n\n          if (currentHiddenLevel < maxHiddenLevel) {\n            maxHiddenLevel = currentHiddenLevel;\n          }\n        }\n      }\n\n      currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n      maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n\n      for (let index = currentTargetIndex + 1; index < path.length; index++) {\n        const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[index];\n\n        if (slotInClosedTree) {\n          currentHiddenLevel++;\n        }\n\n        if (currentHiddenLevel <= maxHiddenLevel) {\n          ArrayPrototypePush(composedPath\x2C {\n            item\x2C\n            itemInShadowTree: false\x2C\n            relatedTarget: null\x2C\n            rootOfClosedTree: false\x2C\n            slotInClosedTree: false\x2C\n            target: null\x2C\n            touchTargetList: []\x2C\n          });\n        }\n\n        if (rootOfClosedTree) {\n          currentHiddenLevel--;\n\n          if (currentHiddenLevel < maxHiddenLevel) {\n            maxHiddenLevel = currentHiddenLevel;\n          }\n        }\n      }\n      return ArrayPrototypeMap(composedPath\x2C (p) => p.item);\n    }\n\n    get NONE() {\n      return Event.NONE;\n    }\n\n    get CAPTURING_PHASE() {\n      return Event.CAPTURING_PHASE;\n    }\n\n    get AT_TARGET() {\n      return Event.AT_TARGET;\n    }\n\n    get BUBBLING_PHASE() {\n      return Event.BUBBLING_PHASE;\n    }\n\n    static get NONE() {\n      return 0;\n    }\n\n    static get CAPTURING_PHASE() {\n      return 1;\n    }\n\n    static get AT_TARGET() {\n      return 2;\n    }\n\n    static get BUBBLING_PHASE() {\n      return 3;\n    }\n\n    get eventPhase() {\n      return this[_attributes].eventPhase;\n    }\n\n    stopPropagation() {\n      this[_stopPropagationFlag] = true;\n    }\n\n    get cancelBubble() {\n      return this[_stopPropagationFlag];\n    }\n\n    set cancelBubble(value) {\n      this[_stopPropagationFlag] = webidl.converters.boolean(value);\n    }\n\n    stopImmediatePropagation() {\n      this[_stopPropagationFlag] = true;\n      this[_stopImmediatePropagationFlag] = true;\n    }\n\n    get bubbles() {\n      return this[_attributes].bubbles;\n    }\n\n    get cancelable() {\n      return this[_attributes].cancelable;\n    }\n\n    get returnValue() {\n      return !this[_canceledFlag];\n    }\n\n    set returnValue(value) {\n      if (!webidl.converters.boolean(value)) {\n        this[_canceledFlag] = true;\n      }\n    }\n\n    preventDefault() {\n      if (this[_attributes].cancelable && !this[_inPassiveListener]) {\n        this[_canceledFlag] = true;\n      }\n    }\n\n    get defaultPrevented() {\n      return this[_canceledFlag];\n    }\n\n    get composed() {\n      return this[_attributes].composed;\n    }\n\n    get initialized() {\n      return true;\n    }\n\n    get timeStamp() {\n      return this[_attributes].timeStamp;\n    }\n  }\n\n  function defineEnumerableProps(\n    Ctor\x2C\n    props\x2C\n  ) {\n    for (const prop of props) {\n      ReflectDefineProperty(Ctor.prototype\x2C prop\x2C { enumerable: true });\n    }\n  }\n\n  const EVENT_PROPS = [\n    "bubbles"\x2C\n    "cancelable"\x2C\n    "composed"\x2C\n    "currentTarget"\x2C\n    "defaultPrevented"\x2C\n    "eventPhase"\x2C\n    "srcElement"\x2C\n    "target"\x2C\n    "returnValue"\x2C\n    "timeStamp"\x2C\n    "type"\x2C\n  ];\n\n  defineEnumerableProps(Event\x2C EVENT_PROPS);\n\n  // This is currently the only node type we are using\x2C so instead of implementing\n  // the whole of the Node interface at the moment\x2C this just gives us the one\n  // value to power the standards based logic\n  const DOCUMENT_FRAGMENT_NODE = 11;\n\n  // DOM Logic Helper functions and type guards\n\n  /** Get the parent node\x2C for event targets that have a parent.\n   *\n   * Ref: https://dom.spec.whatwg.org/#get-the-parent */\n  function getParent(eventTarget) {\n    return isNode(eventTarget) ? eventTarget.parentNode : null;\n  }\n\n  function getRoot(eventTarget) {\n    return isNode(eventTarget)\n      ? eventTarget.getRootNode({ composed: true })\n      : null;\n  }\n\n  function isNode(\n    eventTarget\x2C\n  ) {\n    return Boolean(eventTarget && "nodeType" in eventTarget);\n  }\n\n  // https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\n  function isShadowInclusiveAncestor(\n    ancestor\x2C\n    node\x2C\n  ) {\n    while (isNode(node)) {\n      if (node === ancestor) {\n        return true;\n      }\n\n      if (isShadowRoot(node)) {\n        node = node && getHost(node);\n      } else {\n        node = getParent(node);\n      }\n    }\n\n    return false;\n  }\n\n  function isShadowRoot(nodeImpl) {\n    return Boolean(\n      nodeImpl &&\n        isNode(nodeImpl) &&\n        nodeImpl.nodeType === DOCUMENT_FRAGMENT_NODE &&\n        getHost(nodeImpl) != null\x2C\n    );\n  }\n\n  function isSlotable(\n    nodeImpl\x2C\n  ) {\n    return Boolean(isNode(nodeImpl) && "assignedSlot" in nodeImpl);\n  }\n\n  // DOM Logic functions\n\n  /** Append a path item to an event's path.\n   *\n   * Ref: https://dom.spec.whatwg.org/#concept-event-path-append\n   */\n  function appendToEventPath(\n    eventImpl\x2C\n    target\x2C\n    targetOverride\x2C\n    relatedTarget\x2C\n    touchTargets\x2C\n    slotInClosedTree\x2C\n  ) {\n    const itemInShadowTree = isNode(target) && isShadowRoot(getRoot(target));\n    const rootOfClosedTree = isShadowRoot(target) &&\n      getMode(target) === "closed";\n\n    ArrayPrototypePush(getPath(eventImpl)\x2C {\n      item: target\x2C\n      itemInShadowTree\x2C\n      target: targetOverride\x2C\n      relatedTarget\x2C\n      touchTargetList: touchTargets\x2C\n      rootOfClosedTree\x2C\n      slotInClosedTree\x2C\n    });\n  }\n\n  function dispatch(\n    targetImpl\x2C\n    eventImpl\x2C\n    targetOverride\x2C\n  ) {\n    let clearTargets = false;\n    let activationTarget = null;\n\n    setDispatched(eventImpl\x2C true);\n\n    targetOverride = targetOverride ?? targetImpl;\n    const eventRelatedTarget = hasRelatedTarget(eventImpl)\n      ? eventImpl.relatedTarget\n      : null;\n    let relatedTarget = retarget(eventRelatedTarget\x2C targetImpl);\n\n    if (targetImpl !== relatedTarget || targetImpl === eventRelatedTarget) {\n      const touchTargets = [];\n\n      appendToEventPath(\n        eventImpl\x2C\n        targetImpl\x2C\n        targetOverride\x2C\n        relatedTarget\x2C\n        touchTargets\x2C\n        false\x2C\n      );\n\n      const isActivationEvent = eventImpl.type === "click";\n\n      if (isActivationEvent && getHasActivationBehavior(targetImpl)) {\n        activationTarget = targetImpl;\n      }\n\n      let slotInClosedTree = false;\n      let slotable = isSlotable(targetImpl) && getAssignedSlot(targetImpl)\n        ? targetImpl\n        : null;\n      let parent = getParent(targetImpl);\n\n      // Populate event path\n      // https://dom.spec.whatwg.org/#event-path\n      while (parent !== null) {\n        if (slotable !== null) {\n          slotable = null;\n\n          const parentRoot = getRoot(parent);\n          if (\n            isShadowRoot(parentRoot) &&\n            parentRoot &&\n            getMode(parentRoot) === "closed"\n          ) {\n            slotInClosedTree = true;\n          }\n        }\n\n        relatedTarget = retarget(eventRelatedTarget\x2C parent);\n\n        if (\n          isNode(parent) &&\n          isShadowInclusiveAncestor(getRoot(targetImpl)\x2C parent)\n        ) {\n          appendToEventPath(\n            eventImpl\x2C\n            parent\x2C\n            null\x2C\n            relatedTarget\x2C\n            touchTargets\x2C\n            slotInClosedTree\x2C\n          );\n        } else if (parent === relatedTarget) {\n          parent = null;\n        } else {\n          targetImpl = parent;\n\n          if (\n            isActivationEvent &&\n            activationTarget === null &&\n            getHasActivationBehavior(targetImpl)\n          ) {\n            activationTarget = targetImpl;\n          }\n\n          appendToEventPath(\n            eventImpl\x2C\n            parent\x2C\n            targetImpl\x2C\n            relatedTarget\x2C\n            touchTargets\x2C\n            slotInClosedTree\x2C\n          );\n        }\n\n        if (parent !== null) {\n          parent = getParent(parent);\n        }\n\n        slotInClosedTree = false;\n      }\n\n      let clearTargetsTupleIndex = -1;\n      const path = getPath(eventImpl);\n      for (\n        let i = path.length - 1;\n        i >= 0 && clearTargetsTupleIndex === -1;\n        i--\n      ) {\n        if (path[i].target !== null) {\n          clearTargetsTupleIndex = i;\n        }\n      }\n      const clearTargetsTuple = path[clearTargetsTupleIndex];\n\n      clearTargets = (isNode(clearTargetsTuple.target) &&\n        isShadowRoot(getRoot(clearTargetsTuple.target))) ||\n        (isNode(clearTargetsTuple.relatedTarget) &&\n          isShadowRoot(getRoot(clearTargetsTuple.relatedTarget)));\n\n      setEventPhase(eventImpl\x2C Event.CAPTURING_PHASE);\n\n      for (let i = path.length - 1; i >= 0; --i) {\n        const tuple = path[i];\n\n        if (tuple.target === null) {\n          invokeEventListeners(tuple\x2C eventImpl);\n        }\n      }\n\n      for (let i = 0; i < path.length; i++) {\n        const tuple = path[i];\n\n        if (tuple.target !== null) {\n          setEventPhase(eventImpl\x2C Event.AT_TARGET);\n        } else {\n          setEventPhase(eventImpl\x2C Event.BUBBLING_PHASE);\n        }\n\n        if (\n          (eventImpl.eventPhase === Event.BUBBLING_PHASE &&\n            eventImpl.bubbles) ||\n          eventImpl.eventPhase === Event.AT_TARGET\n        ) {\n          invokeEventListeners(tuple\x2C eventImpl);\n        }\n      }\n    }\n\n    setEventPhase(eventImpl\x2C Event.NONE);\n    setCurrentTarget(eventImpl\x2C null);\n    setPath(eventImpl\x2C []);\n    setDispatched(eventImpl\x2C false);\n    eventImpl.cancelBubble = false;\n    setStopImmediatePropagation(eventImpl\x2C false);\n\n    if (clearTargets) {\n      setTarget(eventImpl\x2C null);\n      setRelatedTarget(eventImpl\x2C null);\n    }\n\n    // TODO(bartlomieju): invoke activation targets if HTML nodes will be implemented\n    // if (activationTarget !== null) {\n    //   if (!eventImpl.defaultPrevented) {\n    //     activationTarget._activationBehavior();\n    //   }\n    // }\n\n    return !eventImpl.defaultPrevented;\n  }\n\n  /** Inner invoking of the event listeners where the resolved listeners are\n   * called.\n   *\n   * Ref: https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke */\n  function innerInvokeEventListeners(\n    eventImpl\x2C\n    targetListeners\x2C\n  ) {\n    let found = false;\n\n    const { type } = eventImpl;\n\n    if (!targetListeners || !targetListeners[type]) {\n      return found;\n    }\n\n    // Copy event listeners before iterating since the list can be modified during the iteration.\n    const handlers = ArrayPrototypeSlice(targetListeners[type]);\n\n    for (let i = 0; i < handlers.length; i++) {\n      const listener = handlers[i];\n\n      let capture\x2C once\x2C passive;\n      if (typeof listener.options === "boolean") {\n        capture = listener.options;\n        once = false;\n        passive = false;\n      } else {\n        capture = listener.options.capture;\n        once = listener.options.once;\n        passive = listener.options.passive;\n      }\n\n      // Check if the event listener has been removed since the listeners has been cloned.\n      if (!ArrayPrototypeIncludes(targetListeners[type]\x2C listener)) {\n        continue;\n      }\n\n      found = true;\n\n      if (\n        (eventImpl.eventPhase === Event.CAPTURING_PHASE && !capture) ||\n        (eventImpl.eventPhase === Event.BUBBLING_PHASE && capture)\n      ) {\n        continue;\n      }\n\n      if (once) {\n        ArrayPrototypeSplice(\n          targetListeners[type]\x2C\n          ArrayPrototypeIndexOf(targetListeners[type]\x2C listener)\x2C\n          1\x2C\n        );\n      }\n\n      if (passive) {\n        setInPassiveListener(eventImpl\x2C true);\n      }\n\n      if (typeof listener.callback === "object") {\n        if (typeof listener.callback.handleEvent === "function") {\n          listener.callback.handleEvent(eventImpl);\n        }\n      } else {\n        FunctionPrototypeCall(\n          listener.callback\x2C\n          eventImpl.currentTarget\x2C\n          eventImpl\x2C\n        );\n      }\n\n      setInPassiveListener(eventImpl\x2C false);\n\n      if (getStopImmediatePropagation(eventImpl)) {\n        return found;\n      }\n    }\n\n    return found;\n  }\n\n  /** Invokes the listeners on a given event path with the supplied event.\n   *\n   * Ref: https://dom.spec.whatwg.org/#concept-event-listener-invoke */\n  function invokeEventListeners(tuple\x2C eventImpl) {\n    const path = getPath(eventImpl);\n    const tupleIndex = ArrayPrototypeIndexOf(path\x2C tuple);\n    for (let i = tupleIndex; i >= 0; i--) {\n      const t = path[i];\n      if (t.target) {\n        setTarget(eventImpl\x2C t.target);\n        break;\n      }\n    }\n\n    setRelatedTarget(eventImpl\x2C tuple.relatedTarget);\n\n    if (eventImpl.cancelBubble) {\n      return;\n    }\n\n    setCurrentTarget(eventImpl\x2C tuple.item);\n\n    innerInvokeEventListeners(eventImpl\x2C getListeners(tuple.item));\n  }\n\n  function normalizeAddEventHandlerOptions(\n    options\x2C\n  ) {\n    if (typeof options === "boolean" || typeof options === "undefined") {\n      return {\n        capture: Boolean(options)\x2C\n        once: false\x2C\n        passive: false\x2C\n      };\n    } else {\n      return options;\n    }\n  }\n\n  function normalizeEventHandlerOptions(\n    options\x2C\n  ) {\n    if (typeof options === "boolean" || typeof options === "undefined") {\n      return {\n        capture: Boolean(options)\x2C\n      };\n    } else {\n      return options;\n    }\n  }\n\n  /** Retarget the target following the spec logic.\n   *\n   * Ref: https://dom.spec.whatwg.org/#retarget */\n  function retarget(a\x2C b) {\n    while (true) {\n      if (!isNode(a)) {\n        return a;\n      }\n\n      const aRoot = a.getRootNode();\n\n      if (aRoot) {\n        if (\n          !isShadowRoot(aRoot) ||\n          (isNode(b) && isShadowInclusiveAncestor(aRoot\x2C b))\n        ) {\n          return a;\n        }\n\n        a = getHost(aRoot);\n      }\n    }\n  }\n\n  // Accessors for non-public data\n\n  const eventTargetData = Symbol();\n\n  function setEventTargetData(target) {\n    target[eventTargetData] = getDefaultTargetData();\n  }\n\n  function getAssignedSlot(target) {\n    return Boolean(target?.[eventTargetData]?.assignedSlot);\n  }\n\n  function getHasActivationBehavior(target) {\n    return Boolean(target?.[eventTargetData]?.hasActivationBehavior);\n  }\n\n  function getHost(target) {\n    return target?.[eventTargetData]?.host ?? null;\n  }\n\n  function getListeners(target) {\n    return target?.[eventTargetData]?.listeners ?? {};\n  }\n\n  function getMode(target) {\n    return target?.[eventTargetData]?.mode ?? null;\n  }\n\n  function getDefaultTargetData() {\n    return {\n      assignedSlot: false\x2C\n      hasActivationBehavior: false\x2C\n      host: null\x2C\n      listeners: ObjectCreate(null)\x2C\n      mode: ""\x2C\n    };\n  }\n\n  class EventTarget {\n    constructor() {\n      this[eventTargetData] = getDefaultTargetData();\n    }\n\n    addEventListener(\n      type\x2C\n      callback\x2C\n      options\x2C\n    ) {\n      webidl.requiredArguments(arguments.length\x2C 2\x2C {\n        prefix: "Failed to execute 'addEventListener' on 'EventTarget'"\x2C\n      });\n      if (callback === null) {\n        return;\n      }\n\n      options = normalizeAddEventHandlerOptions(options);\n      const { listeners } = (this ?? globalThis)[eventTargetData];\n\n      if (!(type in listeners)) {\n        listeners[type] = [];\n      }\n\n      for (const listener of listeners[type]) {\n        if (\n          ((typeof listener.options === "boolean" &&\n            listener.options === options.capture) ||\n            (typeof listener.options === "object" &&\n              listener.options.capture === options.capture)) &&\n          listener.callback === callback\n        ) {\n          return;\n        }\n      }\n      if (options?.signal) {\n        const signal = options?.signal;\n        if (signal.aborted) {\n          // If signal is not null and its aborted flag is set\x2C then return.\n          return;\n        } else {\n          // If listener\u2019s signal is not null\x2C then add the following abort\n          // abort steps to it: Remove an event listener.\n          signal.addEventListener("abort"\x2C () => {\n            this.removeEventListener(type\x2C callback\x2C options);\n          });\n        }\n      } else if (options?.signal === null) {\n        throw new TypeError("signal must be non-null");\n      }\n\n      ArrayPrototypePush(listeners[type]\x2C { callback\x2C options });\n    }\n\n    removeEventListener(\n      type\x2C\n      callback\x2C\n      options\x2C\n    ) {\n      webidl.requiredArguments(arguments.length\x2C 2\x2C {\n        prefix: "Failed to execute 'removeEventListener' on 'EventTarget'"\x2C\n      });\n\n      const { listeners } = (this ?? globalThis)[eventTargetData];\n      if (callback !== null && type in listeners) {\n        listeners[type] = ArrayPrototypeFilter(\n          listeners[type]\x2C\n          (listener) => listener.callback !== callback\x2C\n        );\n      } else if (callback === null || !listeners[type]) {\n        return;\n      }\n\n      options = normalizeEventHandlerOptions(options);\n\n      for (let i = 0; i < listeners[type].length; ++i) {\n        const listener = listeners[type][i];\n        if (\n          ((typeof listener.options === "boolean" &&\n            listener.options === options.capture) ||\n            (typeof listener.options === "object" &&\n              listener.options.capture === options.capture)) &&\n          listener.callback === callback\n        ) {\n          ArrayPrototypeSplice(listeners[type]\x2C i\x2C 1);\n          break;\n        }\n      }\n    }\n\n    dispatchEvent(event) {\n      webidl.requiredArguments(arguments.length\x2C 1\x2C {\n        prefix: "Failed to execute 'dispatchEvent' on 'EventTarget'"\x2C\n      });\n      const self = this ?? globalThis;\n\n      const { listeners } = self[eventTargetData];\n      if (!(event.type in listeners)) {\n        setTarget(event\x2C this);\n        return true;\n      }\n\n      if (getDispatched(event)) {\n        throw new DOMException("Invalid event state."\x2C "InvalidStateError");\n      }\n\n      if (event.eventPhase !== Event.NONE) {\n        throw new DOMException("Invalid event state."\x2C "InvalidStateError");\n      }\n\n      return dispatch(self\x2C event);\n    }\n\n    getParent(_event) {\n      return null;\n    }\n  }\n\n  webidl.configurePrototype(EventTarget);\n\n  defineEnumerableProps(EventTarget\x2C [\n    "addEventListener"\x2C\n    "removeEventListener"\x2C\n    "dispatchEvent"\x2C\n  ]);\n\n  class ErrorEvent extends Event {\n    #message = "";\n    #filename = "";\n    #lineno = "";\n    #colno = "";\n    #error = "";\n\n    get message() {\n      return this.#message;\n    }\n    get filename() {\n      return this.#filename;\n    }\n    get lineno() {\n      return this.#lineno;\n    }\n    get colno() {\n      return this.#colno;\n    }\n    get error() {\n      return this.#error;\n    }\n\n    constructor(\n      type\x2C\n      {\n        bubbles\x2C\n        cancelable\x2C\n        composed\x2C\n        message = ""\x2C\n        filename = ""\x2C\n        lineno = 0\x2C\n        colno = 0\x2C\n        error = null\x2C\n      } = {}\x2C\n    ) {\n      super(type\x2C {\n        bubbles: bubbles\x2C\n        cancelable: cancelable\x2C\n        composed: composed\x2C\n      });\n\n      this.#message = message;\n      this.#filename = filename;\n      this.#lineno = lineno;\n      this.#colno = colno;\n      this.#error = error;\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return inspect(consoleInternal.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: this instanceof ErrorEvent\x2C\n        keys: [\n          ...EVENT_PROPS\x2C\n          "message"\x2C\n          "filename"\x2C\n          "lineno"\x2C\n          "colno"\x2C\n          "error"\x2C\n        ]\x2C\n      }));\n    }\n\n    // TODO(lucacasonato): remove when this interface is spec aligned\n    [SymbolToStringTag] = "ErrorEvent";\n  }\n\n  defineEnumerableProps(ErrorEvent\x2C [\n    "message"\x2C\n    "filename"\x2C\n    "lineno"\x2C\n    "colno"\x2C\n    "error"\x2C\n  ]);\n\n  class CloseEvent extends Event {\n    #wasClean = "";\n    #code = "";\n    #reason = "";\n\n    get wasClean() {\n      return this.#wasClean;\n    }\n    get code() {\n      return this.#code;\n    }\n    get reason() {\n      return this.#reason;\n    }\n\n    constructor(type\x2C {\n      bubbles\x2C\n      cancelable\x2C\n      composed\x2C\n      wasClean = false\x2C\n      code = 0\x2C\n      reason = ""\x2C\n    } = {}) {\n      super(type\x2C {\n        bubbles: bubbles\x2C\n        cancelable: cancelable\x2C\n        composed: composed\x2C\n      });\n\n      this.#wasClean = wasClean;\n      this.#code = code;\n      this.#reason = reason;\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return inspect(consoleInternal.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: this instanceof CloseEvent\x2C\n        keys: [\n          ...EVENT_PROPS\x2C\n          "wasClean"\x2C\n          "code"\x2C\n          "reason"\x2C\n        ]\x2C\n      }));\n    }\n  }\n\n  class MessageEvent extends Event {\n    get source() {\n      return null;\n    }\n\n    constructor(type\x2C eventInitDict) {\n      super(type\x2C {\n        bubbles: eventInitDict?.bubbles ?? false\x2C\n        cancelable: eventInitDict?.cancelable ?? false\x2C\n        composed: eventInitDict?.composed ?? false\x2C\n      });\n\n      this.data = eventInitDict?.data ?? null;\n      this.ports = eventInitDict?.ports ?? [];\n      this.origin = eventInitDict?.origin ?? "";\n      this.lastEventId = eventInitDict?.lastEventId ?? "";\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return inspect(consoleInternal.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: this instanceof MessageEvent\x2C\n        keys: [\n          ...EVENT_PROPS\x2C\n          "data"\x2C\n          "origin"\x2C\n          "lastEventId"\x2C\n        ]\x2C\n      }));\n    }\n\n    // TODO(lucacasonato): remove when this interface is spec aligned\n    [SymbolToStringTag] = "CloseEvent";\n  }\n\n  class CustomEvent extends Event {\n    #detail = null;\n\n    constructor(type\x2C eventInitDict = {}) {\n      super(type\x2C eventInitDict);\n      webidl.requiredArguments(arguments.length\x2C 1\x2C {\n        prefix: "Failed to construct 'CustomEvent'"\x2C\n      });\n      const { detail } = eventInitDict;\n      this.#detail = detail;\n    }\n\n    get detail() {\n      return this.#detail;\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return inspect(consoleInternal.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: this instanceof CustomEvent\x2C\n        keys: [\n          ...EVENT_PROPS\x2C\n          "detail"\x2C\n        ]\x2C\n      }));\n    }\n\n    // TODO(lucacasonato): remove when this interface is spec aligned\n    [SymbolToStringTag] = "CustomEvent";\n  }\n\n  ReflectDefineProperty(CustomEvent.prototype\x2C "detail"\x2C {\n    enumerable: true\x2C\n  });\n\n  // ProgressEvent could also be used in other DOM progress event emits.\n  // Current use is for FileReader.\n  class ProgressEvent extends Event {\n    constructor(type\x2C eventInitDict = {}) {\n      super(type\x2C eventInitDict);\n\n      this.lengthComputable = eventInitDict?.lengthComputable ?? false;\n      this.loaded = eventInitDict?.loaded ?? 0;\n      this.total = eventInitDict?.total ?? 0;\n    }\n\n    [SymbolFor("Deno.privateCustomInspect")](inspect) {\n      return inspect(consoleInternal.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: this instanceof ProgressEvent\x2C\n        keys: [\n          ...EVENT_PROPS\x2C\n          "lengthComputable"\x2C\n          "loaded"\x2C\n          "total"\x2C\n        ]\x2C\n      }));\n    }\n\n    // TODO(lucacasonato): remove when this interface is spec aligned\n    [SymbolToStringTag] = "ProgressEvent";\n  }\n\n  const _eventHandlers = Symbol("eventHandlers");\n\n  function makeWrappedHandler(handler\x2C isSpecialErrorEventHandler) {\n    function wrappedHandler(evt) {\n      if (typeof wrappedHandler.handler !== "function") {\n        return;\n      }\n\n      if (\n        isSpecialErrorEventHandler &&\n        evt instanceof ErrorEvent && evt.type === "error"\n      ) {\n        const ret = FunctionPrototypeCall(\n          wrappedHandler.handler\x2C\n          this\x2C\n          evt.message\x2C\n          evt.filename\x2C\n          evt.lineno\x2C\n          evt.colno\x2C\n          evt.error\x2C\n        );\n        if (ret === true) {\n          evt.preventDefault();\n        }\n        return;\n      }\n\n      return FunctionPrototypeCall(wrappedHandler.handler\x2C this\x2C evt);\n    }\n    wrappedHandler.handler = handler;\n    return wrappedHandler;\n  }\n\n  // `init` is an optional function that will be called the first time that the\n  // event handler property is set. It will be called with the object on which\n  // the property is set as its argument.\n  // `isSpecialErrorEventHandler` can be set to true to opt into the special\n  // behavior of event handlers for the "error" event in a global scope.\n  function defineEventHandler(\n    emitter\x2C\n    name\x2C\n    init = undefined\x2C\n    isSpecialErrorEventHandler = false\x2C\n  ) {\n    // HTML specification section 8.1.7.1\n    ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\n      get() {\n        if (!this[_eventHandlers]) {\n          return null;\n        }\n\n        return MapPrototypeGet(this[_eventHandlers]\x2C name)?.handler ?? null;\n      }\x2C\n      set(value) {\n        // All three Web IDL event handler types are nullable callback functions\n        // with the [LegacyTreatNonObjectAsNull] extended attribute\x2C meaning\n        // anything other than an object is treated as null.\n        if (typeof value !== "object" && typeof value !== "function") {\n          value = null;\n        }\n\n        if (!this[_eventHandlers]) {\n          this[_eventHandlers] = new Map();\n        }\n        let handlerWrapper = MapPrototypeGet(this[_eventHandlers]\x2C name);\n        if (handlerWrapper) {\n          handlerWrapper.handler = value;\n        } else if (value !== null) {\n          handlerWrapper = makeWrappedHandler(\n            value\x2C\n            isSpecialErrorEventHandler\x2C\n          );\n          this.addEventListener(name\x2C handlerWrapper);\n          init?.(this);\n        }\n        MapPrototypeSet(this[_eventHandlers]\x2C name\x2C handlerWrapper);\n      }\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n    });\n  }\n\n  window.Event = Event;\n  window.EventTarget = EventTarget;\n  window.ErrorEvent = ErrorEvent;\n  window.CloseEvent = CloseEvent;\n  window.MessageEvent = MessageEvent;\n  window.CustomEvent = CustomEvent;\n  window.ProgressEvent = ProgressEvent;\n  window.dispatchEvent = EventTarget.prototype.dispatchEvent;\n  window.addEventListener = EventTarget.prototype.addEventListener;\n  window.removeEventListener = EventTarget.prototype.removeEventListener;\n  window.__bootstrap.eventTarget = {\n    EventTarget\x2C\n    setEventTargetData\x2C\n  };\n  window.__bootstrap.event = {\n    setIsTrusted\x2C\n    setTarget\x2C\n    defineEventHandler\x2C\n  };\n})(this);\n
code-source-info,0xb7b0835d1f2,14,20423,20491,C0O20438C2O20445C8O20464C11O20462C16O20490,,
tick,0x556368b80035,68051,0,0x0,3,0x55636916ccf0,0xb7b08359512,0xb7b0835906c
tick,0x556368b7fe3c,68100,0,0x0,3,0x55636916ccf0,0xb7b08359512,0xb7b0835906c
code-creation,LazyCompile,10,68220,0xb7b0835e7de,23,getDefaultTargetData deno:ext/web/02_event.js:869:32,0xb7b0817fec8,~
code-source-info,0xb7b0835e7de,14,21014,21176,C0O21023C7O21130C12O21130C22O21172,,
tick,0x556369189ab1,68294,0,0x0,0,0x5563691865f0,0xb7b0835e7de,0xb7b0835d1fa,0xb7b08359512,0xb7b0835906c
code-creation,LazyCompile,10,68577,0xb7b0835eb4a,447,addEventListener deno:ext/web/02_event.js:884:21,0xb7b0817ff30,~
code-source-info,0xb7b0835eb4a
code-creation,LazyCompile,10,68791,0xb7b0835efb6,110,requiredArguments deno:ext/webidl/00_webidl.js:620:29,0xb7b080f0728,~
script-source,6,deno:ext/webidl/00_webidl.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n\n// Adapted from https://github.com/jsdom/webidl-conversions.\n// Copyright Domenic Denicola. Licensed under BSD-2-Clause License.\n// Original license at https://github.com/jsdom/webidl-conversions/blob/master/LICENSE.md.\n\n/// <reference path="../../core/internal.d.ts" />\n\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const {\n    ArrayBuffer\x2C\n    ArrayBufferIsView\x2C\n    ArrayPrototypeForEach\x2C\n    ArrayPrototypePush\x2C\n    ArrayPrototypeSort\x2C\n    ArrayIteratorPrototype\x2C\n    BigInt\x2C\n    BigIntAsIntN\x2C\n    BigIntAsUintN\x2C\n    DataView\x2C\n    Float32Array\x2C\n    Float64Array\x2C\n    FunctionPrototypeBind\x2C\n    Int16Array\x2C\n    Int32Array\x2C\n    Int8Array\x2C\n    isNaN\x2C\n    MathFloor\x2C\n    MathFround\x2C\n    MathMax\x2C\n    MathMin\x2C\n    MathPow\x2C\n    MathRound\x2C\n    MathTrunc\x2C\n    Number\x2C\n    NumberIsFinite\x2C\n    NumberIsNaN\x2C\n    // deno-lint-ignore camelcase\n    NumberMAX_SAFE_INTEGER\x2C\n    // deno-lint-ignore camelcase\n    NumberMIN_SAFE_INTEGER\x2C\n    ObjectAssign\x2C\n    ObjectCreate\x2C\n    ObjectDefineProperties\x2C\n    ObjectDefineProperty\x2C\n    ObjectGetOwnPropertyDescriptor\x2C\n    ObjectGetOwnPropertyDescriptors\x2C\n    ObjectGetPrototypeOf\x2C\n    ObjectPrototypeHasOwnProperty\x2C\n    ObjectIs\x2C\n    PromisePrototypeThen\x2C\n    PromiseReject\x2C\n    PromiseResolve\x2C\n    ReflectApply\x2C\n    ReflectDefineProperty\x2C\n    ReflectGetOwnPropertyDescriptor\x2C\n    ReflectOwnKeys\x2C\n    RegExpPrototypeTest\x2C\n    Set\x2C\n    // TODO(lucacasonato): add SharedArrayBuffer to primordials\n    // SharedArrayBuffer\x2C\n    String\x2C\n    StringFromCodePoint\x2C\n    StringPrototypeCharCodeAt\x2C\n    Symbol\x2C\n    SymbolIterator\x2C\n    SymbolToStringTag\x2C\n    TypeError\x2C\n    Uint16Array\x2C\n    Uint32Array\x2C\n    Uint8Array\x2C\n    Uint8ClampedArray\x2C\n  } = window.__bootstrap.primordials;\n\n  function makeException(ErrorType\x2C message\x2C opts = {}) {\n    return new ErrorType(\n      `${opts.prefix ? opts.prefix + ": " : ""}${\n        opts.context ? opts.context : "Value"\n      } ${message}`\x2C\n    );\n  }\n\n  function toNumber(value) {\n    if (typeof value === "bigint") {\n      throw TypeError("Cannot convert a BigInt value to a number");\n    }\n    return Number(value);\n  }\n\n  function type(V) {\n    if (V === null) {\n      return "Null";\n    }\n    switch (typeof V) {\n      case "undefined":\n        return "Undefined";\n      case "boolean":\n        return "Boolean";\n      case "number":\n        return "Number";\n      case "string":\n        return "String";\n      case "symbol":\n        return "Symbol";\n      case "bigint":\n        return "BigInt";\n      case "object":\n      // Falls through\n      case "function":\n      // Falls through\n      default:\n        // Per ES spec\x2C typeof returns an implemention-defined value that is not any of the existing ones for\n        // uncallable non-standard exotic objects. Yet Type() which the Web IDL spec depends on returns Object for\n        // such cases. So treat the default case as an object.\n        return "Object";\n    }\n  }\n\n  // Round x to the nearest integer\x2C choosing the even integer if it lies halfway between two.\n  function evenRound(x) {\n    // There are four cases for numbers with fractional part being .5:\n    //\n    // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n    //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n    //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n    //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n    //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n    // (where n is a non-negative integer)\n    //\n    // Branch here for cases 1 and 4\n    if (\n      (x > 0 && x % 1 === +0.5 && (x & 1) === 0) ||\n      (x < 0 && x % 1 === -0.5 && (x & 1) === 1)\n    ) {\n      return censorNegativeZero(MathFloor(x));\n    }\n\n    return censorNegativeZero(MathRound(x));\n  }\n\n  function integerPart(n) {\n    return censorNegativeZero(MathTrunc(n));\n  }\n\n  function sign(x) {\n    return x < 0 ? -1 : 1;\n  }\n\n  function modulo(x\x2C y) {\n    // https://tc39.github.io/ecma262/#eqn-modulo\n    // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n    const signMightNotMatch = x % y;\n    if (sign(y) !== sign(signMightNotMatch)) {\n      return signMightNotMatch + y;\n    }\n    return signMightNotMatch;\n  }\n\n  function censorNegativeZero(x) {\n    return x === 0 ? 0 : x;\n  }\n\n  function createIntegerConversion(bitLength\x2C typeOpts) {\n    const isSigned = !typeOpts.unsigned;\n\n    let lowerBound;\n    let upperBound;\n    if (bitLength === 64) {\n      upperBound = NumberMAX_SAFE_INTEGER;\n      lowerBound = !isSigned ? 0 : NumberMIN_SAFE_INTEGER;\n    } else if (!isSigned) {\n      lowerBound = 0;\n      upperBound = MathPow(2\x2C bitLength) - 1;\n    } else {\n      lowerBound = -MathPow(2\x2C bitLength - 1);\n      upperBound = MathPow(2\x2C bitLength - 1) - 1;\n    }\n\n    const twoToTheBitLength = MathPow(2\x2C bitLength);\n    const twoToOneLessThanTheBitLength = MathPow(2\x2C bitLength - 1);\n\n    return (V\x2C opts = {}) => {\n      let x = toNumber(V\x2C opts);\n      x = censorNegativeZero(x);\n\n      if (opts.enforceRange) {\n        if (!NumberIsFinite(x)) {\n          throw makeException(TypeError\x2C "is not a finite number"\x2C opts);\n        }\n\n        x = integerPart(x);\n\n        if (x < lowerBound || x > upperBound) {\n          throw makeException(\n            TypeError\x2C\n            `is outside the accepted range of ${lowerBound} to ${upperBound}\x2C inclusive`\x2C\n            opts\x2C\n          );\n        }\n\n        return x;\n      }\n\n      if (!NumberIsNaN(x) && opts.clamp) {\n        x = MathMin(MathMax(x\x2C lowerBound)\x2C upperBound);\n        x = evenRound(x);\n        return x;\n      }\n\n      if (!NumberIsFinite(x) || x === 0) {\n        return 0;\n      }\n      x = integerPart(x);\n\n      // Math.pow(2\x2C 64) is not accurately representable in JavaScript\x2C so try to avoid these per-spec operations if\n      // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n      if (x >= lowerBound && x <= upperBound) {\n        return x;\n      }\n\n      // These will not work great for bitLength of 64\x2C but oh well. See the README for more details.\n      x = modulo(x\x2C twoToTheBitLength);\n      if (isSigned && x >= twoToOneLessThanTheBitLength) {\n        return x - twoToTheBitLength;\n      }\n      return x;\n    };\n  }\n\n  function createLongLongConversion(bitLength\x2C { unsigned }) {\n    const upperBound = NumberMAX_SAFE_INTEGER;\n    const lowerBound = unsigned ? 0 : NumberMIN_SAFE_INTEGER;\n    const asBigIntN = unsigned ? BigIntAsUintN : BigIntAsIntN;\n\n    return (V\x2C opts = {}) => {\n      let x = toNumber(V\x2C opts);\n      x = censorNegativeZero(x);\n\n      if (opts.enforceRange) {\n        if (!NumberIsFinite(x)) {\n          throw makeException(TypeError\x2C "is not a finite number"\x2C opts);\n        }\n\n        x = integerPart(x);\n\n        if (x < lowerBound || x > upperBound) {\n          throw makeException(\n            TypeError\x2C\n            `is outside the accepted range of ${lowerBound} to ${upperBound}\x2C inclusive`\x2C\n            opts\x2C\n          );\n        }\n\n        return x;\n      }\n\n      if (!NumberIsNaN(x) && opts.clamp) {\n        x = MathMin(MathMax(x\x2C lowerBound)\x2C upperBound);\n        x = evenRound(x);\n        return x;\n      }\n\n      if (!NumberIsFinite(x) || x === 0) {\n        return 0;\n      }\n\n      let xBigInt = BigInt(integerPart(x));\n      xBigInt = asBigIntN(bitLength\x2C xBigInt);\n      return Number(xBigInt);\n    };\n  }\n\n  const converters = [];\n\n  converters.any = (V) => {\n    return V;\n  };\n\n  converters.boolean = function (val) {\n    return !!val;\n  };\n\n  converters.byte = createIntegerConversion(8\x2C { unsigned: false });\n  converters.octet = createIntegerConversion(8\x2C { unsigned: true });\n\n  converters.short = createIntegerConversion(16\x2C { unsigned: false });\n  converters["unsigned short"] = createIntegerConversion(16\x2C {\n    unsigned: true\x2C\n  });\n\n  converters.long = createIntegerConversion(32\x2C { unsigned: false });\n  converters["unsigned long"] = createIntegerConversion(32\x2C { unsigned: true });\n\n  converters["long long"] = createLongLongConversion(64\x2C { unsigned: false });\n  converters["unsigned long long"] = createLongLongConversion(64\x2C {\n    unsigned: true\x2C\n  });\n\n  converters.float = (V\x2C opts) => {\n    const x = toNumber(V\x2C opts);\n\n    if (!NumberIsFinite(x)) {\n      throw makeException(\n        TypeError\x2C\n        "is not a finite floating-point value"\x2C\n        opts\x2C\n      );\n    }\n\n    if (ObjectIs(x\x2C -0)) {\n      return x;\n    }\n\n    const y = MathFround(x);\n\n    if (!NumberIsFinite(y)) {\n      throw makeException(\n        TypeError\x2C\n        "is outside the range of a single-precision floating-point value"\x2C\n        opts\x2C\n      );\n    }\n\n    return y;\n  };\n\n  converters["unrestricted float"] = (V\x2C opts) => {\n    const x = toNumber(V\x2C opts);\n\n    if (isNaN(x)) {\n      return x;\n    }\n\n    if (ObjectIs(x\x2C -0)) {\n      return x;\n    }\n\n    return MathFround(x);\n  };\n\n  converters.double = (V\x2C opts) => {\n    const x = toNumber(V\x2C opts);\n\n    if (!NumberIsFinite(x)) {\n      throw makeException(\n        TypeError\x2C\n        "is not a finite floating-point value"\x2C\n        opts\x2C\n      );\n    }\n\n    return x;\n  };\n\n  converters["unrestricted double"] = (V\x2C opts) => {\n    const x = toNumber(V\x2C opts);\n\n    return x;\n  };\n\n  converters.DOMString = function (V\x2C opts = {}) {\n    if (typeof V === "string") {\n      return V;\n    } else if (V === null && opts.treatNullAsEmptyString) {\n      return "";\n    } else if (typeof V === "symbol") {\n      throw makeException(\n        TypeError\x2C\n        "is a symbol\x2C which cannot be converted to a string"\x2C\n        opts\x2C\n      );\n    }\n\n    return String(V);\n  };\n\n  // deno-lint-ignore no-control-regex\n  const IS_BYTE_STRING = /^[\\x00-\\xFF]*$/;\n  converters.ByteString = (V\x2C opts) => {\n    const x = converters.DOMString(V\x2C opts);\n    if (!RegExpPrototypeTest(IS_BYTE_STRING\x2C x)) {\n      throw makeException(TypeError\x2C "is not a valid ByteString"\x2C opts);\n    }\n    return x;\n  };\n\n  converters.USVString = (V\x2C opts) => {\n    const S = converters.DOMString(V\x2C opts);\n    const n = S.length;\n    let U = "";\n    for (let i = 0; i < n; ++i) {\n      const c = StringPrototypeCharCodeAt(S\x2C i);\n      if (c < 0xd800 || c > 0xdfff) {\n        U += StringFromCodePoint(c);\n      } else if (0xdc00 <= c && c <= 0xdfff) {\n        U += StringFromCodePoint(0xfffd);\n      } else if (i === n - 1) {\n        U += StringFromCodePoint(0xfffd);\n      } else {\n        const d = StringPrototypeCharCodeAt(S\x2C i + 1);\n        if (0xdc00 <= d && d <= 0xdfff) {\n          const a = c & 0x3ff;\n          const b = d & 0x3ff;\n          U += StringFromCodePoint((2 << 15) + (2 << 9) * a + b);\n          ++i;\n        } else {\n          U += StringFromCodePoint(0xfffd);\n        }\n      }\n    }\n    return U;\n  };\n\n  converters.object = (V\x2C opts) => {\n    if (type(V) !== "Object") {\n      throw makeException(TypeError\x2C "is not an object"\x2C opts);\n    }\n\n    return V;\n  };\n\n  // Not exported\x2C but used in Function and VoidFunction.\n\n  // Neither Function nor VoidFunction is defined with [TreatNonObjectAsNull]\x2C so\n  // handling for that is omitted.\n  function convertCallbackFunction(V\x2C opts) {\n    if (typeof V !== "function") {\n      throw makeException(TypeError\x2C "is not a function"\x2C opts);\n    }\n    return V;\n  }\n\n  function isNonSharedArrayBuffer(V) {\n    return V instanceof ArrayBuffer;\n  }\n\n  function isSharedArrayBuffer(V) {\n    return V instanceof SharedArrayBuffer;\n  }\n\n  converters.ArrayBuffer = (V\x2C opts = {}) => {\n    if (!isNonSharedArrayBuffer(V)) {\n      if (opts.allowShared && !isSharedArrayBuffer(V)) {\n        throw makeException(\n          TypeError\x2C\n          "is not an ArrayBuffer or SharedArrayBuffer"\x2C\n          opts\x2C\n        );\n      }\n      throw makeException(TypeError\x2C "is not an ArrayBuffer"\x2C opts);\n    }\n\n    return V;\n  };\n\n  converters.DataView = (V\x2C opts = {}) => {\n    if (!(V instanceof DataView)) {\n      throw makeException(TypeError\x2C "is not a DataView"\x2C opts);\n    }\n\n    if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n      throw makeException(\n        TypeError\x2C\n        "is backed by a SharedArrayBuffer\x2C which is not allowed"\x2C\n        opts\x2C\n      );\n    }\n\n    return V;\n  };\n\n  // Returns the unforgeable `TypedArray` constructor name or `undefined`\x2C\n  // if the `this` value isn't a valid `TypedArray` object.\n  //\n  // https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\n  const typedArrayNameGetter = ObjectGetOwnPropertyDescriptor(\n    ObjectGetPrototypeOf(Uint8Array).prototype\x2C\n    SymbolToStringTag\x2C\n  ).get;\n  ArrayPrototypeForEach(\n    [\n      Int8Array\x2C\n      Int16Array\x2C\n      Int32Array\x2C\n      Uint8Array\x2C\n      Uint16Array\x2C\n      Uint32Array\x2C\n      Uint8ClampedArray\x2C\n      Float32Array\x2C\n      Float64Array\x2C\n    ]\x2C\n    (func) => {\n      const name = func.name;\n      const article = RegExpPrototypeTest(/^[AEIOU]/\x2C name) ? "an" : "a";\n      converters[name] = (V\x2C opts = {}) => {\n        if (!ArrayBufferIsView(V) || typedArrayNameGetter.call(V) !== name) {\n          throw makeException(\n            TypeError\x2C\n            `is not ${article} ${name} object`\x2C\n            opts\x2C\n          );\n        }\n        if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n          throw makeException(\n            TypeError\x2C\n            "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n            opts\x2C\n          );\n        }\n\n        return V;\n      };\n    }\x2C\n  );\n\n  // Common definitions\n\n  converters.ArrayBufferView = (V\x2C opts = {}) => {\n    if (!ArrayBufferIsView(V)) {\n      throw makeException(\n        TypeError\x2C\n        "is not a view on an ArrayBuffer or SharedArrayBuffer"\x2C\n        opts\x2C\n      );\n    }\n\n    if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n      throw makeException(\n        TypeError\x2C\n        "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n        opts\x2C\n      );\n    }\n\n    return V;\n  };\n\n  converters.BufferSource = (V\x2C opts = {}) => {\n    if (ArrayBufferIsView(V)) {\n      if (!opts.allowShared && isSharedArrayBuffer(V.buffer)) {\n        throw makeException(\n          TypeError\x2C\n          "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n          opts\x2C\n        );\n      }\n\n      return V;\n    }\n\n    if (!opts.allowShared && !isNonSharedArrayBuffer(V)) {\n      throw makeException(\n        TypeError\x2C\n        "is not an ArrayBuffer or a view on one"\x2C\n        opts\x2C\n      );\n    }\n    if (\n      opts.allowShared &&\n      !isSharedArrayBuffer(V) &&\n      !isNonSharedArrayBuffer(V)\n    ) {\n      throw makeException(\n        TypeError\x2C\n        "is not an ArrayBuffer\x2C SharedArrayBuffer\x2C or a view on one"\x2C\n        opts\x2C\n      );\n    }\n\n    return V;\n  };\n\n  converters.DOMTimeStamp = converters["unsigned long long"];\n  converters.DOMHighResTimeStamp = converters["double"];\n\n  converters.Function = convertCallbackFunction;\n\n  converters.VoidFunction = convertCallbackFunction;\n\n  converters["UVString?"] = createNullableConverter(\n    converters.USVString\x2C\n  );\n  converters["sequence<double>"] = createSequenceConverter(\n    converters.double\x2C\n  );\n  converters["sequence<object>"] = createSequenceConverter(\n    converters.object\x2C\n  );\n  converters["Promise<undefined>"] = createPromiseConverter(() => undefined);\n\n  converters["sequence<ByteString>"] = createSequenceConverter(\n    converters.ByteString\x2C\n  );\n  converters["sequence<sequence<ByteString>>"] = createSequenceConverter(\n    converters["sequence<ByteString>"]\x2C\n  );\n  converters["record<ByteString\x2C ByteString>"] = createRecordConverter(\n    converters.ByteString\x2C\n    converters.ByteString\x2C\n  );\n\n  converters["sequence<USVString>"] = createSequenceConverter(\n    converters.USVString\x2C\n  );\n  converters["sequence<sequence<USVString>>"] = createSequenceConverter(\n    converters["sequence<USVString>"]\x2C\n  );\n  converters["record<USVString\x2C USVString>"] = createRecordConverter(\n    converters.USVString\x2C\n    converters.USVString\x2C\n  );\n\n  converters["sequence<DOMString>"] = createSequenceConverter(\n    converters.DOMString\x2C\n  );\n\n  function requiredArguments(length\x2C required\x2C opts = {}) {\n    if (length < required) {\n      const errMsg = `${\n        opts.prefix ? opts.prefix + ": " : ""\n      }${required} argument${\n        required === 1 ? "" : "s"\n      } required\x2C but only ${length} present.`;\n      throw new TypeError(errMsg);\n    }\n  }\n\n  function createDictionaryConverter(name\x2C ...dictionaries) {\n    let hasRequiredKey = false;\n    const allMembers = [];\n    for (const members of dictionaries) {\n      for (const member of members) {\n        if (member.required) {\n          hasRequiredKey = true;\n        }\n        ArrayPrototypePush(allMembers\x2C member);\n      }\n    }\n    ArrayPrototypeSort(allMembers\x2C (a\x2C b) => {\n      if (a.key == b.key) {\n        return 0;\n      }\n      return a.key < b.key ? -1 : 1;\n    });\n\n    const defaultValues = {};\n    for (const member of allMembers) {\n      if ("defaultValue" in member) {\n        const idlMemberValue = member.defaultValue;\n        const imvType = typeof idlMemberValue;\n        // Copy by value types can be directly assigned\x2C copy by reference types\n        // need to be re-created for each allocation.\n        if (\n          imvType === "number" || imvType === "boolean" ||\n          imvType === "string" || imvType === "bigint" ||\n          imvType === "undefined"\n        ) {\n          defaultValues[member.key] = member.converter(idlMemberValue\x2C {});\n        } else {\n          ObjectDefineProperty(defaultValues\x2C member.key\x2C {\n            get() {\n              return member.converter(idlMemberValue\x2C member.defaultValue);\n            }\x2C\n            enumerable: true\x2C\n          });\n        }\n      }\n    }\n\n    return function (V\x2C opts = {}) {\n      const typeV = type(V);\n      switch (typeV) {\n        case "Undefined":\n        case "Null":\n        case "Object":\n          break;\n        default:\n          throw makeException(\n            TypeError\x2C\n            "can not be converted to a dictionary"\x2C\n            opts\x2C\n          );\n      }\n      const esDict = V;\n\n      const idlDict = ObjectAssign({}\x2C defaultValues);\n\n      // NOTE: fast path Null and Undefined.\n      if ((V === undefined || V === null) && !hasRequiredKey) {\n        return idlDict;\n      }\n\n      for (const member of allMembers) {\n        const key = member.key;\n\n        let esMemberValue;\n        if (typeV === "Undefined" || typeV === "Null") {\n          esMemberValue = undefined;\n        } else {\n          esMemberValue = esDict[key];\n        }\n\n        if (esMemberValue !== undefined) {\n          const context = `'${key}' of '${name}'${\n            opts.context ? ` (${opts.context})` : ""\n          }`;\n          const converter = member.converter;\n          const idlMemberValue = converter(esMemberValue\x2C { ...opts\x2C context });\n          idlDict[key] = idlMemberValue;\n        } else if (member.required) {\n          throw makeException(\n            TypeError\x2C\n            `can not be converted to '${name}' because '${key}' is required in '${name}'.`\x2C\n            { ...opts }\x2C\n          );\n        }\n      }\n\n      return idlDict;\n    };\n  }\n\n  // https://heycam.github.io/webidl/#es-enumeration\n  function createEnumConverter(name\x2C values) {\n    const E = new Set(values);\n\n    return function (V\x2C opts = {}) {\n      const S = String(V);\n\n      if (!E.has(S)) {\n        throw new TypeError(\n          `${\n            opts.prefix ? opts.prefix + ": " : ""\n          }The provided value '${S}' is not a valid enum value of type ${name}.`\x2C\n        );\n      }\n\n      return S;\n    };\n  }\n\n  function createNullableConverter(converter) {\n    return (V\x2C opts = {}) => {\n      // FIXME: If Type(V) is not Object\x2C and the conversion to an IDL value is\n      // being performed due to V being assigned to an attribute whose type is a\n      // nullable callback function that is annotated with\n      // [LegacyTreatNonObjectAsNull]\x2C then return the IDL nullable type T?\n      // value null.\n\n      if (V === null || V === undefined) return null;\n      return converter(V\x2C opts);\n    };\n  }\n\n  // https://heycam.github.io/webidl/#es-sequence\n  function createSequenceConverter(converter) {\n    return function (V\x2C opts = {}) {\n      if (type(V) !== "Object") {\n        throw makeException(\n          TypeError\x2C\n          "can not be converted to sequence."\x2C\n          opts\x2C\n        );\n      }\n      const iter = V?.[SymbolIterator]?.();\n      if (iter === undefined) {\n        throw makeException(\n          TypeError\x2C\n          "can not be converted to sequence."\x2C\n          opts\x2C\n        );\n      }\n      const array = [];\n      while (true) {\n        const res = iter?.next?.();\n        if (res === undefined) {\n          throw makeException(\n            TypeError\x2C\n            "can not be converted to sequence."\x2C\n            opts\x2C\n          );\n        }\n        if (res.done === true) break;\n        const val = converter(res.value\x2C {\n          ...opts\x2C\n          context: `${opts.context}\x2C index ${array.length}`\x2C\n        });\n        ArrayPrototypePush(array\x2C val);\n      }\n      return array;\n    };\n  }\n\n  function createRecordConverter(keyConverter\x2C valueConverter) {\n    return (V\x2C opts) => {\n      if (type(V) !== "Object") {\n        throw makeException(\n          TypeError\x2C\n          "can not be converted to dictionary."\x2C\n          opts\x2C\n        );\n      }\n      const result = {};\n      // Fast path for common case (not a Proxy)\n      if (!core.isProxy(V)) {\n        for (const key in V) {\n          if (!ObjectPrototypeHasOwnProperty(V\x2C key)) {\n            continue;\n          }\n          const typedKey = keyConverter(key\x2C opts);\n          const value = V[key];\n          const typedValue = valueConverter(value\x2C opts);\n          result[typedKey] = typedValue;\n        }\n        return result;\n      }\n      // Slow path if Proxy (e.g: in WPT tests)\n      const keys = ReflectOwnKeys(V);\n      for (const key of keys) {\n        const desc = ObjectGetOwnPropertyDescriptor(V\x2C key);\n        if (desc !== undefined && desc.enumerable === true) {\n          const typedKey = keyConverter(key\x2C opts);\n          const value = V[key];\n          const typedValue = valueConverter(value\x2C opts);\n          result[typedKey] = typedValue;\n        }\n      }\n      return result;\n    };\n  }\n\n  function createPromiseConverter(converter) {\n    return (V\x2C opts) =>\n      PromisePrototypeThen(PromiseResolve(V)\x2C (V) => converter(V\x2C opts));\n  }\n\n  function invokeCallbackFunction(\n    callable\x2C\n    args\x2C\n    thisArg\x2C\n    returnValueConverter\x2C\n    opts\x2C\n  ) {\n    try {\n      const rv = ReflectApply(callable\x2C thisArg\x2C args);\n      return returnValueConverter(rv\x2C {\n        prefix: opts.prefix\x2C\n        context: "return value"\x2C\n      });\n    } catch (err) {\n      if (opts.returnsPromise === true) {\n        return PromiseReject(err);\n      }\n      throw err;\n    }\n  }\n\n  const brand = Symbol("[[webidl.brand]]");\n\n  function createInterfaceConverter(name\x2C prototype) {\n    return (V\x2C opts) => {\n      if (!(V instanceof prototype) || V[brand] !== brand) {\n        throw makeException(TypeError\x2C `is not of type ${name}.`\x2C opts);\n      }\n      return V;\n    };\n  }\n\n  // TODO(lucacasonato): have the user pass in the prototype\x2C and not the type.\n  function createBranded(Type) {\n    const t = ObjectCreate(Type.prototype);\n    t[brand] = brand;\n    return t;\n  }\n\n  function assertBranded(self\x2C prototype) {\n    if (!(self instanceof prototype) || self[brand] !== brand) {\n      throw new TypeError("Illegal invocation");\n    }\n  }\n\n  function illegalConstructor() {\n    throw new TypeError("Illegal constructor");\n  }\n\n  function define(target\x2C source) {\n    for (const key of ReflectOwnKeys(source)) {\n      const descriptor = ReflectGetOwnPropertyDescriptor(source\x2C key);\n      if (descriptor && !ReflectDefineProperty(target\x2C key\x2C descriptor)) {\n        throw new TypeError(`Cannot redefine property: ${String(key)}`);\n      }\n    }\n  }\n\n  const _iteratorInternal = Symbol("iterator internal");\n\n  const globalIteratorPrototype = ObjectGetPrototypeOf(ArrayIteratorPrototype);\n\n  function mixinPairIterable(name\x2C prototype\x2C dataSymbol\x2C keyKey\x2C valueKey) {\n    const iteratorPrototype = ObjectCreate(globalIteratorPrototype\x2C {\n      [SymbolToStringTag]: { configurable: true\x2C value: `${name} Iterator` }\x2C\n    });\n    define(iteratorPrototype\x2C {\n      next() {\n        const internal = this && this[_iteratorInternal];\n        if (!internal) {\n          throw new TypeError(\n            `next() called on a value that is not a ${name} iterator object`\x2C\n          );\n        }\n        const { target\x2C kind\x2C index } = internal;\n        const values = target[dataSymbol];\n        const len = values.length;\n        if (index >= len) {\n          return { value: undefined\x2C done: true };\n        }\n        const pair = values[index];\n        internal.index = index + 1;\n        let result;\n        switch (kind) {\n          case "key":\n            result = pair[keyKey];\n            break;\n          case "value":\n            result = pair[valueKey];\n            break;\n          case "key+value":\n            result = [pair[keyKey]\x2C pair[valueKey]];\n            break;\n        }\n        return { value: result\x2C done: false };\n      }\x2C\n    });\n    function createDefaultIterator(target\x2C kind) {\n      const iterator = ObjectCreate(iteratorPrototype);\n      ObjectDefineProperty(iterator\x2C _iteratorInternal\x2C {\n        value: { target\x2C kind\x2C index: 0 }\x2C\n        configurable: true\x2C\n      });\n      return iterator;\n    }\n\n    function entries() {\n      assertBranded(this\x2C prototype);\n      return createDefaultIterator(this\x2C "key+value");\n    }\n\n    const properties = {\n      entries: {\n        value: entries\x2C\n        writable: true\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      [SymbolIterator]: {\n        value: entries\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      keys: {\n        value: function keys() {\n          assertBranded(this\x2C prototype);\n          return createDefaultIterator(this\x2C "key");\n        }\x2C\n        writable: true\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      values: {\n        value: function values() {\n          assertBranded(this\x2C prototype);\n          return createDefaultIterator(this\x2C "value");\n        }\x2C\n        writable: true\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      forEach: {\n        value: function forEach(idlCallback\x2C thisArg = undefined) {\n          assertBranded(this\x2C prototype);\n          const prefix = `Failed to execute 'forEach' on '${name}'`;\n          requiredArguments(arguments.length\x2C 1\x2C { prefix });\n          idlCallback = converters["Function"](idlCallback\x2C {\n            prefix\x2C\n            context: "Argument 1"\x2C\n          });\n          idlCallback = FunctionPrototypeBind(\n            idlCallback\x2C\n            thisArg ?? globalThis\x2C\n          );\n          const pairs = this[dataSymbol];\n          for (let i = 0; i < pairs.length; i++) {\n            const entry = pairs[i];\n            idlCallback(entry[valueKey]\x2C entry[keyKey]\x2C this);\n          }\n        }\x2C\n        writable: true\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    };\n    return ObjectDefineProperties(prototype.prototype\x2C properties);\n  }\n\n  function configurePrototype(prototype) {\n    const descriptors = ObjectGetOwnPropertyDescriptors(prototype.prototype);\n    for (const key in descriptors) {\n      if (key === "constructor") continue;\n      const descriptor = descriptors[key];\n      if ("value" in descriptor && typeof descriptor.value === "function") {\n        ObjectDefineProperty(prototype.prototype\x2C key\x2C {\n          enumerable: true\x2C\n          writable: true\x2C\n          configurable: true\x2C\n        });\n      } else if ("get" in descriptor) {\n        ObjectDefineProperty(prototype.prototype\x2C key\x2C {\n          enumerable: true\x2C\n          configurable: true\x2C\n        });\n      }\n    }\n    ObjectDefineProperty(prototype.prototype\x2C SymbolToStringTag\x2C {\n      value: prototype.name\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      writable: false\x2C\n    });\n  }\n\n  window.__bootstrap ??= {};\n  window.__bootstrap.webidl = {\n    type\x2C\n    makeException\x2C\n    converters\x2C\n    requiredArguments\x2C\n    createDictionaryConverter\x2C\n    createEnumConverter\x2C\n    createNullableConverter\x2C\n    createSequenceConverter\x2C\n    createRecordConverter\x2C\n    createPromiseConverter\x2C\n    invokeCallbackFunction\x2C\n    createInterfaceConverter\x2C\n    brand\x2C\n    createBranded\x2C\n    assertBranded\x2C\n    illegalConstructor\x2C\n    mixinPairIterable\x2C\n    configurePrototype\x2C\n  };\n})(this);\n
code-source-info,0xb7b0835efb6,6,16192,16480,C10O16192C16O16228C18O16239C23O16291C29O16305C36O16312C47O16333C60O16371C84O16417C95O16442C102O16448C107O16442C109O16479,,
tick,0x7f056c94e129,70591,0,0x0,3,0x55636916ccf0,0xb7b0835eb7a,0xb7b0835956f,0xb7b0835906c
tick,0x7f056c958b5c,70629,0,0x0,3,0x55636916ccf0,0xb7b0835eb7a,0xb7b0835956f,0xb7b0835906c
code-creation,LazyCompile,10,70764,0xb7b08360196,36,normalizeAddEventHandlerOptions deno:ext/web/02_event.js:791:43,0xb7b0817fcf4,~
code-source-info,0xb7b08360196,14,19376,19619,C0O19401C12O19477C19O19503C22O19503C32O19574C33O19594C35O19609,,
code-creation,LazyCompile,10,71184,0xb7b0836044a,200,runtimeStart deno:runtime/js/99_main.js:208:24,0xb7b082994f0,~
code-source-info,0xb7b0836044a,76,6507,7408,C0O6538C5O6543C12O6564C15O6571C20O6543C25O6598C30O6603C37O6628C40O6634C45O6603C50O6660C55O6668C60O6702C65O6736C70O6768C75O6668C80O6809C86O6831C91O6841C96O6841C100O6870C105O6876C110O6904C115O6876C120O6917C125O6922C130O6949C135O6922C141O6999C146O7004C151O7212C159O7230C162O7241C172O7277C175O7288C180O7004C187O7360C194O7384C199O7407,,
code-creation,LazyCompile,10,71287,0xb7b08360612,49,setVersions deno:runtime/js/01_version.js:13:23,0xb7b0823ff3c,~
script-source,53,deno:runtime/js/01_version.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const { ObjectFreeze } = window.__bootstrap.primordials;\n\n  const version = {\n    deno: ""\x2C\n    v8: ""\x2C\n    typescript: ""\x2C\n  };\n\n  function setVersions(\n    denoVersion\x2C\n    v8Version\x2C\n    tsVersion\x2C\n  ) {\n    version.deno = denoVersion;\n    version.v8 = v8Version;\n    version.typescript = tsVersion;\n\n    ObjectFreeze(version);\n  }\n\n  window.__bootstrap.version = {\n    version\x2C\n    setVersions\x2C\n  };\n})(this);\n
code-source-info,0xb7b08360612,53,259,441,C0O318C7O331C11O350C18O361C22O378C29O397C33O415C40O428C43O415C48O440,,
code-creation,LazyCompile,10,71443,0xb7b083607be,321,setBuildInfo deno:runtime/js/01_build.js:15:24,0xb7b0823ed00,~
script-source,51,deno:runtime/js/01_build.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const { ObjectFreeze\x2C StringPrototypeSplit } = window.__bootstrap.primordials;\n\n  const build = {\n    target: "unknown"\x2C\n    arch: "unknown"\x2C\n    os: "unknown"\x2C\n    vendor: "unknown"\x2C\n    env: undefined\x2C\n  };\n\n  function setBuildInfo(target) {\n    const [arch\x2C vendor\x2C os\x2C env] = StringPrototypeSplit(target\x2C "-"\x2C 4);\n    build.target = target;\n    build.arch = arch;\n    build.vendor = vendor;\n    build.os = os;\n    build.env = env;\n    ObjectFreeze(build);\n  }\n\n  window.__bootstrap.build = {\n    build\x2C\n    setBuildInfo\x2C\n  };\n})(this);\n
code-source-info,0xb7b083607be,51,340,570,C0O387C14O387C20O387C42O362C79O368C116O376C153O380C250O429C257O442C261O456C268O467C272O479C279O492C283O506C290O515C294O525C301O535C305O546C312O559C315O546C320O569,,
tick,0x7f056c963f4a,71570,0,0x0,3,0x55636916ccf0,0xb7b083604bd,0xb7b0835957a,0xb7b0835906c
code-creation,LazyCompile,10,71617,0xb7b08360a4e,22,setLogDebug deno:runtime/js/06_util.js:17:23,0xb7b081f5fb8,~
code-source-info,0xb7b08360a4e,55,403,496,C0O425C2O434C8O447C12O467C14O477C21O495,,
code-creation,LazyCompile,10,71676,0xb7b08360b52,18,createPrepareStackTrace deno:core/02_error.js:208:35,0xb7b080e7f90,~
script-source,5,deno:core/02_error.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const {\n    Error\x2C\n    ObjectFreeze\x2C\n    ObjectAssign\x2C\n    StringPrototypeStartsWith\x2C\n    StringPrototypeEndsWith\x2C\n    ObjectDefineProperties\x2C\n    ArrayPrototypePush\x2C\n    ArrayPrototypeMap\x2C\n    ArrayPrototypeJoin\x2C\n  } = window.__bootstrap.primordials;\n\n  // Some of the code here is adapted directly from V8 and licensed under a BSD\n  // style license available here: https://github.com/v8/v8/blob/24886f2d1c565287d33d71e4109a53bf0b54b75c/LICENSE.v8\n  function patchCallSite(callSite\x2C location) {\n    return {\n      getThis() {\n        return callSite.getThis();\n      }\x2C\n      getTypeName() {\n        return callSite.getTypeName();\n      }\x2C\n      getFunction() {\n        return callSite.getFunction();\n      }\x2C\n      getFunctionName() {\n        return callSite.getFunctionName();\n      }\x2C\n      getMethodName() {\n        return callSite.getMethodName();\n      }\x2C\n      getFileName() {\n        return location.fileName;\n      }\x2C\n      getLineNumber() {\n        return location.lineNumber;\n      }\x2C\n      getColumnNumber() {\n        return location.columnNumber;\n      }\x2C\n      getEvalOrigin() {\n        return callSite.getEvalOrigin();\n      }\x2C\n      isToplevel() {\n        return callSite.isToplevel();\n      }\x2C\n      isEval() {\n        return callSite.isEval();\n      }\x2C\n      isNative() {\n        return callSite.isNative();\n      }\x2C\n      isConstructor() {\n        return callSite.isConstructor();\n      }\x2C\n      isAsync() {\n        return callSite.isAsync();\n      }\x2C\n      isPromiseAll() {\n        return callSite.isPromiseAll();\n      }\x2C\n      getPromiseIndex() {\n        return callSite.getPromiseIndex();\n      }\x2C\n    };\n  }\n\n  // Keep in sync with `cli/fmt_errors.rs`.\n  function formatLocation(callSite\x2C formatFileNameFn) {\n    if (callSite.isNative()) {\n      return "native";\n    }\n\n    let result = "";\n\n    const fileName = callSite.getFileName();\n\n    if (fileName) {\n      result += formatFileNameFn(fileName);\n    } else {\n      if (callSite.isEval()) {\n        const evalOrigin = callSite.getEvalOrigin();\n        if (evalOrigin == null) {\n          throw new Error("assert evalOrigin");\n        }\n        result += `${evalOrigin}\x2C `;\n      }\n      result += "<anonymous>";\n    }\n\n    const lineNumber = callSite.getLineNumber();\n    if (lineNumber != null) {\n      result += `:${lineNumber}`;\n\n      const columnNumber = callSite.getColumnNumber();\n      if (columnNumber != null) {\n        result += `:${columnNumber}`;\n      }\n    }\n\n    return result;\n  }\n\n  // Keep in sync with `cli/fmt_errors.rs`.\n  function formatCallSite(callSite\x2C formatFileNameFn) {\n    let result = "";\n    const functionName = callSite.getFunctionName();\n\n    const isTopLevel = callSite.isToplevel();\n    const isAsync = callSite.isAsync();\n    const isPromiseAll = callSite.isPromiseAll();\n    const isConstructor = callSite.isConstructor();\n    const isMethodCall = !(isTopLevel || isConstructor);\n\n    if (isAsync) {\n      result += "async ";\n    }\n    if (isPromiseAll) {\n      result += `Promise.all (index ${callSite.getPromiseIndex()})`;\n      return result;\n    }\n    if (isMethodCall) {\n      const typeName = callSite.getTypeName();\n      const methodName = callSite.getMethodName();\n\n      if (functionName) {\n        if (typeName) {\n          if (!StringPrototypeStartsWith(functionName\x2C typeName)) {\n            result += `${typeName}.`;\n          }\n        }\n        result += functionName;\n        if (methodName) {\n          if (!StringPrototypeEndsWith(functionName\x2C methodName)) {\n            result += ` [as ${methodName}]`;\n          }\n        }\n      } else {\n        if (typeName) {\n          result += `${typeName}.`;\n        }\n        if (methodName) {\n          result += methodName;\n        } else {\n          result += "<anonymous>";\n        }\n      }\n    } else if (isConstructor) {\n      result += "new ";\n      if (functionName) {\n        result += functionName;\n      } else {\n        result += "<anonymous>";\n      }\n    } else if (functionName) {\n      result += functionName;\n    } else {\n      result += formatLocation(callSite\x2C formatFileNameFn);\n      return result;\n    }\n\n    result += ` (${formatLocation(callSite\x2C formatFileNameFn)})`;\n    return result;\n  }\n\n  function evaluateCallSite(callSite) {\n    return {\n      this: callSite.getThis()\x2C\n      typeName: callSite.getTypeName()\x2C\n      function: callSite.getFunction()\x2C\n      functionName: callSite.getFunctionName()\x2C\n      methodName: callSite.getMethodName()\x2C\n      fileName: callSite.getFileName()\x2C\n      lineNumber: callSite.getLineNumber()\x2C\n      columnNumber: callSite.getColumnNumber()\x2C\n      evalOrigin: callSite.getEvalOrigin()\x2C\n      isToplevel: callSite.isToplevel()\x2C\n      isEval: callSite.isEval()\x2C\n      isNative: callSite.isNative()\x2C\n      isConstructor: callSite.isConstructor()\x2C\n      isAsync: callSite.isAsync()\x2C\n      isPromiseAll: callSite.isPromiseAll()\x2C\n      promiseIndex: callSite.getPromiseIndex()\x2C\n    };\n  }\n\n  /**\n   * Returns a function that can be used as `Error.prepareStackTrace`.\n   *\n   * This function accepts an optional argument\x2C a function that performs\n   * source mapping. It is not required to pass this argument\x2C but\n   * in such case only JavaScript sources will have proper position in\n   * stack frames.\n   * @param {(\n   *  fileName: string\x2C\n   *  lineNumber: number\x2C\n   *  columnNumber: number\n   * ) => {\n   *  fileName: string\x2C\n   *  lineNumber: number\x2C\n   *  columnNumber: number\n   * }} sourceMappingFn\n   */\n  function createPrepareStackTrace(sourceMappingFn\x2C formatFileNameFn) {\n    return function prepareStackTrace(\n      error\x2C\n      callSites\x2C\n    ) {\n      const mappedCallSites = ArrayPrototypeMap(callSites\x2C (callSite) => {\n        const fileName = callSite.getFileName();\n        const lineNumber = callSite.getLineNumber();\n        const columnNumber = callSite.getColumnNumber();\n        if (\n          sourceMappingFn && fileName && lineNumber != null &&\n          columnNumber != null\n        ) {\n          return patchCallSite(\n            callSite\x2C\n            sourceMappingFn({\n              fileName\x2C\n              lineNumber\x2C\n              columnNumber\x2C\n            })\x2C\n          );\n        }\n        return callSite;\n      });\n      ObjectDefineProperties(error\x2C {\n        __callSiteEvals: { value: []\x2C configurable: true }\x2C\n      });\n      const formattedCallSites = [];\n      for (const callSite of mappedCallSites) {\n        ArrayPrototypePush(error.__callSiteEvals\x2C evaluateCallSite(callSite));\n        ArrayPrototypePush(\n          formattedCallSites\x2C\n          formatCallSite(callSite\x2C formatFileNameFn)\x2C\n        );\n      }\n      const message = error.message !== undefined ? error.message : "";\n      const name = error.name !== undefined ? error.name : "Error";\n      let messageLine;\n      if (name != "" && message != "") {\n        messageLine = `${name}: ${message}`;\n      } else if ((name || message) != "") {\n        messageLine = name || message;\n      } else {\n        messageLine = "";\n      }\n      return messageLine +\n        ArrayPrototypeJoin(\n          ArrayPrototypeMap(formattedCallSites\x2C (s) => `\\n    at ${s}`)\x2C\n          ""\x2C\n        );\n    };\n  }\n\n  ObjectAssign(globalThis.__bootstrap.core\x2C { createPrepareStackTrace });\n  ObjectFreeze(globalThis.__bootstrap.core);\n})(this);\n
code-source-info,0xb7b08360b52,5,5597,7248,C0O5597C13O5639C17O7244,,
code-creation,LazyCompile,10,72199,0xb7b0836133a,721,registerErrors deno:runtime/js/99_main.js:232:26,0xb7b08299524,~
code-source-info,0xb7b0836133a
tick,0x556369c552f9,72941,0,0x0,6
tick,0x556369c33d86,73834,0,0x0,6
code-creation,Script,10,74143,0xb7b08362752,137, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.test.ts:1:1,0xb7b0836253c,~
script-source,80,file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.test.ts,import { assertEquals } from "https://deno.land/std@0.116.0/testing/asserts.ts";\nimport { calculate } from "./day04.ts";\nimport { getText } from "../shared/file-util.ts";\nconst ACTUAL_INPUT_PATH = "day04.input.txt";\nconst TEST_INPUT_PATH = "day04.test.input.txt";\nconst FILE_INPUT = getText(ACTUAL_INPUT_PATH\x2C 2021);\nconst TEST_INPUT = getText(TEST_INPUT_PATH\x2C 2021);\nDeno.test("2021 > day 4 > part 1 + 2 > example"\x2C () => {\n    const result = calculate(TEST_INPUT);\n    assertEquals(result.first\x2C 4512);\n    assertEquals(result.last\x2C 1924);\n});\nDeno.test("2021 > day 4 > part 1 + 2 > actual"\x2C () => {\n    const result = calculate(FILE_INPUT);\n    assertEquals(result.first\x2C 29440);\n    assertEquals(result.last\x2C 13884);\n});\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5MDQudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRheTA0LnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdkMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRWpELE1BQU0saUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7QUFDNUMsTUFBTSxlQUFlLEdBQUcsc0JBQXNCLENBQUM7QUFFL0MsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3BELE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFFbEQsSUFBSSxDQUFDLElBQUksQ0FBQyxxQ0FBcUMsRUFBRSxHQUFHLEVBQUU7SUFDcEQsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRXJDLFlBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2xDLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsRUFBRSxHQUFHLEVBQUU7SUFDbkQsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRXJDLFlBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ25DLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0RXF1YWxzIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjExNi4wL3Rlc3RpbmcvYXNzZXJ0cy50c1wiO1xuaW1wb3J0IHsgY2FsY3VsYXRlIH0gZnJvbSBcIi4vZGF5MDQudHNcIjtcbmltcG9ydCB7IGdldFRleHQgfSBmcm9tIFwiLi4vc2hhcmVkL2ZpbGUtdXRpbC50c1wiO1xuXG5jb25zdCBBQ1RVQUxfSU5QVVRfUEFUSCA9IFwiZGF5MDQuaW5wdXQudHh0XCI7XG5jb25zdCBURVNUX0lOUFVUX1BBVEggPSBcImRheTA0LnRlc3QuaW5wdXQudHh0XCI7XG5cbmNvbnN0IEZJTEVfSU5QVVQgPSBnZXRUZXh0KEFDVFVBTF9JTlBVVF9QQVRILCAyMDIxKTtcbmNvbnN0IFRFU1RfSU5QVVQgPSBnZXRUZXh0KFRFU1RfSU5QVVRfUEFUSCwgMjAyMSk7XG5cbkRlbm8udGVzdChcIjIwMjEgPiBkYXkgNCA+IHBhcnQgMSArIDIgPiBleGFtcGxlXCIsICgpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gY2FsY3VsYXRlKFRFU1RfSU5QVVQpO1xuXG4gIGFzc2VydEVxdWFscyhyZXN1bHQuZmlyc3QsIDQ1MTIpO1xuICBhc3NlcnRFcXVhbHMocmVzdWx0Lmxhc3QsIDE5MjQpO1xufSk7XG5cbkRlbm8udGVzdChcIjIwMjEgPiBkYXkgNCA+IHBhcnQgMSArIDIgPiBhY3R1YWxcIiwgKCkgPT4ge1xuICBjb25zdCByZXN1bHQgPSBjYWxjdWxhdGUoRklMRV9JTlBVVCk7XG5cbiAgYXNzZXJ0RXF1YWxzKHJlc3VsdC5maXJzdCwgMjk0NDApO1xuICBhc3NlcnRFcXVhbHMocmVzdWx0Lmxhc3QsIDEzODg0KTtcbn0pO1xuIl19
code-source-info,0xb7b08362752,80,0,2939,C10O0C23O0C43O0C47O197C50O240C53O283C64O283C69O283C71O336C82O336C87O336C89O368C93O373C106O373C112O546C116O551C129O551C136O2939,,
tick,0x7f056c96d3ab,74689,0,0x0,2
code-creation,Script,10,75099,0xb7b083703d2,136, https://deno.land/std@0.116.0/testing/asserts.ts:1:1,0xb7b0836f67c,~
script-source,81,https://deno.land/std@0.116.0/testing/asserts.ts,import { bgGreen\x2C bgRed\x2C bold\x2C gray\x2C green\x2C red\x2C stripColor\x2C white\x2C } from "../fmt/colors.ts";\nimport { diff\x2C diffstr\x2C DiffType } from "./_diff.ts";\nconst CAN_NOT_DISPLAY = "[Cannot display]";\nexport class AssertionError extends Error {\n    name = "AssertionError";\n    constructor(message) {\n        super(message);\n    }\n}\nexport function _format(v) {\n    const { Deno } = globalThis;\n    return typeof Deno?.inspect === "function"\n        ? Deno.inspect(v\x2C {\n            depth: Infinity\x2C\n            sorted: true\x2C\n            trailingComma: true\x2C\n            compact: false\x2C\n            iterableLimit: Infinity\x2C\n        })\n        : `"${String(v).replace(/(?=["\\\\])/g\x2C "\\\\")}"`;\n}\nfunction createColor(diffType\x2C { background = false } = {}) {\n    switch (diffType) {\n        case DiffType.added:\n            return (s) => background ? bgGreen(white(s)) : green(bold(s));\n        case DiffType.removed:\n            return (s) => background ? bgRed(white(s)) : red(bold(s));\n        default:\n            return white;\n    }\n}\nfunction createSign(diffType) {\n    switch (diffType) {\n        case DiffType.added:\n            return "+   ";\n        case DiffType.removed:\n            return "-   ";\n        default:\n            return "    ";\n    }\n}\nfunction buildMessage(diffResult\x2C { stringDiff = false } = {}) {\n    const messages = []\x2C diffMessages = [];\n    messages.push("");\n    messages.push("");\n    messages.push(`    ${gray(bold("[Diff]"))} ${red(bold("Actual"))} / ${green(bold("Expected"))}`);\n    messages.push("");\n    messages.push("");\n    diffResult.forEach((result) => {\n        const c = createColor(result.type);\n        const line = result.details?.map((detail) => detail.type !== DiffType.common\n            ? createColor(detail.type\x2C { background: true })(detail.value)\n            : detail.value).join("") ?? result.value;\n        diffMessages.push(c(`${createSign(result.type)}${line}`));\n    });\n    messages.push(...(stringDiff ? [diffMessages.join("")] : diffMessages));\n    messages.push("");\n    return messages;\n}\nfunction isKeyedCollection(x) {\n    return [Symbol.iterator\x2C "size"].every((k) => k in x);\n}\nexport function equal(c\x2C d) {\n    const seen = new Map();\n    return (function compare(a\x2C b) {\n        if (a &&\n            b &&\n            ((a instanceof RegExp && b instanceof RegExp) ||\n                (a instanceof URL && b instanceof URL))) {\n            return String(a) === String(b);\n        }\n        if (a instanceof Date && b instanceof Date) {\n            const aTime = a.getTime();\n            const bTime = b.getTime();\n            if (Number.isNaN(aTime) && Number.isNaN(bTime)) {\n                return true;\n            }\n            return a.getTime() === b.getTime();\n        }\n        if (Object.is(a\x2C b)) {\n            return true;\n        }\n        if (a && typeof a === "object" && b && typeof b === "object") {\n            if (a && b && !constructorsEqual(a\x2C b)) {\n                return false;\n            }\n            if (a instanceof WeakMap || b instanceof WeakMap) {\n                if (!(a instanceof WeakMap && b instanceof WeakMap))\n                    return false;\n                throw new TypeError("cannot compare WeakMap instances");\n            }\n            if (a instanceof WeakSet || b instanceof WeakSet) {\n                if (!(a instanceof WeakSet && b instanceof WeakSet))\n                    return false;\n                throw new TypeError("cannot compare WeakSet instances");\n            }\n            if (seen.get(a) === b) {\n                return true;\n            }\n            if (Object.keys(a || {}).length !== Object.keys(b || {}).length) {\n                return false;\n            }\n            if (isKeyedCollection(a) && isKeyedCollection(b)) {\n                if (a.size !== b.size) {\n                    return false;\n                }\n                let unmatchedEntries = a.size;\n                for (const [aKey\x2C aValue] of a.entries()) {\n                    for (const [bKey\x2C bValue] of b.entries()) {\n                        if ((aKey === aValue && bKey === bValue && compare(aKey\x2C bKey)) ||\n                            (compare(aKey\x2C bKey) && compare(aValue\x2C bValue))) {\n                            unmatchedEntries--;\n                        }\n                    }\n                }\n                return unmatchedEntries === 0;\n            }\n            const merged = { ...a\x2C ...b };\n            for (const key of [\n                ...Object.getOwnPropertyNames(merged)\x2C\n                ...Object.getOwnPropertySymbols(merged)\x2C\n            ]) {\n                if (!compare(a && a[key]\x2C b && b[key])) {\n                    return false;\n                }\n                if (((key in a) && (!(key in b))) || ((key in b) && (!(key in a)))) {\n                    return false;\n                }\n            }\n            seen.set(a\x2C b);\n            if (a instanceof WeakRef || b instanceof WeakRef) {\n                if (!(a instanceof WeakRef && b instanceof WeakRef))\n                    return false;\n                return compare(a.deref()\x2C b.deref());\n            }\n            return true;\n        }\n        return false;\n    })(c\x2C d);\n}\nfunction constructorsEqual(a\x2C b) {\n    return a.constructor === b.constructor ||\n        a.constructor === Object && !b.constructor ||\n        !a.constructor && b.constructor === Object;\n}\nexport function assert(expr\x2C msg = "") {\n    if (!expr) {\n        throw new AssertionError(msg);\n    }\n}\nexport function assertEquals(actual\x2C expected\x2C msg) {\n    if (equal(actual\x2C expected)) {\n        return;\n    }\n    let message = "";\n    const actualString = _format(actual);\n    const expectedString = _format(expected);\n    try {\n        const stringDiff = (typeof actual === "string") &&\n            (typeof expected === "string");\n        const diffResult = stringDiff\n            ? diffstr(actual\x2C expected)\n            : diff(actualString.split("\\n")\x2C expectedString.split("\\n"));\n        const diffMsg = buildMessage(diffResult\x2C { stringDiff }).join("\\n");\n        message = `Values are not equal:\\n${diffMsg}`;\n    }\n    catch {\n        message = `\\n${red(CAN_NOT_DISPLAY)} + \\n\\n`;\n    }\n    if (msg) {\n        message = msg;\n    }\n    throw new AssertionError(message);\n}\nexport function assertNotEquals(actual\x2C expected\x2C msg) {\n    if (!equal(actual\x2C expected)) {\n        return;\n    }\n    let actualString;\n    let expectedString;\n    try {\n        actualString = String(actual);\n    }\n    catch {\n        actualString = "[Cannot display]";\n    }\n    try {\n        expectedString = String(expected);\n    }\n    catch {\n        expectedString = "[Cannot display]";\n    }\n    if (!msg) {\n        msg = `actual: ${actualString} expected: ${expectedString}`;\n    }\n    throw new AssertionError(msg);\n}\nexport function assertStrictEquals(actual\x2C expected\x2C msg) {\n    if (actual === expected) {\n        return;\n    }\n    let message;\n    if (msg) {\n        message = msg;\n    }\n    else {\n        const actualString = _format(actual);\n        const expectedString = _format(expected);\n        if (actualString === expectedString) {\n            const withOffset = actualString\n                .split("\\n")\n                .map((l) => `    ${l}`)\n                .join("\\n");\n            message =\n                `Values have the same structure but are not reference-equal:\\n\\n${red(withOffset)}\\n`;\n        }\n        else {\n            try {\n                const stringDiff = (typeof actual === "string") &&\n                    (typeof expected === "string");\n                const diffResult = stringDiff\n                    ? diffstr(actual\x2C expected)\n                    : diff(actualString.split("\\n")\x2C expectedString.split("\\n"));\n                const diffMsg = buildMessage(diffResult\x2C { stringDiff }).join("\\n");\n                message = `Values are not strictly equal:\\n${diffMsg}`;\n            }\n            catch {\n                message = `\\n${red(CAN_NOT_DISPLAY)} + \\n\\n`;\n            }\n        }\n    }\n    throw new AssertionError(message);\n}\nexport function assertNotStrictEquals(actual\x2C expected\x2C msg) {\n    if (actual !== expected) {\n        return;\n    }\n    throw new AssertionError(msg ?? `Expected "actual" to be strictly unequal to: ${_format(actual)}\\n`);\n}\nexport function assertExists(actual\x2C msg) {\n    if (actual === undefined || actual === null) {\n        if (!msg) {\n            msg = `actual: "${actual}" expected to not be null or undefined`;\n        }\n        throw new AssertionError(msg);\n    }\n}\nexport function assertStringIncludes(actual\x2C expected\x2C msg) {\n    if (!actual.includes(expected)) {\n        if (!msg) {\n            msg = `actual: "${actual}" expected to contain: "${expected}"`;\n        }\n        throw new AssertionError(msg);\n    }\n}\nexport function assertArrayIncludes(actual\x2C expected\x2C msg) {\n    const missing = [];\n    for (let i = 0; i < expected.length; i++) {\n        let found = false;\n        for (let j = 0; j < actual.length; j++) {\n            if (equal(expected[i]\x2C actual[j])) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            missing.push(expected[i]);\n        }\n    }\n    if (missing.length === 0) {\n        return;\n    }\n    if (!msg) {\n        msg = `actual: "${_format(actual)}" expected to include: "${_format(expected)}"\\nmissing: ${_format(missing)}`;\n    }\n    throw new AssertionError(msg);\n}\nexport function assertMatch(actual\x2C expected\x2C msg) {\n    if (!expected.test(actual)) {\n        if (!msg) {\n            msg = `actual: "${actual}" expected to match: "${expected}"`;\n        }\n        throw new AssertionError(msg);\n    }\n}\nexport function assertNotMatch(actual\x2C expected\x2C msg) {\n    if (expected.test(actual)) {\n        if (!msg) {\n            msg = `actual: "${actual}" expected to not match: "${expected}"`;\n        }\n        throw new AssertionError(msg);\n    }\n}\nexport function assertObjectMatch(actual\x2C expected) {\n    const seen = new WeakMap();\n    function filter(a\x2C b) {\n        if (Array.isArray(a)) {\n            return a;\n        }\n        if ((seen.has(a)) && (seen.get(a) === b)) {\n            return a;\n        }\n        seen.set(a\x2C b);\n        const filtered = {};\n        const entries = [\n            ...Object.getOwnPropertyNames(a)\x2C\n            ...Object.getOwnPropertySymbols(a)\x2C\n        ]\n            .filter((key) => key in b)\n            .map((key) => [key\x2C a[key]]);\n        for (const [key\x2C value] of entries) {\n            if (Array.isArray(value)) {\n                const subset = b[key];\n                if (Array.isArray(subset)) {\n                    filtered[key] = value\n                        .slice(0\x2C subset.length)\n                        .map((element\x2C index) => {\n                        const subsetElement = subset[index];\n                        if ((typeof subsetElement === "object") && (subsetElement)) {\n                            return filter(element\x2C subsetElement);\n                        }\n                        return element;\n                    });\n                    continue;\n                }\n            }\n            else if (typeof value === "object") {\n                const subset = b[key];\n                if ((typeof subset === "object") && (subset)) {\n                    filtered[key] = filter(value\x2C subset);\n                    continue;\n                }\n            }\n            filtered[key] = value;\n        }\n        return filtered;\n    }\n    return assertEquals(filter(actual\x2C expected)\x2C filter(expected\x2C expected));\n}\nexport function fail(msg) {\n    assert(false\x2C `Failed assertion${msg ? `: ${msg}` : "."}`);\n}\nexport function assertIsError(error\x2C ErrorClass\x2C msgIncludes\x2C msg) {\n    if (error instanceof Error === false) {\n        throw new AssertionError(`Expected "error" to be an Error object.`);\n    }\n    if (ErrorClass && !(error instanceof ErrorClass)) {\n        msg = `Expected error to be instance of "${ErrorClass.name}"\x2C but was "${typeof error === "object" ? error?.constructor?.name : "[not an object]"}"${msg ? `: ${msg}` : "."}`;\n        throw new AssertionError(msg);\n    }\n    if (msgIncludes && (!(error instanceof Error) ||\n        !stripColor(error.message).includes(stripColor(msgIncludes)))) {\n        msg = `Expected error message to include "${msgIncludes}"\x2C but got "${error instanceof Error ? error.message : "[not an Error]"}"${msg ? `: ${msg}` : "."}`;\n        throw new AssertionError(msg);\n    }\n}\nexport function assertThrows(fn\x2C errorClassOrCallback\x2C msgIncludesOrMsg\x2C msg) {\n    let ErrorClass = undefined;\n    let msgIncludes = undefined;\n    let errorCallback;\n    if (errorClassOrCallback == null ||\n        errorClassOrCallback.prototype instanceof Error ||\n        errorClassOrCallback.prototype === Error.prototype) {\n        ErrorClass = errorClassOrCallback;\n        msgIncludes = msgIncludesOrMsg;\n        errorCallback = null;\n    }\n    else {\n        errorCallback = errorClassOrCallback;\n        msg = msgIncludesOrMsg;\n    }\n    let doesThrow = false;\n    try {\n        fn();\n    }\n    catch (error) {\n        if (error instanceof Error === false) {\n            throw new AssertionError("A non-Error object was thrown.");\n        }\n        assertIsError(error\x2C ErrorClass\x2C msgIncludes\x2C msg);\n        if (typeof errorCallback == "function") {\n            errorCallback(error);\n        }\n        doesThrow = true;\n    }\n    if (!doesThrow) {\n        msg = `Expected function to throw${msg ? `: ${msg}` : "."}`;\n        throw new AssertionError(msg);\n    }\n}\nexport async function assertRejects(fn\x2C errorClassOrCallback\x2C msgIncludesOrMsg\x2C msg) {\n    let ErrorClass = undefined;\n    let msgIncludes = undefined;\n    let errorCallback;\n    if (errorClassOrCallback == null ||\n        errorClassOrCallback.prototype instanceof Error ||\n        errorClassOrCallback.prototype === Error.prototype) {\n        ErrorClass = errorClassOrCallback;\n        msgIncludes = msgIncludesOrMsg;\n        errorCallback = null;\n    }\n    else {\n        errorCallback = errorClassOrCallback;\n        msg = msgIncludesOrMsg;\n    }\n    let doesThrow = false;\n    try {\n        await fn();\n    }\n    catch (error) {\n        if (error instanceof Error === false) {\n            throw new AssertionError("A non-Error object was thrown or rejected.");\n        }\n        assertIsError(error\x2C ErrorClass\x2C msgIncludes\x2C msg);\n        if (typeof errorCallback == "function") {\n            errorCallback(error);\n        }\n        doesThrow = true;\n    }\n    if (!doesThrow) {\n        msg = `Expected function to throw${msg ? `: ${msg}` : "."}`;\n        throw new AssertionError(msg);\n    }\n}\nexport const assertThrowsAsync = assertRejects;\nexport function unimplemented(msg) {\n    throw new AssertionError(msg || "unimplemented");\n}\nexport function unreachable() {\n    throw new AssertionError("unreachable");\n}\n//# sourceMappingURL=data:application/json;base64\
code-source-info,0xb7b083703d2,81,0,65647,C10O0C61O0C81O0C88O173C90O173C92O229C124O200C127O14626C130O14626C135O65647,,
tick,0x556368e9fe53,78477,0,0x0,3
tick,0x7f056c958b33,78495,0,0x0,3
tick,0x7f056c963fab,78509,0,0x0,3
code-creation,Function,10,78520,0xb7b083704c2,8,<instance_members_initializer> https://deno.land/std@0.116.0/testing/asserts.ts:5:5,0xb7b083702a4,~
code-source-info,0xb7b083704c2,81,241,264,C0O248C7O264,,
code-creation,Script,10,78822,0xb7b08372e0a,99, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:1:1,0xb7b08372c30,~
script-source,82,file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts,const BOARD_SIZE = 5;\nconst getBoardsAndInput = (input) => {\n    const splitted = input.split("\\n\\n");\n    const getBoard = (raw\x2C index) => {\n        const board = { items: []\x2C index };\n        const lines = raw.split("\\n");\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                board.items.push({\n                    hit: false\x2C\n                    val: +lines[i].slice(0 + 3 * j\x2C 3 + 3 * j)\x2C\n                    x: i\x2C\n                    y: j\x2C\n                });\n            }\n        }\n        return board;\n    };\n    return {\n        input: splitted[0].split("\x2C").map((x) => +x)\x2C\n        boards: splitted.slice(1).map(getBoard)\x2C\n    };\n};\nconst winCalculator = (target\x2C board) => {\n    let shouldCheck = false;\n    for (let j = 0; j < board.items.length; j++) {\n        if (board.items[j].val === target) {\n            board.items[j].hit = true;\n            shouldCheck = true;\n        }\n        if (shouldCheck) {\n            for (let k = 0; k < BOARD_SIZE; k++) {\n                const isWin = board.items.filter((x) => x.x === k && x.hit).length === BOARD_SIZE ||\n                    board.items.filter((x) => x.y === k && x.hit).length === BOARD_SIZE;\n                if (isWin) {\n                    return {\n                        called: target\x2C\n                        unmarked: board.items\n                            .filter((x) => !x.hit)\n                            .reduce((p\x2C n) => p + n.val\x2C 0)\x2C\n                    };\n                }\n            }\n        }\n    }\n    return undefined;\n};\nconst getAllWinningBoards = (data) => {\n    const winningBoards = [];\n    const winningIndexes = new Set();\n    for (let i = 0; i < data.input.length; i++) {\n        const target = data.input[i];\n        for (let m = 0; m < data.boards.length; m++) {\n            if (!winningIndexes.has(m)) {\n                const board = data.boards[m];\n                const result = winCalculator(target\x2C board);\n                if (result) {\n                    winningBoards.push(result);\n                    winningIndexes.add(m);\n                }\n            }\n        }\n    }\n    return winningBoards;\n};\nconst calculate = (input) => {\n    const data = getBoardsAndInput(input);\n    const result = getAllWinningBoards(data);\n    return {\n        first: result[0].unmarked * result[0].called\x2C\n        last: result[result.length - 1].unmarked * result[result.length - 1].called\x2C\n    };\n};\nexport { calculate };\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5MDQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkYXkwNC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsR0FBRyxDQUFDLENBQUM7QUFZckIsTUFBTSxpQkFBaUIsR0FHbkIsQ0FBQyxLQUFLLEVBQUUsRUFBRTtJQUNaLE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxHQUFXLEVBQUUsS0FBYSxFQUFFLEVBQUU7UUFDOUMsTUFBTSxLQUFLLEdBQVUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDO1FBQzFDLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNuQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUNuQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztvQkFDZixHQUFHLEVBQUUsS0FBSztvQkFDVixHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUMxQyxDQUFDLEVBQUUsQ0FBQztvQkFDSixDQUFDLEVBQUUsQ0FBQztpQkFDTCxDQUFDLENBQUM7YUFDSjtTQUNGO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDLENBQUM7SUFFRixPQUFPO1FBQ0wsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QyxNQUFNLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDO0tBQ3hDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRyxDQUFDLE1BQWMsRUFBRSxLQUFZLEVBQUUsRUFBRTtJQUNyRCxJQUFJLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDeEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzNDLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssTUFBTSxFQUFFO1lBQ2pDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQztZQUMxQixXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQ3BCO1FBQ0QsSUFBSSxXQUFXLEVBQUU7WUFDZixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUNuQyxNQUFNLEtBQUssR0FDVCxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBSyxVQUFVO29CQUNuRSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBSyxVQUFVLENBQUM7Z0JBQ3RFLElBQUksS0FBSyxFQUFFO29CQUNULE9BQU87d0JBQ0wsTUFBTSxFQUFFLE1BQU07d0JBQ2QsUUFBUSxFQUFFLEtBQUssQ0FBQyxLQUFLOzZCQUNsQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQzs2QkFDckIsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO3FCQUNsQyxDQUFDO2lCQUNIO2FBQ0Y7U0FDRjtLQUNGO0lBQ0QsT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLElBQTBDLEVBQUUsRUFBRTtJQUN6RSxNQUFNLGFBQWEsR0FBYSxFQUFFLENBQUM7SUFDbkMsTUFBTSxjQUFjLEdBQWdCLElBQUksR0FBRyxFQUFFLENBQUM7SUFDOUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzFDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzNDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMxQixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM3QixNQUFNLE1BQU0sR0FBRyxhQUFhLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUM1QyxJQUFJLE1BQU0sRUFBRTtvQkFDVixhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUMzQixjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUN2QjthQUNGO1NBQ0Y7S0FDRjtJQUNELE9BQU8sYUFBYSxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7SUFDbEMsTUFBTSxJQUFJLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsTUFBTSxNQUFNLEdBQUcsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekMsT0FBTztRQUNMLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNO1FBQzVDLElBQUksRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTTtLQUM1RSxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsT0FBTyxFQUFFLFNBQVMsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQk9BUkRfU0laRSA9IDU7XG5cbnR5cGUgQm9hcmQgPSB7XG4gIGluZGV4OiBudW1iZXI7XG4gIGl0ZW1zOiB7IHZhbDogbnVtYmVyOyBoaXQ6IGJvb2xlYW47IHg6IG51bWJlcjsgeTogbnVtYmVyIH1bXTtcbn07XG5cbnR5cGUgUmVzdWx0ID0ge1xuICBjYWxsZWQ6IG51bWJlcjtcbiAgdW5tYXJrZWQ6IG51bWJlcjtcbn07XG5cbmNvbnN0IGdldEJvYXJkc0FuZElucHV0OiAoaW5wdXQ6IHN0cmluZykgPT4ge1xuICBpbnB1dDogbnVtYmVyW107XG4gIGJvYXJkczogQm9hcmRbXTtcbn0gPSAoaW5wdXQpID0+IHtcbiAgY29uc3Qgc3BsaXR0ZWQgPSBpbnB1dC5zcGxpdChcIlxcblxcblwiKTtcbiAgY29uc3QgZ2V0Qm9hcmQgPSAocmF3OiBzdHJpbmcsIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBib2FyZDogQm9hcmQgPSB7IGl0ZW1zOiBbXSwgaW5kZXggfTtcbiAgICBjb25zdCBsaW5lcyA9IHJhdy5zcGxpdChcIlxcblwiKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IEJPQVJEX1NJWkU7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBCT0FSRF9TSVpFOyBqKyspIHtcbiAgICAgICAgYm9hcmQuaXRlbXMucHVzaCh7XG4gICAgICAgICAgaGl0OiBmYWxzZSxcbiAgICAgICAgICB2YWw6ICtsaW5lc1tpXS5zbGljZSgwICsgMyAqIGosIDMgKyAzICogaiksXG4gICAgICAgICAgeDogaSxcbiAgICAgICAgICB5OiBqLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGJvYXJkO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgaW5wdXQ6IHNwbGl0dGVkWzBdLnNwbGl0KFwiLFwiKS5tYXAoKHgpID0+ICt4KSxcbiAgICBib2FyZHM6IHNwbGl0dGVkLnNsaWNlKDEpLm1hcChnZXRCb2FyZCksXG4gIH07XG59O1xuXG5jb25zdCB3aW5DYWxjdWxhdG9yID0gKHRhcmdldDogbnVtYmVyLCBib2FyZDogQm9hcmQpID0+IHtcbiAgbGV0IHNob3VsZENoZWNrID0gZmFsc2U7XG4gIGZvciAobGV0IGogPSAwOyBqIDwgYm9hcmQuaXRlbXMubGVuZ3RoOyBqKyspIHtcbiAgICBpZiAoYm9hcmQuaXRlbXNbal0udmFsID09PSB0YXJnZXQpIHtcbiAgICAgIGJvYXJkLml0ZW1zW2pdLmhpdCA9IHRydWU7XG4gICAgICBzaG91bGRDaGVjayA9IHRydWU7XG4gICAgfVxuICAgIGlmIChzaG91bGRDaGVjaykge1xuICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBCT0FSRF9TSVpFOyBrKyspIHtcbiAgICAgICAgY29uc3QgaXNXaW4gPVxuICAgICAgICAgIGJvYXJkLml0ZW1zLmZpbHRlcigoeCkgPT4geC54ID09PSBrICYmIHguaGl0KS5sZW5ndGggPT09IEJPQVJEX1NJWkUgfHxcbiAgICAgICAgICBib2FyZC5pdGVtcy5maWx0ZXIoKHgpID0+IHgueSA9PT0gayAmJiB4LmhpdCkubGVuZ3RoID09PSBCT0FSRF9TSVpFO1xuICAgICAgICBpZiAoaXNXaW4pIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY2FsbGVkOiB0YXJnZXQsXG4gICAgICAgICAgICB1bm1hcmtlZDogYm9hcmQuaXRlbXNcbiAgICAgICAgICAgICAgLmZpbHRlcigoeCkgPT4gIXguaGl0KVxuICAgICAgICAgICAgICAucmVkdWNlKChwLCBuKSA9PiBwICsgbi52YWwsIDApLFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5cbmNvbnN0IGdldEFsbFdpbm5pbmdCb2FyZHMgPSAoZGF0YTogeyBpbnB1dDogbnVtYmVyW107IGJvYXJkczogQm9hcmRbXSB9KSA9PiB7XG4gIGNvbnN0IHdpbm5pbmdCb2FyZHM6IFJlc3VsdFtdID0gW107XG4gIGNvbnN0IHdpbm5pbmdJbmRleGVzOiBTZXQ8bnVtYmVyPiA9IG5ldyBTZXQoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZGF0YS5pbnB1dFtpXTtcblxuICAgIGZvciAobGV0IG0gPSAwOyBtIDwgZGF0YS5ib2FyZHMubGVuZ3RoOyBtKyspIHtcbiAgICAgIGlmICghd2lubmluZ0luZGV4ZXMuaGFzKG0pKSB7XG4gICAgICAgIGNvbnN0IGJvYXJkID0gZGF0YS5ib2FyZHNbbV07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHdpbkNhbGN1bGF0b3IodGFyZ2V0LCBib2FyZCk7XG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICB3aW5uaW5nQm9hcmRzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgICB3aW5uaW5nSW5kZXhlcy5hZGQobSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHdpbm5pbmdCb2FyZHM7XG59O1xuXG5jb25zdCBjYWxjdWxhdGUgPSAoaW5wdXQ6IHN0cmluZykgPT4ge1xuICBjb25zdCBkYXRhID0gZ2V0Qm9hcmRzQW5kSW5wdXQoaW5wdXQpO1xuICBjb25zdCByZXN1bHQgPSBnZXRBbGxXaW5uaW5nQm9hcmRzKGRhdGEpO1xuICByZXR1cm4ge1xuICAgIGZpcnN0OiByZXN1bHRbMF0udW5tYXJrZWQgKiByZXN1bHRbMF0uY2FsbGVkLFxuICAgIGxhc3Q6IHJlc3VsdFtyZXN1bHQubGVuZ3RoIC0gMV0udW5tYXJrZWQgKiByZXN1bHRbcmVzdWx0Lmxlbmd0aCAtIDFdLmNhbGxlZCxcbiAgfTtcbn07XG5cbmV4cG9ydCB7IGNhbGN1bGF0ZSB9O1xuIl19
code-source-info,0xb7b08372e0a,82,0,10154,C10O0C40O0C60O0C67O19C69O19C71O48C75O48C77O727C81O727C83O1602C87O1602C89O2190C93O2190C98O10154,,
tick,0x7f056ca43146,79426,0,0x0,3
code-creation,Script,10,79519,0xb7b08373b12,97, file:///home/raf/dev/AdventOfCode-Deno/src/shared/file-util.ts:1:1,0xb7b083738b0,~
script-source,83,file:///home/raf/dev/AdventOfCode-Deno/src/shared/file-util.ts,import * as path from "https://deno.land/std/path/mod.ts";\nconst getFullPath = (filePath\x2C year) => path.join(Deno.cwd()\x2C "resources"\x2C year.toString()\x2C filePath);\nexport const getLines = (filePath\x2C year) => Deno.readTextFileSync(getFullPath(filePath\x2C year))\n    .split("\\n")\n    .map((x) => x.trim());\nexport const getLinesAsNumbers = (filePath\x2C year) => getLines(filePath\x2C year).map((x) => +x);\nexport const getText = (filePath\x2C year) => Deno.readTextFileSync(getFullPath(filePath\x2C year));\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZmlsZS11dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxJQUFJLE1BQU0sbUNBQW1DLENBQUM7QUFFMUQsTUFBTSxXQUFXLEdBQUcsQ0FBQyxRQUFnQixFQUFFLElBQVksRUFBRSxFQUFFLENBQ3JELElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFFaEUsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsUUFBZ0IsRUFBRSxJQUFZLEVBQUUsRUFBRSxDQUN6RCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMvQyxLQUFLLENBQUMsSUFBSSxDQUFDO0tBQ1gsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUUxQixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLFFBQWdCLEVBQUUsSUFBWSxFQUFFLEVBQUUsQ0FDbEUsUUFBUSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFMUMsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUMsUUFBZ0IsRUFBRSxJQUFZLEVBQUUsRUFBRSxDQUN4RCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcGF0aCBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQvc3RkL3BhdGgvbW9kLnRzXCI7XG5cbmNvbnN0IGdldEZ1bGxQYXRoID0gKGZpbGVQYXRoOiBzdHJpbmcsIHllYXI6IG51bWJlcikgPT5cbiAgcGF0aC5qb2luKERlbm8uY3dkKCksIFwicmVzb3VyY2VzXCIsIHllYXIudG9TdHJpbmcoKSwgZmlsZVBhdGgpO1xuXG5leHBvcnQgY29uc3QgZ2V0TGluZXMgPSAoZmlsZVBhdGg6IHN0cmluZywgeWVhcjogbnVtYmVyKSA9PlxuICBEZW5vLnJlYWRUZXh0RmlsZVN5bmMoZ2V0RnVsbFBhdGgoZmlsZVBhdGgsIHllYXIpKVxuICAgIC5zcGxpdChcIlxcblwiKVxuICAgIC5tYXAoKHgpID0+IHgudHJpbSgpKTtcblxuZXhwb3J0IGNvbnN0IGdldExpbmVzQXNOdW1iZXJzID0gKGZpbGVQYXRoOiBzdHJpbmcsIHllYXI6IG51bWJlcikgPT5cbiAgZ2V0TGluZXMoZmlsZVBhdGgsIHllYXIpLm1hcCgoeCkgPT4gK3gpO1xuXG5leHBvcnQgY29uc3QgZ2V0VGV4dCA9IChmaWxlUGF0aDogc3RyaW5nLCB5ZWFyOiBudW1iZXIpID0+XG4gIERlbm8ucmVhZFRleHRGaWxlU3luYyhnZXRGdWxsUGF0aChmaWxlUGF0aCwgeWVhcikpO1xuIl19
code-source-info,0xb7b08373b12,83,0,2424,C10O0C40O0C60O0C67O79C71O79C73O186C77O186C80O334C84O334C87O418C91O418C96O2424,,
tick,0x556368cc48b3,80059,0,0x0,2
code-creation,Script,10,80132,0xb7b0837bdb2,157, https://deno.land/std@0.116.0/fmt/colors.ts:1:1,0xb7b0837a92c,~
script-source,84,https://deno.land/std@0.116.0/fmt/colors.ts,const { Deno } = globalThis;\nconst noColor = typeof Deno?.noColor === "boolean"\n    ? Deno.noColor\n    : true;\nlet enabled = !noColor;\nexport function setColorEnabled(value) {\n    if (noColor) {\n        return;\n    }\n    enabled = value;\n}\nexport function getColorEnabled() {\n    return enabled;\n}\nfunction code(open\x2C close) {\n    return {\n        open: `\\x1b[${open.join(";")}m`\x2C\n        close: `\\x1b[${close}m`\x2C\n        regexp: new RegExp(`\\\\x1b\\\\[${close}m`\x2C "g")\x2C\n    };\n}\nfunction run(str\x2C code) {\n    return enabled\n        ? `${code.open}${str.replace(code.regexp\x2C code.open)}${code.close}`\n        : str;\n}\nexport function reset(str) {\n    return run(str\x2C code([0]\x2C 0));\n}\nexport function bold(str) {\n    return run(str\x2C code([1]\x2C 22));\n}\nexport function dim(str) {\n    return run(str\x2C code([2]\x2C 22));\n}\nexport function italic(str) {\n    return run(str\x2C code([3]\x2C 23));\n}\nexport function underline(str) {\n    return run(str\x2C code([4]\x2C 24));\n}\nexport function inverse(str) {\n    return run(str\x2C code([7]\x2C 27));\n}\nexport function hidden(str) {\n    return run(str\x2C code([8]\x2C 28));\n}\nexport function strikethrough(str) {\n    return run(str\x2C code([9]\x2C 29));\n}\nexport function black(str) {\n    return run(str\x2C code([30]\x2C 39));\n}\nexport function red(str) {\n    return run(str\x2C code([31]\x2C 39));\n}\nexport function green(str) {\n    return run(str\x2C code([32]\x2C 39));\n}\nexport function yellow(str) {\n    return run(str\x2C code([33]\x2C 39));\n}\nexport function blue(str) {\n    return run(str\x2C code([34]\x2C 39));\n}\nexport function magenta(str) {\n    return run(str\x2C code([35]\x2C 39));\n}\nexport function cyan(str) {\n    return run(str\x2C code([36]\x2C 39));\n}\nexport function white(str) {\n    return run(str\x2C code([37]\x2C 39));\n}\nexport function gray(str) {\n    return brightBlack(str);\n}\nexport function brightBlack(str) {\n    return run(str\x2C code([90]\x2C 39));\n}\nexport function brightRed(str) {\n    return run(str\x2C code([91]\x2C 39));\n}\nexport function brightGreen(str) {\n    return run(str\x2C code([92]\x2C 39));\n}\nexport function brightYellow(str) {\n    return run(str\x2C code([93]\x2C 39));\n}\nexport function brightBlue(str) {\n    return run(str\x2C code([94]\x2C 39));\n}\nexport function brightMagenta(str) {\n    return run(str\x2C code([95]\x2C 39));\n}\nexport function brightCyan(str) {\n    return run(str\x2C code([96]\x2C 39));\n}\nexport function brightWhite(str) {\n    return run(str\x2C code([97]\x2C 39));\n}\nexport function bgBlack(str) {\n    return run(str\x2C code([40]\x2C 49));\n}\nexport function bgRed(str) {\n    return run(str\x2C code([41]\x2C 49));\n}\nexport function bgGreen(str) {\n    return run(str\x2C code([42]\x2C 49));\n}\nexport function bgYellow(str) {\n    return run(str\x2C code([43]\x2C 49));\n}\nexport function bgBlue(str) {\n    return run(str\x2C code([44]\x2C 49));\n}\nexport function bgMagenta(str) {\n    return run(str\x2C code([45]\x2C 49));\n}\nexport function bgCyan(str) {\n    return run(str\x2C code([46]\x2C 49));\n}\nexport function bgWhite(str) {\n    return run(str\x2C code([47]\x2C 49));\n}\nexport function bgBrightBlack(str) {\n    return run(str\x2C code([100]\x2C 49));\n}\nexport function bgBrightRed(str) {\n    return run(str\x2C code([101]\x2C 49));\n}\nexport function bgBrightGreen(str) {\n    return run(str\x2C code([102]\x2C 49));\n}\nexport function bgBrightYellow(str) {\n    return run(str\x2C code([103]\x2C 49));\n}\nexport function bgBrightBlue(str) {\n    return run(str\x2C code([104]\x2C 49));\n}\nexport function bgBrightMagenta(str) {\n    return run(str\x2C code([105]\x2C 49));\n}\nexport function bgBrightCyan(str) {\n    return run(str\x2C code([106]\x2C 49));\n}\nexport function bgBrightWhite(str) {\n    return run(str\x2C code([107]\x2C 49));\n}\nfunction clampAndTruncate(n\x2C max = 255\x2C min = 0) {\n    return Math.trunc(Math.max(Math.min(n\x2C max)\x2C min));\n}\nexport function rgb8(str\x2C color) {\n    return run(str\x2C code([38\x2C 5\x2C clampAndTruncate(color)]\x2C 39));\n}\nexport function bgRgb8(str\x2C color) {\n    return run(str\x2C code([48\x2C 5\x2C clampAndTruncate(color)]\x2C 49));\n}\nexport function rgb24(str\x2C color) {\n    if (typeof color === "number") {\n        return run(str\x2C code([38\x2C 2\x2C (color >> 16) & 0xff\x2C (color >> 8) & 0xff\x2C color & 0xff]\x2C 39));\n    }\n    return run(str\x2C code([\n        38\x2C\n        2\x2C\n        clampAndTruncate(color.r)\x2C\n        clampAndTruncate(color.g)\x2C\n        clampAndTruncate(color.b)\x2C\n    ]\x2C 39));\n}\nexport function bgRgb24(str\x2C color) {\n    if (typeof color === "number") {\n        return run(str\x2C code([48\x2C 2\x2C (color >> 16) & 0xff\x2C (color >> 8) & 0xff\x2C color & 0xff]\x2C 49));\n    }\n    return run(str\x2C code([\n        48\x2C\n        2\x2C\n        clampAndTruncate(color.r)\x2C\n        clampAndTruncate(color.g)\x2C\n        clampAndTruncate(color.b)\x2C\n    ]\x2C 49));\n}\nconst ANSI_PATTERN = new RegExp([\n    "[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)"\x2C\n    "(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))"\x2C\n].join("|")\x2C "g");\nexport function stripColor(string) {\n    return string.replace(ANSI_PATTERN\x2C "");\n}\n//# sourceMappingURL=data:application/json;base64\
code-source-info,0xb7b0837bdb2,84,0,31517,C10O0C55O0C75O0C82O17C86O8C91O45C94O56C105O91C112O45C114O125C117O125C119O4568C128O4746C136O4746C147O4568C152O4568C156O31517,,
tick,0x556368b7fe4d,81606,0,0x0,3
new,MemoryChunk,0xb7b08380000,262144
code-creation,Script,10,82064,0xb7b08388faa,102, https://deno.land/std@0.116.0/testing/_diff.ts:1:1,0xb7b08388cf0,~
script-source,85,https://deno.land/std@0.116.0/testing/_diff.ts,export var DiffType;\n(function (DiffType) {\n    DiffType["removed"] = "removed";\n    DiffType["common"] = "common";\n    DiffType["added"] = "added";\n})(DiffType || (DiffType = {}));\nconst REMOVED = 1;\nconst COMMON = 2;\nconst ADDED = 3;\nfunction createCommon(A\x2C B\x2C reverse) {\n    const common = [];\n    if (A.length === 0 || B.length === 0)\n        return [];\n    for (let i = 0; i < Math.min(A.length\x2C B.length); i += 1) {\n        if (A[reverse ? A.length - i - 1 : i] === B[reverse ? B.length - i - 1 : i]) {\n            common.push(A[reverse ? A.length - i - 1 : i]);\n        }\n        else {\n            return common;\n        }\n    }\n    return common;\n}\nexport function diff(A\x2C B) {\n    const prefixCommon = createCommon(A\x2C B);\n    const suffixCommon = createCommon(A.slice(prefixCommon.length)\x2C B.slice(prefixCommon.length)\x2C true).reverse();\n    A = suffixCommon.length\n        ? A.slice(prefixCommon.length\x2C -suffixCommon.length)\n        : A.slice(prefixCommon.length);\n    B = suffixCommon.length\n        ? B.slice(prefixCommon.length\x2C -suffixCommon.length)\n        : B.slice(prefixCommon.length);\n    const swapped = B.length > A.length;\n    [A\x2C B] = swapped ? [B\x2C A] : [A\x2C B];\n    const M = A.length;\n    const N = B.length;\n    if (!M && !N && !suffixCommon.length && !prefixCommon.length)\n        return [];\n    if (!N) {\n        return [\n            ...prefixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\x2C\n            ...A.map((a) => ({\n                type: swapped ? DiffType.added : DiffType.removed\x2C\n                value: a\x2C\n            }))\x2C\n            ...suffixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\x2C\n        ];\n    }\n    const offset = N;\n    const delta = M - N;\n    const size = M + N + 1;\n    const fp = Array.from({ length: size }\x2C () => ({ y: -1\x2C id: -1 }));\n    const routes = new Uint32Array((M * N + size + 1) * 2);\n    const diffTypesPtrOffset = routes.length / 2;\n    let ptr = 0;\n    let p = -1;\n    function backTrace(A\x2C B\x2C current\x2C swapped) {\n        const M = A.length;\n        const N = B.length;\n        const result = [];\n        let a = M - 1;\n        let b = N - 1;\n        let j = routes[current.id];\n        let type = routes[current.id + diffTypesPtrOffset];\n        while (true) {\n            if (!j && !type)\n                break;\n            const prev = j;\n            if (type === REMOVED) {\n                result.unshift({\n                    type: swapped ? DiffType.removed : DiffType.added\x2C\n                    value: B[b]\x2C\n                });\n                b -= 1;\n            }\n            else if (type === ADDED) {\n                result.unshift({\n                    type: swapped ? DiffType.added : DiffType.removed\x2C\n                    value: A[a]\x2C\n                });\n                a -= 1;\n            }\n            else {\n                result.unshift({ type: DiffType.common\x2C value: A[a] });\n                a -= 1;\n                b -= 1;\n            }\n            j = routes[prev];\n            type = routes[prev + diffTypesPtrOffset];\n        }\n        return result;\n    }\n    function createFP(slide\x2C down\x2C k\x2C M) {\n        if (slide && slide.y === -1 && down && down.y === -1) {\n            return { y: 0\x2C id: 0 };\n        }\n        if ((down && down.y === -1) ||\n            k === M ||\n            (slide && slide.y) > (down && down.y) + 1) {\n            const prev = slide.id;\n            ptr++;\n            routes[ptr] = prev;\n            routes[ptr + diffTypesPtrOffset] = ADDED;\n            return { y: slide.y\x2C id: ptr };\n        }\n        else {\n            const prev = down.id;\n            ptr++;\n            routes[ptr] = prev;\n            routes[ptr + diffTypesPtrOffset] = REMOVED;\n            return { y: down.y + 1\x2C id: ptr };\n        }\n    }\n    function snake(k\x2C slide\x2C down\x2C _offset\x2C A\x2C B) {\n        const M = A.length;\n        const N = B.length;\n        if (k < -N || M < k)\n            return { y: -1\x2C id: -1 };\n        const fp = createFP(slide\x2C down\x2C k\x2C M);\n        while (fp.y + k < M && fp.y < N && A[fp.y + k] === B[fp.y]) {\n            const prev = fp.id;\n            ptr++;\n            fp.id = ptr;\n            fp.y += 1;\n            routes[ptr] = prev;\n            routes[ptr + diffTypesPtrOffset] = COMMON;\n        }\n        return fp;\n    }\n    while (fp[delta + offset].y < N) {\n        p = p + 1;\n        for (let k = -p; k < delta; ++k) {\n            fp[k + offset] = snake(k\x2C fp[k - 1 + offset]\x2C fp[k + 1 + offset]\x2C offset\x2C A\x2C B);\n        }\n        for (let k = delta + p; k > delta; --k) {\n            fp[k + offset] = snake(k\x2C fp[k - 1 + offset]\x2C fp[k + 1 + offset]\x2C offset\x2C A\x2C B);\n        }\n        fp[delta + offset] = snake(delta\x2C fp[delta - 1 + offset]\x2C fp[delta + 1 + offset]\x2C offset\x2C A\x2C B);\n    }\n    return [\n        ...prefixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\x2C\n        ...backTrace(A\x2C B\x2C fp[delta + offset]\x2C swapped)\x2C\n        ...suffixCommon.map((c) => ({ type: DiffType.common\x2C value: c }))\x2C\n    ];\n}\nexport function diffstr(A\x2C B) {\n    function unescape(string) {\n        return string\n            .replaceAll("\\b"\x2C "\\\\b")\n            .replaceAll("\\f"\x2C "\\\\f")\n            .replaceAll("\\t"\x2C "\\\\t")\n            .replaceAll("\\v"\x2C "\\\\v")\n            .replaceAll(/\\r\\n|\\r|\\n/g\x2C (str) => str === "\\r" ? "\\\\r" : str === "\\n" ? "\\\\n\\n" : "\\\\r\\\\n\\r\\n");\n    }\n    function tokenize(string\x2C { wordDiff = false } = {}) {\n        if (wordDiff) {\n            const tokens = string.split(/([^\\S\\r\\n]+|[()[\\]{}'"\\r\\n]|\\b)/);\n            const words = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n            for (let i = 0; i < tokens.length - 1; i++) {\n                if (!tokens[i + 1] && tokens[i + 2] && words.test(tokens[i]) &&\n                    words.test(tokens[i + 2])) {\n                    tokens[i] += tokens[i + 2];\n                    tokens.splice(i + 1\x2C 2);\n                    i--;\n                }\n            }\n            return tokens.filter((token) => token);\n        }\n        else {\n            const tokens = []\x2C lines = string.split(/(\\n|\\r\\n)/);\n            if (!lines[lines.length - 1]) {\n                lines.pop();\n            }\n            for (let i = 0; i < lines.length; i++) {\n                if (i % 2) {\n                    tokens[tokens.length - 1] += lines[i];\n                }\n                else {\n                    tokens.push(lines[i]);\n                }\n            }\n            return tokens;\n        }\n    }\n    function createDetails(line\x2C tokens) {\n        return tokens.filter(({ type }) => type === line.type || type === DiffType.common).map((result\x2C i\x2C t) => {\n            if ((result.type === DiffType.common) && (t[i - 1]) &&\n                (t[i - 1]?.type === t[i + 1]?.type) && /\\s+/.test(result.value)) {\n                result.type = t[i - 1].type;\n            }\n            return result;\n        });\n    }\n    const diffResult = diff(tokenize(`${unescape(A)}\\n`)\x2C tokenize(`${unescape(B)}\\n`));\n    const added = []\x2C removed = [];\n    for (const result of diffResult) {\n        if (result.type === DiffType.added) {\n            added.push(result);\n        }\n        if (result.type === DiffType.removed) {\n            removed.push(result);\n        }\n    }\n    const aLines = added.length < removed.length ? added : removed;\n    const bLines = aLines === removed ? added : removed;\n    for (const a of aLines) {\n        let tokens = []\x2C b;\n        while (bLines.length) {\n            b = bLines.shift();\n            tokens = diff(tokenize(a.value\x2C { wordDiff: true })\x2C tokenize(b?.value ?? ""\x2C { wordDiff: true }));\n            if (tokens.some(({ type\x2C value }) => type === DiffType.common && value.trim().length)) {\n                break;\n            }\n        }\n        a.details = createDetails(a\x2C tokens);\n        if (b) {\n            b.details = createDetails(b\x2C tokens);\n        }\n    }\n    return diffResult;\n}\n//# sourceMappingURL=data:application/json;base64\
code-source-info,0xb7b08388faa,85,0,35418,C10O0C43O0C63O0C67O21C72O152C78O174C82O151C87O198C89O198C91O216C93O216C95O233C97O233C101O35418,,
tick,0x556368b8feb9,83734,0,0x0,3
tick,0x7f056c963f41,83749,0,0x0,3
code-creation,Function,10,83758,0xb7b08389082,20, https://deno.land/std@0.116.0/testing/_diff.ts:2:11,0xb7b08388f44,~
code-source-info,0xb7b08389082,85,31,150,C0O48C2O68C6O85C8O104C12O120C14O138C19O149,,
code-creation,Script,10,83883,0xb7b0838a40e,205, https://deno.land/std@0.116.0/path/mod.ts:1:1,0xb7b08389e9c,~
script-source,86,https://deno.land/std@0.116.0/path/mod.ts,import { isWindows } from "../_util/os.ts";\nimport * as _win32 from "./win32.ts";\nimport * as _posix from "./posix.ts";\nconst path = isWindows ? _win32 : _posix;\nexport const win32 = _win32;\nexport const posix = _posix;\nexport const { basename\x2C delimiter\x2C dirname\x2C extname\x2C format\x2C fromFileUrl\x2C isAbsolute\x2C join\x2C normalize\x2C parse\x2C relative\x2C resolve\x2C sep\x2C toFileUrl\x2C toNamespacedPath\x2C } = path;\nexport * from "./common.ts";\nexport { SEP\x2C SEP_PATTERN } from "./separator.ts";\nexport * from "./_interface.ts";\nexport * from "./glob.ts";\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEtBQUssTUFBTSxNQUFNLFlBQVksQ0FBQztBQUNyQyxPQUFPLEtBQUssTUFBTSxNQUFNLFlBQVksQ0FBQztBQUVyQyxNQUFNLElBQUksR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0FBRXpDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUM7QUFDNUIsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQztBQUM1QixNQUFNLENBQUMsTUFBTSxFQUNYLFFBQVEsRUFDUixTQUFTLEVBQ1QsT0FBTyxFQUNQLE9BQU8sRUFDUCxNQUFNLEVBQ04sV0FBVyxFQUNYLFVBQVUsRUFDVixJQUFJLEVBQ0osU0FBUyxFQUNULEtBQUssRUFDTCxRQUFRLEVBQ1IsT0FBTyxFQUNQLEdBQUcsRUFDSCxTQUFTLEVBQ1QsZ0JBQWdCLEdBQ2pCLEdBQUcsSUFBSSxDQUFDO0FBRVQsY0FBYyxhQUFhLENBQUM7QUFDNUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRCxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsV0FBVyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IHRoZSBCcm93c2VyaWZ5IGF1dGhvcnMuIE1JVCBMaWNlbnNlLlxuLy8gUG9ydGVkIG1vc3RseSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9icm93c2VyaWZ5L3BhdGgtYnJvd3NlcmlmeS9cbi8vIFRoaXMgbW9kdWxlIGlzIGJyb3dzZXIgY29tcGF0aWJsZS5cblxuaW1wb3J0IHsgaXNXaW5kb3dzIH0gZnJvbSBcIi4uL191dGlsL29zLnRzXCI7XG5pbXBvcnQgKiBhcyBfd2luMzIgZnJvbSBcIi4vd2luMzIudHNcIjtcbmltcG9ydCAqIGFzIF9wb3NpeCBmcm9tIFwiLi9wb3NpeC50c1wiO1xuXG5jb25zdCBwYXRoID0gaXNXaW5kb3dzID8gX3dpbjMyIDogX3Bvc2l4O1xuXG5leHBvcnQgY29uc3Qgd2luMzIgPSBfd2luMzI7XG5leHBvcnQgY29uc3QgcG9zaXggPSBfcG9zaXg7XG5leHBvcnQgY29uc3Qge1xuICBiYXNlbmFtZSxcbiAgZGVsaW1pdGVyLFxuICBkaXJuYW1lLFxuICBleHRuYW1lLFxuICBmb3JtYXQsXG4gIGZyb21GaWxlVXJsLFxuICBpc0Fic29sdXRlLFxuICBqb2luLFxuICBub3JtYWxpemUsXG4gIHBhcnNlLFxuICByZWxhdGl2ZSxcbiAgcmVzb2x2ZSxcbiAgc2VwLFxuICB0b0ZpbGVVcmwsXG4gIHRvTmFtZXNwYWNlZFBhdGgsXG59ID0gcGF0aDtcblxuZXhwb3J0ICogZnJvbSBcIi4vY29tbW9uLnRzXCI7XG5leHBvcnQgeyBTRVAsIFNFUF9QQVRURVJOIH0gZnJvbSBcIi4vc2VwYXJhdG9yLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9faW50ZXJmYWNlLnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbG9iLnRzXCI7XG4iXX0=
code-source-info,0xb7b0838a40e,86,0,2536,C10O0C46O0C66O0C73O133C87O183C89O183C92O212C94O212C97O235C104O245C111O256C118O265C125O274C132O282C139O295C146O307C153O313C160O324C167O331C174O341C181O350C188O355C195O366C204O2536,,
code-creation,Script,10,84108,0xb7b0838ae0e,81, https://deno.land/std@0.116.0/_util/os.ts:1:1,0xb7b0838acb8,~
script-source,87,https://deno.land/std@0.116.0/_util/os.ts,export const osType = (() => {\n    const { Deno } = globalThis;\n    if (typeof Deno?.build?.os === "string") {\n        return Deno.build.os;\n    }\n    const { navigator } = globalThis;\n    if (navigator?.appVersion?.includes?.("Win") ?? false) {\n        return "windows";\n    }\n    return "linux";\n})();\nexport const isWindows = osType === "windows";\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoib3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJvcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQVcsQ0FBQyxHQUFHLEVBQUU7SUFFbEMsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLFVBQWlCLENBQUM7SUFDbkMsSUFBSSxPQUFPLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLFFBQVEsRUFBRTtRQUN2QyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO0tBQ3RCO0lBR0QsTUFBTSxFQUFFLFNBQVMsRUFBRSxHQUFHLFVBQWlCLENBQUM7SUFDeEMsSUFBSSxTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssRUFBRTtRQUNyRCxPQUFPLFNBQVMsQ0FBQztLQUNsQjtJQUVELE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFFTCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsTUFBTSxLQUFLLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjEgdGhlIERlbm8gYXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gTUlUIGxpY2Vuc2UuXG4vLyBUaGlzIG1vZHVsZSBpcyBicm93c2VyIGNvbXBhdGlibGUuXG5cbmV4cG9ydCB0eXBlIE9TVHlwZSA9IFwid2luZG93c1wiIHwgXCJsaW51eFwiIHwgXCJkYXJ3aW5cIjtcblxuZXhwb3J0IGNvbnN0IG9zVHlwZTogT1NUeXBlID0gKCgpID0+IHtcbiAgLy8gZGVuby1saW50LWlnbm9yZSBuby1leHBsaWNpdC1hbnlcbiAgY29uc3QgeyBEZW5vIH0gPSBnbG9iYWxUaGlzIGFzIGFueTtcbiAgaWYgKHR5cGVvZiBEZW5vPy5idWlsZD8ub3MgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gRGVuby5idWlsZC5vcztcbiAgfVxuXG4gIC8vIGRlbm8tbGludC1pZ25vcmUgbm8tZXhwbGljaXQtYW55XG4gIGNvbnN0IHsgbmF2aWdhdG9yIH0gPSBnbG9iYWxUaGlzIGFzIGFueTtcbiAgaWYgKG5hdmlnYXRvcj8uYXBwVmVyc2lvbj8uaW5jbHVkZXM/LihcIldpblwiKSA/PyBmYWxzZSkge1xuICAgIHJldHVybiBcIndpbmRvd3NcIjtcbiAgfVxuXG4gIHJldHVybiBcImxpbnV4XCI7XG59KSgpO1xuXG5leHBvcnQgY29uc3QgaXNXaW5kb3dzID0gb3NUeXBlID09PSBcIndpbmRvd3NcIjtcbiJdfQ==
code-source-info,0xb7b0838ae0e,87,0,1965,C10O0C28O0C48O0C55O22C60O300C63O22C66O329C72O336C75O329C80O1965,,
code-creation,Function,10,84217,0xb7b0838aee6,96, https://deno.land/std@0.116.0/_util/os.ts:1:24,0xb7b0838ada8,~
code-source-info,0xb7b0838aee6,87,23,299,C0O52C4O43C9O68C14O83C21O90C32O131C37O137C41O140C42O173C46O159C51O189C56O202C63O214C73O226C90O254C92O271C93O282C95O297,,
tick,0x7f056c9d293f,84253,0,0x0,3
code-creation,Script,10,85240,0xb7b0839d326,68, https://deno.land/std@0.116.0/path/win32.ts:1:1,0xb7b0839caac,~
script-source,88,https://deno.land/std@0.116.0/path/win32.ts,import { CHAR_BACKWARD_SLASH\x2C CHAR_COLON\x2C CHAR_DOT\x2C CHAR_QUESTION_MARK\x2C } from "./_constants.ts";\nimport { _format\x2C assertPath\x2C encodeWhitespace\x2C isPathSeparator\x2C isWindowsDeviceRoot\x2C normalizeString\x2C } from "./_util.ts";\nimport { assert } from "../_util/assert.ts";\nexport const sep = "\\\\";\nexport const delimiter = ";";\nexport function resolve(...pathSegments) {\n    let resolvedDevice = "";\n    let resolvedTail = "";\n    let resolvedAbsolute = false;\n    for (let i = pathSegments.length - 1; i >= -1; i--) {\n        let path;\n        const { Deno } = globalThis;\n        if (i >= 0) {\n            path = pathSegments[i];\n        }\n        else if (!resolvedDevice) {\n            if (typeof Deno?.cwd !== "function") {\n                throw new TypeError("Resolved a drive-letter-less path without a CWD.");\n            }\n            path = Deno.cwd();\n        }\n        else {\n            if (typeof Deno?.env?.get !== "function" || typeof Deno?.cwd !== "function") {\n                throw new TypeError("Resolved a relative path without a CWD.");\n            }\n            path = Deno.cwd();\n            if (path === undefined ||\n                path.slice(0\x2C 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\\\`) {\n                path = `${resolvedDevice}\\\\`;\n            }\n        }\n        assertPath(path);\n        const len = path.length;\n        if (len === 0)\n            continue;\n        let rootEnd = 0;\n        let device = "";\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        if (len > 1) {\n            if (isPathSeparator(code)) {\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    let j = 2;\n                    let last = j;\n                    for (; j < len; ++j) {\n                        if (isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last\x2C j);\n                        last = j;\n                        for (; j < len; ++j) {\n                            if (!isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j < len && j !== last) {\n                            last = j;\n                            for (; j < len; ++j) {\n                                if (isPathSeparator(path.charCodeAt(j)))\n                                    break;\n                            }\n                            if (j === len) {\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last)}`;\n                                rootEnd = j;\n                            }\n                            else if (j !== last) {\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last\x2C j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code)) {\n                if (path.charCodeAt(1) === CHAR_COLON) {\n                    device = path.slice(0\x2C 2);\n                    rootEnd = 2;\n                    if (len > 2) {\n                        if (isPathSeparator(path.charCodeAt(2))) {\n                            isAbsolute = true;\n                            rootEnd = 3;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isPathSeparator(code)) {\n            rootEnd = 1;\n            isAbsolute = true;\n        }\n        if (device.length > 0 &&\n            resolvedDevice.length > 0 &&\n            device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n            continue;\n        }\n        if (resolvedDevice.length === 0 && device.length > 0) {\n            resolvedDevice = device;\n        }\n        if (!resolvedAbsolute) {\n            resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n            resolvedAbsolute = isAbsolute;\n        }\n        if (resolvedAbsolute && resolvedDevice.length > 0)\n            break;\n    }\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C "\\\\"\x2C isPathSeparator);\n    return resolvedDevice + (resolvedAbsolute ? "\\\\" : "") + resolvedTail || ".";\n}\nexport function normalize(path) {\n    assertPath(path);\n    const len = path.length;\n    if (len === 0)\n        return ".";\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = path.charCodeAt(0);\n    if (len > 1) {\n        if (isPathSeparator(code)) {\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                for (; j < len; ++j) {\n                    if (isPathSeparator(path.charCodeAt(j)))\n                        break;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last\x2C j);\n                    last = j;\n                    for (; j < len; ++j) {\n                        if (!isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        for (; j < len; ++j) {\n                            if (isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j === len) {\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        else if (j !== last) {\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last\x2C j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code)) {\n            if (path.charCodeAt(1) === CHAR_COLON) {\n                device = path.slice(0\x2C 2);\n                rootEnd = 2;\n                if (len > 2) {\n                    if (isPathSeparator(path.charCodeAt(2))) {\n                        isAbsolute = true;\n                        rootEnd = 3;\n                    }\n                }\n            }\n        }\n    }\n    else if (isPathSeparator(code)) {\n        return "\\\\";\n    }\n    let tail;\n    if (rootEnd < len) {\n        tail = normalizeString(path.slice(rootEnd)\x2C !isAbsolute\x2C "\\\\"\x2C isPathSeparator);\n    }\n    else {\n        tail = "";\n    }\n    if (tail.length === 0 && !isAbsolute)\n        tail = ".";\n    if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n        tail += "\\\\";\n    }\n    if (device === undefined) {\n        if (isAbsolute) {\n            if (tail.length > 0)\n                return `\\\\${tail}`;\n            else\n                return "\\\\";\n        }\n        else if (tail.length > 0) {\n            return tail;\n        }\n        else {\n            return "";\n        }\n    }\n    else if (isAbsolute) {\n        if (tail.length > 0)\n            return `${device}\\\\${tail}`;\n        else\n            return `${device}\\\\`;\n    }\n    else if (tail.length > 0) {\n        return device + tail;\n    }\n    else {\n        return device;\n    }\n}\nexport function isAbsolute(path) {\n    assertPath(path);\n    const len = path.length;\n    if (len === 0)\n        return false;\n    const code = path.charCodeAt(0);\n    if (isPathSeparator(code)) {\n        return true;\n    }\n    else if (isWindowsDeviceRoot(code)) {\n        if (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n            if (isPathSeparator(path.charCodeAt(2)))\n                return true;\n        }\n    }\n    return false;\n}\nexport function join(...paths) {\n    const pathsCount = paths.length;\n    if (pathsCount === 0)\n        return ".";\n    let joined;\n    let firstPart = null;\n    for (let i = 0; i < pathsCount; ++i) {\n        const path = paths[i];\n        assertPath(path);\n        if (path.length > 0) {\n            if (joined === undefined)\n                joined = firstPart = path;\n            else\n                joined += `\\\\${path}`;\n        }\n    }\n    if (joined === undefined)\n        return ".";\n    let needsReplace = true;\n    let slashCount = 0;\n    assert(firstPart != null);\n    if (isPathSeparator(firstPart.charCodeAt(0))) {\n        ++slashCount;\n        const firstLen = firstPart.length;\n        if (firstLen > 1) {\n            if (isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2)))\n                        ++slashCount;\n                    else {\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n    }\n    if (needsReplace) {\n        for (; slashCount < joined.length; ++slashCount) {\n            if (!isPathSeparator(joined.charCodeAt(slashCount)))\n                break;\n        }\n        if (slashCount >= 2)\n            joined = `\\\\${joined.slice(slashCount)}`;\n    }\n    return normalize(joined);\n}\nexport function relative(from\x2C to) {\n    assertPath(from);\n    assertPath(to);\n    if (from === to)\n        return "";\n    const fromOrig = resolve(from);\n    const toOrig = resolve(to);\n    if (fromOrig === toOrig)\n        return "";\n    from = fromOrig.toLowerCase();\n    to = toOrig.toLowerCase();\n    if (from === to)\n        return "";\n    let fromStart = 0;\n    let fromEnd = from.length;\n    for (; fromStart < fromEnd; ++fromStart) {\n        if (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    for (; fromEnd - 1 > fromStart; --fromEnd) {\n        if (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    const fromLen = fromEnd - fromStart;\n    let toStart = 0;\n    let toEnd = to.length;\n    for (; toStart < toEnd; ++toStart) {\n        if (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    for (; toEnd - 1 > toStart; --toEnd) {\n        if (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH)\n            break;\n    }\n    const toLen = toEnd - toStart;\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i <= length; ++i) {\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    return toOrig.slice(toStart + i + 1);\n                }\n                else if (i === 2) {\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    lastCommonSep = 3;\n                }\n            }\n            break;\n        }\n        const fromCode = from.charCodeAt(fromStart + i);\n        const toCode = to.charCodeAt(toStart + i);\n        if (fromCode !== toCode)\n            break;\n        else if (fromCode === CHAR_BACKWARD_SLASH)\n            lastCommonSep = i;\n    }\n    if (i !== length && lastCommonSep === -1) {\n        return toOrig;\n    }\n    let out = "";\n    if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n        if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n            if (out.length === 0)\n                out += "..";\n            else\n                out += "\\\\..";\n        }\n    }\n    if (out.length > 0) {\n        return out + toOrig.slice(toStart + lastCommonSep\x2C toEnd);\n    }\n    else {\n        toStart += lastCommonSep;\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH)\n            ++toStart;\n        return toOrig.slice(toStart\x2C toEnd);\n    }\n}\nexport function toNamespacedPath(path) {\n    if (typeof path !== "string")\n        return path;\n    if (path.length === 0)\n        return "";\n    const resolvedPath = resolve(path);\n    if (resolvedPath.length >= 3) {\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n            if (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n                resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n                return `\\\\\\\\?\\\\${resolvedPath}`;\n            }\n        }\n    }\n    return path;\n}\nexport function dirname(path) {\n    assertPath(path);\n    const len = path.length;\n    if (len === 0)\n        return ".";\n    let rootEnd = -1;\n    let end = -1;\n    let matchedSlash = true;\n    let offset = 0;\n    const code = path.charCodeAt(0);\n    if (len > 1) {\n        if (isPathSeparator(code)) {\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                for (; j < len; ++j) {\n                    if (isPathSeparator(path.charCodeAt(j)))\n                        break;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    for (; j < len; ++j) {\n                        if (!isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        for (; j < len; ++j) {\n                            if (isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j === len) {\n                            return path;\n                        }\n                        if (j !== last) {\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code)) {\n            if (path.charCodeAt(1) === CHAR_COLON) {\n                rootEnd = offset = 2;\n                if (len > 2) {\n                    if (isPathSeparator(path.charCodeAt(2)))\n                        rootEnd = offset = 3;\n                }\n            }\n        }\n    }\n    else if (isPathSeparator(code)) {\n        return path;\n    }\n    for (let i = len - 1; i >= offset; --i) {\n        if (isPathSeparator(path.charCodeAt(i))) {\n            if (!matchedSlash) {\n                end = i;\n                break;\n            }\n        }\n        else {\n            matchedSlash = false;\n        }\n    }\n    if (end === -1) {\n        if (rootEnd === -1)\n            return ".";\n        else\n            end = rootEnd;\n    }\n    return path.slice(0\x2C end);\n}\nexport function basename(path\x2C ext = "") {\n    if (ext !== undefined && typeof ext !== "string") {\n        throw new TypeError('"ext" argument must be a string');\n    }\n    assertPath(path);\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n    if (path.length >= 2) {\n        const drive = path.charCodeAt(0);\n        if (isWindowsDeviceRoot(drive)) {\n            if (path.charCodeAt(1) === CHAR_COLON)\n                start = 2;\n        }\n    }\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n        if (ext.length === path.length && ext === path)\n            return "";\n        let extIdx = ext.length - 1;\n        let firstNonSlashEnd = -1;\n        for (i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else {\n                if (firstNonSlashEnd === -1) {\n                    matchedSlash = false;\n                    firstNonSlashEnd = i + 1;\n                }\n                if (extIdx >= 0) {\n                    if (code === ext.charCodeAt(extIdx)) {\n                        if (--extIdx === -1) {\n                            end = i;\n                        }\n                    }\n                    else {\n                        extIdx = -1;\n                        end = firstNonSlashEnd;\n                    }\n                }\n            }\n        }\n        if (start === end)\n            end = firstNonSlashEnd;\n        else if (end === -1)\n            end = path.length;\n        return path.slice(start\x2C end);\n    }\n    else {\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1)\n            return "";\n        return path.slice(start\x2C end);\n    }\n}\nexport function extname(path) {\n    assertPath(path);\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let preDotState = 0;\n    if (path.length >= 2 &&\n        path.charCodeAt(1) === CHAR_COLON &&\n        isWindowsDeviceRoot(path.charCodeAt(0))) {\n        start = startPart = 2;\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n        const code = path.charCodeAt(i);\n        if (isPathSeparator(code)) {\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        preDotState === 0 ||\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        return "";\n    }\n    return path.slice(startDot\x2C end);\n}\nexport function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== "object") {\n        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);\n    }\n    return _format("\\\\"\x2C pathObject);\n}\nexport function parse(path) {\n    assertPath(path);\n    const ret = { root: ""\x2C dir: ""\x2C base: ""\x2C ext: ""\x2C name: "" };\n    const len = path.length;\n    if (len === 0)\n        return ret;\n    let rootEnd = 0;\n    let code = path.charCodeAt(0);\n    if (len > 1) {\n        if (isPathSeparator(code)) {\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                for (; j < len; ++j) {\n                    if (isPathSeparator(path.charCodeAt(j)))\n                        break;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    for (; j < len; ++j) {\n                        if (!isPathSeparator(path.charCodeAt(j)))\n                            break;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        for (; j < len; ++j) {\n                            if (isPathSeparator(path.charCodeAt(j)))\n                                break;\n                        }\n                        if (j === len) {\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code)) {\n            if (path.charCodeAt(1) === CHAR_COLON) {\n                rootEnd = 2;\n                if (len > 2) {\n                    if (isPathSeparator(path.charCodeAt(2))) {\n                        if (len === 3) {\n                            ret.root = ret.dir = path;\n                            return ret;\n                        }\n                        rootEnd = 3;\n                    }\n                }\n                else {\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n            }\n        }\n    }\n    else if (isPathSeparator(code)) {\n        ret.root = ret.dir = path;\n        return ret;\n    }\n    if (rootEnd > 0)\n        ret.root = path.slice(0\x2C rootEnd);\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n    let preDotState = 0;\n    for (; i >= rootEnd; --i) {\n        code = path.charCodeAt(i);\n        if (isPathSeparator(code)) {\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        preDotState === 0 ||\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        if (end !== -1) {\n            ret.base = ret.name = path.slice(startPart\x2C end);\n        }\n    }\n    else {\n        ret.name = path.slice(startPart\x2C startDot);\n        ret.base = path.slice(startPart\x2C end);\n        ret.ext = path.slice(startDot\x2C end);\n    }\n    if (startPart > 0 && startPart !== rootEnd) {\n        ret.dir = path.slice(0\x2C startPart - 1);\n    }\n    else\n        ret.dir = ret.root;\n    return ret;\n}\nexport function fromFileUrl(url) {\n    url = url instanceof URL ? url : new URL(url);\n    if (url.protocol != "file:") {\n        throw new TypeError("Must be a file URL.");\n    }\n    let path = decodeURIComponent(url.pathname.replace(/\\//g\x2C "\\\\").replace(/%(?![0-9A-Fa-f]{2})/g\x2C "%25")).replace(/^\\\\*([A-Za-z]:)(\\\\|$)/\x2C "$1\\\\");\n    if (url.hostname != "") {\n        path = `\\\\\\\\${url.hostname}${path}`;\n    }\n    return path;\n}\nexport function toFileUrl(path) {\n    if (!isAbsolute(path)) {\n        throw new TypeError("Must be an absolute path.");\n    }\n    const [\x2C hostname\x2C pathname] = path.match(/^(?:[/\\\\]{2}([^/\\\\]+)(?=[/\\\\](?:[^/\\\\]|$)))?(.*)/);\n    const url = new URL("file:///");\n    url.pathname = encodeWhitespace(pathname.replace(/%/g\x2C "%25"));\n    if (hostname != null && hostname != "localhost") {\n        url.hostname = hostname;\n        if (!url.hostname) {\n            throw new TypeError("Invalid hostname.");\n        }\n    }\n    return url;\n}\n//# sourceMappingURL=data:application/json;base64\
code-source-info,0xb7b0839d326,88,0,94064,C10O0C28O0C48O0C55O286C57O286C60O317C62O317C67O94064,,
tick,0x556368b8fed3,89546,0,0x0,3
tick,0x556368b7fea6,89563,0,0x0,3
tick,0x7f056c958b33,89570,0,0x0,3
tick,0x556368b7fdf0,89576,0,0x0,3
tick,0x556368bd500d,89582,0,0x0,6
code-creation,Script,10,90107,0xb7b083a759a,68, https://deno.land/std@0.116.0/path/posix.ts:1:1,0xb7b083a6df4,~
script-source,89,https://deno.land/std@0.116.0/path/posix.ts,import { CHAR_DOT\x2C CHAR_FORWARD_SLASH } from "./_constants.ts";\nimport { _format\x2C assertPath\x2C encodeWhitespace\x2C isPosixPathSeparator\x2C normalizeString\x2C } from "./_util.ts";\nexport const sep = "/";\nexport const delimiter = ":";\nexport function resolve(...pathSegments) {\n    let resolvedPath = "";\n    let resolvedAbsolute = false;\n    for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        let path;\n        if (i >= 0)\n            path = pathSegments[i];\n        else {\n            const { Deno } = globalThis;\n            if (typeof Deno?.cwd !== "function") {\n                throw new TypeError("Resolved a relative path without a CWD.");\n            }\n            path = Deno.cwd();\n        }\n        assertPath(path);\n        if (path.length === 0) {\n            continue;\n        }\n        resolvedPath = `${path}/${resolvedPath}`;\n        resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    }\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C "/"\x2C isPosixPathSeparator);\n    if (resolvedAbsolute) {\n        if (resolvedPath.length > 0)\n            return `/${resolvedPath}`;\n        else\n            return "/";\n    }\n    else if (resolvedPath.length > 0)\n        return resolvedPath;\n    else\n        return ".";\n}\nexport function normalize(path) {\n    assertPath(path);\n    if (path.length === 0)\n        return ".";\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n    path = normalizeString(path\x2C !isAbsolute\x2C "/"\x2C isPosixPathSeparator);\n    if (path.length === 0 && !isAbsolute)\n        path = ".";\n    if (path.length > 0 && trailingSeparator)\n        path += "/";\n    if (isAbsolute)\n        return `/${path}`;\n    return path;\n}\nexport function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n}\nexport function join(...paths) {\n    if (paths.length === 0)\n        return ".";\n    let joined;\n    for (let i = 0\x2C len = paths.length; i < len; ++i) {\n        const path = paths[i];\n        assertPath(path);\n        if (path.length > 0) {\n            if (!joined)\n                joined = path;\n            else\n                joined += `/${path}`;\n        }\n    }\n    if (!joined)\n        return ".";\n    return normalize(joined);\n}\nexport function relative(from\x2C to) {\n    assertPath(from);\n    assertPath(to);\n    if (from === to)\n        return "";\n    from = resolve(from);\n    to = resolve(to);\n    if (from === to)\n        return "";\n    let fromStart = 1;\n    const fromEnd = from.length;\n    for (; fromStart < fromEnd; ++fromStart) {\n        if (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH)\n            break;\n    }\n    const fromLen = fromEnd - fromStart;\n    let toStart = 1;\n    const toEnd = to.length;\n    for (; toStart < toEnd; ++toStart) {\n        if (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH)\n            break;\n    }\n    const toLen = toEnd - toStart;\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i <= length; ++i) {\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    return to.slice(toStart + i + 1);\n                }\n                else if (i === 0) {\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    lastCommonSep = 0;\n                }\n            }\n            break;\n        }\n        const fromCode = from.charCodeAt(fromStart + i);\n        const toCode = to.charCodeAt(toStart + i);\n        if (fromCode !== toCode)\n            break;\n        else if (fromCode === CHAR_FORWARD_SLASH)\n            lastCommonSep = i;\n    }\n    let out = "";\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n        if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n            if (out.length === 0)\n                out += "..";\n            else\n                out += "/..";\n        }\n    }\n    if (out.length > 0)\n        return out + to.slice(toStart + lastCommonSep);\n    else {\n        toStart += lastCommonSep;\n        if (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH)\n            ++toStart;\n        return to.slice(toStart);\n    }\n}\nexport function toNamespacedPath(path) {\n    return path;\n}\nexport function dirname(path) {\n    assertPath(path);\n    if (path.length === 0)\n        return ".";\n    const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n        if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n            if (!matchedSlash) {\n                end = i;\n                break;\n            }\n        }\n        else {\n            matchedSlash = false;\n        }\n    }\n    if (end === -1)\n        return hasRoot ? "/" : ".";\n    if (hasRoot && end === 1)\n        return "//";\n    return path.slice(0\x2C end);\n}\nexport function basename(path\x2C ext = "") {\n    if (ext !== undefined && typeof ext !== "string") {\n        throw new TypeError('"ext" argument must be a string');\n    }\n    assertPath(path);\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n        if (ext.length === path.length && ext === path)\n            return "";\n        let extIdx = ext.length - 1;\n        let firstNonSlashEnd = -1;\n        for (i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else {\n                if (firstNonSlashEnd === -1) {\n                    matchedSlash = false;\n                    firstNonSlashEnd = i + 1;\n                }\n                if (extIdx >= 0) {\n                    if (code === ext.charCodeAt(extIdx)) {\n                        if (--extIdx === -1) {\n                            end = i;\n                        }\n                    }\n                    else {\n                        extIdx = -1;\n                        end = firstNonSlashEnd;\n                    }\n                }\n            }\n        }\n        if (start === end)\n            end = firstNonSlashEnd;\n        else if (end === -1)\n            end = path.length;\n        return path.slice(start\x2C end);\n    }\n    else {\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1)\n            return "";\n        return path.slice(start\x2C end);\n    }\n}\nexport function extname(path) {\n    assertPath(path);\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const code = path.charCodeAt(i);\n        if (code === CHAR_FORWARD_SLASH) {\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        preDotState === 0 ||\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        return "";\n    }\n    return path.slice(startDot\x2C end);\n}\nexport function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== "object") {\n        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);\n    }\n    return _format("/"\x2C pathObject);\n}\nexport function parse(path) {\n    assertPath(path);\n    const ret = { root: ""\x2C dir: ""\x2C base: ""\x2C ext: ""\x2C name: "" };\n    if (path.length === 0)\n        return ret;\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n        ret.root = "/";\n        start = 1;\n    }\n    else {\n        start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n    let preDotState = 0;\n    for (; i >= start; --i) {\n        const code = path.charCodeAt(i);\n        if (code === CHAR_FORWARD_SLASH) {\n            if (!matchedSlash) {\n                startPart = i + 1;\n                break;\n            }\n            continue;\n        }\n        if (end === -1) {\n            matchedSlash = false;\n            end = i + 1;\n        }\n        if (code === CHAR_DOT) {\n            if (startDot === -1)\n                startDot = i;\n            else if (preDotState !== 1)\n                preDotState = 1;\n        }\n        else if (startDot !== -1) {\n            preDotState = -1;\n        }\n    }\n    if (startDot === -1 ||\n        end === -1 ||\n        preDotState === 0 ||\n        (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n        if (end !== -1) {\n            if (startPart === 0 && isAbsolute) {\n                ret.base = ret.name = path.slice(1\x2C end);\n            }\n            else {\n                ret.base = ret.name = path.slice(startPart\x2C end);\n            }\n        }\n    }\n    else {\n        if (startPart === 0 && isAbsolute) {\n            ret.name = path.slice(1\x2C startDot);\n            ret.base = path.slice(1\x2C end);\n        }\n        else {\n            ret.name = path.slice(startPart\x2C startDot);\n            ret.base = path.slice(startPart\x2C end);\n        }\n        ret.ext = path.slice(startDot\x2C end);\n    }\n    if (startPart > 0)\n        ret.dir = path.slice(0\x2C startPart - 1);\n    else if (isAbsolute)\n        ret.dir = "/";\n    return ret;\n}\nexport function fromFileUrl(url) {\n    url = url instanceof URL ? url : new URL(url);\n    if (url.protocol != "file:") {\n        throw new TypeError("Must be a file URL.");\n    }\n    return decodeURIComponent(url.pathname.replace(/%(?![0-9A-Fa-f]{2})/g\x2C "%25"));\n}\nexport function toFileUrl(path) {\n    if (!isAbsolute(path)) {\n        throw new TypeError("Must be an absolute path.");\n    }\n    const url = new URL("file:///");\n    url.pathname = encodeWhitespace(path.replace(/%/g\x2C "%25").replace(/\\\\/g\x2C "%5C"));\n    return url;\n}\n//# sourceMappingURL=data:application/json;base64\
code-source-info,0xb7b083a759a,89,0,47317,C10O0C28O0C48O0C55O191C57O191C60O221C62O221C67O47317,,
tick,0x556368e9fee3,92391,0,0x0,3
tick,0x7f056c963f4a,92408,0,0x0,3
code-creation,Script,10,92538,0xb7b083a8a52,58, https://deno.land/std@0.116.0/path/common.ts:1:1,0xb7b083a88e8,~
script-source,90,https://deno.land/std@0.116.0/path/common.ts,import { SEP } from "./separator.ts";\nexport function common(paths\x2C sep = SEP) {\n    const [first = ""\x2C ...remaining] = paths;\n    if (first === "" || remaining.length === 0) {\n        return first.substring(0\x2C first.lastIndexOf(sep) + 1);\n    }\n    const parts = first.split(sep);\n    let endOfPrefix = parts.length;\n    for (const path of remaining) {\n        const compare = path.split(sep);\n        for (let i = 0; i < endOfPrefix; i++) {\n            if (compare[i] !== parts[i]) {\n                endOfPrefix = i;\n            }\n        }\n        if (endOfPrefix === 0) {\n            return "";\n        }\n    }\n    const prefix = parts.slice(0\x2C endOfPrefix).join(sep);\n    return prefix.endsWith(sep) ? prefix : `${prefix}${sep}`;\n}\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQWNyQyxNQUFNLFVBQVUsTUFBTSxDQUFDLEtBQWUsRUFBRSxHQUFHLEdBQUcsR0FBRztJQUMvQyxNQUFNLENBQUMsS0FBSyxHQUFHLEVBQUUsRUFBRSxHQUFHLFNBQVMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUN6QyxJQUFJLEtBQUssS0FBSyxFQUFFLElBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDMUMsT0FBTyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0tBQ3ZEO0lBQ0QsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUUvQixJQUFJLFdBQVcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQy9CLEtBQUssTUFBTSxJQUFJLElBQUksU0FBUyxFQUFFO1FBQzVCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNwQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQzNCLFdBQVcsR0FBRyxDQUFDLENBQUM7YUFDakI7U0FDRjtRQUVELElBQUksV0FBVyxLQUFLLENBQUMsRUFBRTtZQUNyQixPQUFPLEVBQUUsQ0FBQztTQUNYO0tBQ0Y7SUFDRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDckQsT0FBTyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDO0FBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIxIHRoZSBEZW5vIGF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIE1JVCBsaWNlbnNlLlxuLy8gVGhpcyBtb2R1bGUgaXMgYnJvd3NlciBjb21wYXRpYmxlLlxuXG5pbXBvcnQgeyBTRVAgfSBmcm9tIFwiLi9zZXBhcmF0b3IudHNcIjtcblxuLyoqIERldGVybWluZXMgdGhlIGNvbW1vbiBwYXRoIGZyb20gYSBzZXQgb2YgcGF0aHMsIHVzaW5nIGFuIG9wdGlvbmFsIHNlcGFyYXRvcixcbiAqIHdoaWNoIGRlZmF1bHRzIHRvIHRoZSBPUyBkZWZhdWx0IHNlcGFyYXRvci5cbiAqXG4gKiBgYGB0c1xuICogICAgICAgaW1wb3J0IHsgY29tbW9uIH0gZnJvbSBcImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAkU1REX1ZFUlNJT04vcGF0aC9tb2QudHNcIjtcbiAqICAgICAgIGNvbnN0IHAgPSBjb21tb24oW1xuICogICAgICAgICBcIi4vZGVuby9zdGQvcGF0aC9tb2QudHNcIixcbiAqICAgICAgICAgXCIuL2Rlbm8vc3RkL2ZzL21vZC50c1wiLFxuICogICAgICAgXSk7XG4gKiAgICAgICBjb25zb2xlLmxvZyhwKTsgLy8gXCIuL2Rlbm8vc3RkL1wiXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbW1vbihwYXRoczogc3RyaW5nW10sIHNlcCA9IFNFUCk6IHN0cmluZyB7XG4gIGNvbnN0IFtmaXJzdCA9IFwiXCIsIC4uLnJlbWFpbmluZ10gPSBwYXRocztcbiAgaWYgKGZpcnN0ID09PSBcIlwiIHx8IHJlbWFpbmluZy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZmlyc3Quc3Vic3RyaW5nKDAsIGZpcnN0Lmxhc3RJbmRleE9mKHNlcCkgKyAxKTtcbiAgfVxuICBjb25zdCBwYXJ0cyA9IGZpcnN0LnNwbGl0KHNlcCk7XG5cbiAgbGV0IGVuZE9mUHJlZml4ID0gcGFydHMubGVuZ3RoO1xuICBmb3IgKGNvbnN0IHBhdGggb2YgcmVtYWluaW5nKSB7XG4gICAgY29uc3QgY29tcGFyZSA9IHBhdGguc3BsaXQoc2VwKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVuZE9mUHJlZml4OyBpKyspIHtcbiAgICAgIGlmIChjb21wYXJlW2ldICE9PSBwYXJ0c1tpXSkge1xuICAgICAgICBlbmRPZlByZWZpeCA9IGk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGVuZE9mUHJlZml4ID09PSAwKSB7XG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gIH1cbiAgY29uc3QgcHJlZml4ID0gcGFydHMuc2xpY2UoMCwgZW5kT2ZQcmVmaXgpLmpvaW4oc2VwKTtcbiAgcmV0dXJuIHByZWZpeC5lbmRzV2l0aChzZXApID8gcHJlZml4IDogYCR7cHJlZml4fSR7c2VwfWA7XG59XG4iXX0=
code-source-info,0xb7b083a8a52,90,0,3867,C10O0C28O0C48O0C57O3867,,
code-creation,Script,10,92820,0xb7b083a9086,94, https://deno.land/std@0.116.0/path/separator.ts:1:1,0xb7b083a8f1c,~
script-source,91,https://deno.land/std@0.116.0/path/separator.ts,import { isWindows } from "../_util/os.ts";\nexport const SEP = isWindows ? "\\\\" : "/";\nexport const SEP_PATTERN = isWindows ? /[\\\\/]+/ : /\\/+/;\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VwYXJhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2VwYXJhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzQyxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUMxQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjEgdGhlIERlbm8gYXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gTUlUIGxpY2Vuc2UuXG4vLyBUaGlzIG1vZHVsZSBpcyBicm93c2VyIGNvbXBhdGlibGUuXG5cbmltcG9ydCB7IGlzV2luZG93cyB9IGZyb20gXCIuLi9fdXRpbC9vcy50c1wiO1xuXG5leHBvcnQgY29uc3QgU0VQID0gaXNXaW5kb3dzID8gXCJcXFxcXCIgOiBcIi9cIjtcbmV4cG9ydCBjb25zdCBTRVBfUEFUVEVSTiA9IGlzV2luZG93cyA/IC9bXFxcXC9dKy8gOiAvXFwvKy87XG4iXX0=
code-source-info,0xb7b083a9086,91,0,1002,C10O0C28O0C48O0C55O63C68O63C71O114C88O114C93O1002,,
tick,0x556368b7ff27,92926,0,0x0,3
code-creation,Script,10,92969,0xb7b083a972a,45, https://deno.land/std@0.116.0/path/_interface.ts:1:1,0xb7b083a968c,~
script-source,92,https://deno.land/std@0.116.0/path/_interface.ts,export {};\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2ludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIl9pbnRlcmZhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjEgdGhlIERlbm8gYXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gTUlUIGxpY2Vuc2UuXG4vLyBUaGlzIG1vZHVsZSBpcyBicm93c2VyIGNvbXBhdGlibGUuXG5cbi8qKlxuICogQSBwYXJzZWQgcGF0aCBvYmplY3QgZ2VuZXJhdGVkIGJ5IHBhdGgucGFyc2UoKSBvciBjb25zdW1lZCBieSBwYXRoLmZvcm1hdCgpLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFBhcnNlZFBhdGgge1xuICAvKipcbiAgICogVGhlIHJvb3Qgb2YgdGhlIHBhdGggc3VjaCBhcyAnLycgb3IgJ2M6XFwnXG4gICAqL1xuICByb290OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgZnVsbCBkaXJlY3RvcnkgcGF0aCBzdWNoIGFzICcvaG9tZS91c2VyL2Rpcicgb3IgJ2M6XFxwYXRoXFxkaXInXG4gICAqL1xuICBkaXI6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBmaWxlIG5hbWUgaW5jbHVkaW5nIGV4dGVuc2lvbiAoaWYgYW55KSBzdWNoIGFzICdpbmRleC5odG1sJ1xuICAgKi9cbiAgYmFzZTogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGZpbGUgZXh0ZW5zaW9uIChpZiBhbnkpIHN1Y2ggYXMgJy5odG1sJ1xuICAgKi9cbiAgZXh0OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgZmlsZSBuYW1lIHdpdGhvdXQgZXh0ZW5zaW9uIChpZiBhbnkpIHN1Y2ggYXMgJ2luZGV4J1xuICAgKi9cbiAgbmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBGb3JtYXRJbnB1dFBhdGhPYmplY3QgPSBQYXJ0aWFsPFBhcnNlZFBhdGg+O1xuIl19
code-source-info,0xb7b083a972a,92,0,1245,C10O0C15O0C35O0C44O1245,,
new,MemoryChunk,0xb7b083c0000,262144
new,MemoryChunk,0xb7b08400000,262144
scavenge,begin,0,86950,1638619350901
scavenge,end,0,87236,1638619350901
tick,0x7f056cbffca4,93950,0,0x0,1
code-creation,Script,10,94399,0xb7b083b190a,126, https://deno.land/std@0.116.0/path/glob.ts:1:1,0xb7b083b14b8,~
script-source,93,https://deno.land/std@0.116.0/path/glob.ts,import { isWindows\x2C osType } from "../_util/os.ts";\nimport { SEP\x2C SEP_PATTERN } from "./separator.ts";\nimport * as _win32 from "./win32.ts";\nimport * as _posix from "./posix.ts";\nconst path = isWindows ? _win32 : _posix;\nconst { join\x2C normalize } = path;\nconst regExpEscapeChars = [\n    "!"\x2C\n    "$"\x2C\n    "("\x2C\n    ")"\x2C\n    "*"\x2C\n    "+"\x2C\n    "."\x2C\n    "="\x2C\n    "?"\x2C\n    "["\x2C\n    "\\\\"\x2C\n    "^"\x2C\n    "{"\x2C\n    "|"\x2C\n];\nconst rangeEscapeChars = ["-"\x2C "\\\\"\x2C "]"];\nexport function globToRegExp(glob\x2C { extended = true\x2C globstar: globstarOption = true\x2C os = osType\x2C caseInsensitive = false\x2C } = {}) {\n    if (glob == "") {\n        return /(?!)/;\n    }\n    const sep = os == "windows" ? "(?:\\\\\\\\|/)+" : "/+";\n    const sepMaybe = os == "windows" ? "(?:\\\\\\\\|/)*" : "/*";\n    const seps = os == "windows" ? ["\\\\"\x2C "/"] : ["/"];\n    const globstar = os == "windows"\n        ? "(?:[^\\\\\\\\/]*(?:\\\\\\\\|/|$)+)*"\n        : "(?:[^/]*(?:/|$)+)*";\n    const wildcard = os == "windows" ? "[^\\\\\\\\/]*" : "[^/]*";\n    const escapePrefix = os == "windows" ? "`" : "\\\\";\n    let newLength = glob.length;\n    for (; newLength > 1 && seps.includes(glob[newLength - 1]); newLength--)\n        ;\n    glob = glob.slice(0\x2C newLength);\n    let regExpString = "";\n    for (let j = 0; j < glob.length;) {\n        let segment = "";\n        const groupStack = [];\n        let inRange = false;\n        let inEscape = false;\n        let endsWithSep = false;\n        let i = j;\n        for (; i < glob.length && !seps.includes(glob[i]); i++) {\n            if (inEscape) {\n                inEscape = false;\n                const escapeChars = inRange ? rangeEscapeChars : regExpEscapeChars;\n                segment += escapeChars.includes(glob[i]) ? `\\\\${glob[i]}` : glob[i];\n                continue;\n            }\n            if (glob[i] == escapePrefix) {\n                inEscape = true;\n                continue;\n            }\n            if (glob[i] == "[") {\n                if (!inRange) {\n                    inRange = true;\n                    segment += "[";\n                    if (glob[i + 1] == "!") {\n                        i++;\n                        segment += "^";\n                    }\n                    else if (glob[i + 1] == "^") {\n                        i++;\n                        segment += "\\\\^";\n                    }\n                    continue;\n                }\n                else if (glob[i + 1] == ":") {\n                    let k = i + 1;\n                    let value = "";\n                    while (glob[k + 1] != null && glob[k + 1] != ":") {\n                        value += glob[k + 1];\n                        k++;\n                    }\n                    if (glob[k + 1] == ":" && glob[k + 2] == "]") {\n                        i = k + 2;\n                        if (value == "alnum")\n                            segment += "\\\\dA-Za-z";\n                        else if (value == "alpha")\n                            segment += "A-Za-z";\n                        else if (value == "ascii")\n                            segment += "\\x00-\\x7F";\n                        else if (value == "blank")\n                            segment += "\\t ";\n                        else if (value == "cntrl")\n                            segment += "\\x00-\\x1F\\x7F";\n                        else if (value == "digit")\n                            segment += "\\\\d";\n                        else if (value == "graph")\n                            segment += "\\x21-\\x7E";\n                        else if (value == "lower")\n                            segment += "a-z";\n                        else if (value == "print")\n                            segment += "\\x20-\\x7E";\n                        else if (value == "punct") {\n                            segment += "!\\"#$%&'()*+\x2C\\\\-./:;<=>?@[\\\\\\\\\\\\]^_\u2018{|}~";\n                        }\n                        else if (value == "space")\n                            segment += "\\\\s\\v";\n                        else if (value == "upper")\n                            segment += "A-Z";\n                        else if (value == "word")\n                            segment += "\\\\w";\n                        else if (value == "xdigit")\n                            segment += "\\\\dA-Fa-f";\n                        continue;\n                    }\n                }\n            }\n            if (glob[i] == "]" && inRange) {\n                inRange = false;\n                segment += "]";\n                continue;\n            }\n            if (inRange) {\n                if (glob[i] == "\\\\") {\n                    segment += `\\\\\\\\`;\n                }\n                else {\n                    segment += glob[i];\n                }\n                continue;\n            }\n            if (glob[i] == ")" && groupStack.length > 0 &&\n                groupStack[groupStack.length - 1] != "BRACE") {\n                segment += ")";\n                const type = groupStack.pop();\n                if (type == "!") {\n                    segment += wildcard;\n                }\n                else if (type != "@") {\n                    segment += type;\n                }\n                continue;\n            }\n            if (glob[i] == "|" && groupStack.length > 0 &&\n                groupStack[groupStack.length - 1] != "BRACE") {\n                segment += "|";\n                continue;\n            }\n            if (glob[i] == "+" && extended && glob[i + 1] == "(") {\n                i++;\n                groupStack.push("+");\n                segment += "(?:";\n                continue;\n            }\n            if (glob[i] == "@" && extended && glob[i + 1] == "(") {\n                i++;\n                groupStack.push("@");\n                segment += "(?:";\n                continue;\n            }\n            if (glob[i] == "?") {\n                if (extended && glob[i + 1] == "(") {\n                    i++;\n                    groupStack.push("?");\n                    segment += "(?:";\n                }\n                else {\n                    segment += ".";\n                }\n                continue;\n            }\n            if (glob[i] == "!" && extended && glob[i + 1] == "(") {\n                i++;\n                groupStack.push("!");\n                segment += "(?!";\n                continue;\n            }\n            if (glob[i] == "{") {\n                groupStack.push("BRACE");\n                segment += "(?:";\n                continue;\n            }\n            if (glob[i] == "}" && groupStack[groupStack.length - 1] == "BRACE") {\n                groupStack.pop();\n                segment += ")";\n                continue;\n            }\n            if (glob[i] == "\x2C" && groupStack[groupStack.length - 1] == "BRACE") {\n                segment += "|";\n                continue;\n            }\n            if (glob[i] == "*") {\n                if (extended && glob[i + 1] == "(") {\n                    i++;\n                    groupStack.push("*");\n                    segment += "(?:";\n                }\n                else {\n                    const prevChar = glob[i - 1];\n                    let numStars = 1;\n                    while (glob[i + 1] == "*") {\n                        i++;\n                        numStars++;\n                    }\n                    const nextChar = glob[i + 1];\n                    if (globstarOption && numStars == 2 &&\n                        [...seps\x2C undefined].includes(prevChar) &&\n                        [...seps\x2C undefined].includes(nextChar)) {\n                        segment += globstar;\n                        endsWithSep = true;\n                    }\n                    else {\n                        segment += wildcard;\n                    }\n                }\n                continue;\n            }\n            segment += regExpEscapeChars.includes(glob[i]) ? `\\\\${glob[i]}` : glob[i];\n        }\n        if (groupStack.length > 0 || inRange || inEscape) {\n            segment = "";\n            for (const c of glob.slice(j\x2C i)) {\n                segment += regExpEscapeChars.includes(c) ? `\\\\${c}` : c;\n                endsWithSep = false;\n            }\n        }\n        regExpString += segment;\n        if (!endsWithSep) {\n            regExpString += i < glob.length ? sep : sepMaybe;\n            endsWithSep = true;\n        }\n        while (seps.includes(glob[i]))\n            i++;\n        if (!(i > j)) {\n            throw new Error("Assertion failure: i > j (potential infinite loop)");\n        }\n        j = i;\n    }\n    regExpString = `^${regExpString}$`;\n    return new RegExp(regExpString\x2C caseInsensitive ? "i" : "");\n}\nexport function isGlob(str) {\n    const chars = { "{": "}"\x2C "(": ")"\x2C "[": "]" };\n    const regex = /\\\\(.)|(^!|\\*|\\?|[\\].+)]\\?|\\[[^\\\\\\]]+\\]|\\{[^\\\\}]+\\}|\\(\\?[:!=][^\\\\)]+\\)|\\([^|]+\\|[^\\\\)]+\\))/;\n    if (str === "") {\n        return false;\n    }\n    let match;\n    while ((match = regex.exec(str))) {\n        if (match[2])\n            return true;\n        let idx = match.index + match[0].length;\n        const open = match[1];\n        const close = open ? chars[open] : null;\n        if (open && close) {\n            const n = str.indexOf(close\x2C idx);\n            if (n !== -1) {\n                idx = n + 1;\n            }\n        }\n        str = str.slice(idx);\n    }\n    return false;\n}\nexport function normalizeGlob(glob\x2C { globstar = false } = {}) {\n    if (glob.match(/\\0/g)) {\n        throw new Error(`Glob contains invalid characters: "${glob}"`);\n    }\n    if (!globstar) {\n        return normalize(glob);\n    }\n    const s = SEP_PATTERN.source;\n    const badParentPattern = new RegExp(`(?<=(${s}|^)\\\\*\\\\*${s})\\\\.\\\\.(?=${s}|$)`\x2C "g");\n    return normalize(glob.replace(badParentPattern\x2C "\\0")).replace(/\\0/g\x2C "..");\n}\nexport function joinGlobs(globs\x2C { extended = false\x2C globstar = false } = {}) {\n    if (!globstar || globs.length == 0) {\n        return join(...globs);\n    }\n    if (globs.length === 0)\n        return ".";\n    let joined;\n    for (const glob of globs) {\n        const path = glob;\n        if (path.length > 0) {\n            if (!joined)\n                joined = path;\n            else\n                joined += `${SEP}${path}`;\n        }\n    }\n    if (!joined)\n        return ".";\n    return normalizeGlob(joined\x2C { extended\x2C globstar });\n}\n//# sourceMappingURL=data:application/json;base64\
code-source-info,0xb7b083b190a,93,0,41196,C10O0C58O0C78O0C85O192C99O229C105O235C111O281C115O281C117O438C121O438C125O41196,,
tick,0x7f056c9589e2,96346,0,0x0,3
tick,0x556368b7fefc,96384,0,0x0,3
code-creation,Script,10,96566,0xb7b083b3d7e,259, https://deno.land/std@0.116.0/path/_constants.ts:1:1,0xb7b083b36b4,~
script-source,94,https://deno.land/std@0.116.0/path/_constants.ts,export const CHAR_UPPERCASE_A = 65;\nexport const CHAR_LOWERCASE_A = 97;\nexport const CHAR_UPPERCASE_Z = 90;\nexport const CHAR_LOWERCASE_Z = 122;\nexport const CHAR_DOT = 46;\nexport const CHAR_FORWARD_SLASH = 47;\nexport const CHAR_BACKWARD_SLASH = 92;\nexport const CHAR_VERTICAL_LINE = 124;\nexport const CHAR_COLON = 58;\nexport const CHAR_QUESTION_MARK = 63;\nexport const CHAR_UNDERSCORE = 95;\nexport const CHAR_LINE_FEED = 10;\nexport const CHAR_CARRIAGE_RETURN = 13;\nexport const CHAR_TAB = 9;\nexport const CHAR_FORM_FEED = 12;\nexport const CHAR_EXCLAMATION_MARK = 33;\nexport const CHAR_HASH = 35;\nexport const CHAR_SPACE = 32;\nexport const CHAR_NO_BREAK_SPACE = 160;\nexport const CHAR_ZERO_WIDTH_NOBREAK_SPACE = 65279;\nexport const CHAR_LEFT_SQUARE_BRACKET = 91;\nexport const CHAR_RIGHT_SQUARE_BRACKET = 93;\nexport const CHAR_LEFT_ANGLE_BRACKET = 60;\nexport const CHAR_RIGHT_ANGLE_BRACKET = 62;\nexport const CHAR_LEFT_CURLY_BRACKET = 123;\nexport const CHAR_RIGHT_CURLY_BRACKET = 125;\nexport const CHAR_HYPHEN_MINUS = 45;\nexport const CHAR_PLUS = 43;\nexport const CHAR_DOUBLE_QUOTE = 34;\nexport const CHAR_SINGLE_QUOTE = 39;\nexport const CHAR_PERCENT = 37;\nexport const CHAR_SEMICOLON = 59;\nexport const CHAR_CIRCUMFLEX_ACCENT = 94;\nexport const CHAR_GRAVE_ACCENT = 96;\nexport const CHAR_AT = 64;\nexport const CHAR_AMPERSAND = 38;\nexport const CHAR_EQUAL = 61;\nexport const CHAR_0 = 48;\nexport const CHAR_9 = 57;\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2NvbnN0YW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIl9jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBQ25DLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztBQUNuQyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxFQUFFLENBQUM7QUFDbkMsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO0FBR3BDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUM7QUFDM0IsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsRUFBRSxDQUFDO0FBQ3JDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztBQUN0QyxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLENBQUM7QUFDdEMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUM3QixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUM7QUFDckMsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLEVBQUUsQ0FBQztBQUNsQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLEVBQUUsQ0FBQztBQUN2QyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDO0FBQzFCLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFDakMsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsRUFBRSxDQUFDO0FBQ3hDLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFDNUIsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUM3QixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxHQUFHLENBQUM7QUFDdkMsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQUcsS0FBSyxDQUFDO0FBQ25ELE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLEVBQUUsQ0FBQztBQUMzQyxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxFQUFFLENBQUM7QUFDNUMsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsRUFBRSxDQUFDO0FBQzFDLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLEVBQUUsQ0FBQztBQUMzQyxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxHQUFHLENBQUM7QUFDM0MsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsR0FBRyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEVBQUUsQ0FBQztBQUNwQyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBQzVCLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEVBQUUsQ0FBQztBQUNwQyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxFQUFFLENBQUM7QUFDcEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLEVBQUUsQ0FBQztBQUMvQixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLEVBQUUsQ0FBQztBQUN6QyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxFQUFFLENBQUM7QUFDcEMsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztBQUMxQixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFHN0IsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUN6QixNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IHRoZSBCcm93c2VyaWZ5IGF1dGhvcnMuIE1JVCBMaWNlbnNlLlxuLy8gUG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJpZnkvcGF0aC1icm93c2VyaWZ5L1xuLy8gVGhpcyBtb2R1bGUgaXMgYnJvd3NlciBjb21wYXRpYmxlLlxuXG4vLyBBbHBoYWJldCBjaGFycy5cbmV4cG9ydCBjb25zdCBDSEFSX1VQUEVSQ0FTRV9BID0gNjU7IC8qIEEgKi9cbmV4cG9ydCBjb25zdCBDSEFSX0xPV0VSQ0FTRV9BID0gOTc7IC8qIGEgKi9cbmV4cG9ydCBjb25zdCBDSEFSX1VQUEVSQ0FTRV9aID0gOTA7IC8qIFogKi9cbmV4cG9ydCBjb25zdCBDSEFSX0xPV0VSQ0FTRV9aID0gMTIyOyAvKiB6ICovXG5cbi8vIE5vbi1hbHBoYWJldGljIGNoYXJzLlxuZXhwb3J0IGNvbnN0IENIQVJfRE9UID0gNDY7IC8qIC4gKi9cbmV4cG9ydCBjb25zdCBDSEFSX0ZPUldBUkRfU0xBU0ggPSA0NzsgLyogLyAqL1xuZXhwb3J0IGNvbnN0IENIQVJfQkFDS1dBUkRfU0xBU0ggPSA5MjsgLyogXFwgKi9cbmV4cG9ydCBjb25zdCBDSEFSX1ZFUlRJQ0FMX0xJTkUgPSAxMjQ7IC8qIHwgKi9cbmV4cG9ydCBjb25zdCBDSEFSX0NPTE9OID0gNTg7IC8qIDogKi9cbmV4cG9ydCBjb25zdCBDSEFSX1FVRVNUSU9OX01BUksgPSA2MzsgLyogPyAqL1xuZXhwb3J0IGNvbnN0IENIQVJfVU5ERVJTQ09SRSA9IDk1OyAvKiBfICovXG5leHBvcnQgY29uc3QgQ0hBUl9MSU5FX0ZFRUQgPSAxMDsgLyogXFxuICovXG5leHBvcnQgY29uc3QgQ0hBUl9DQVJSSUFHRV9SRVRVUk4gPSAxMzsgLyogXFxyICovXG5leHBvcnQgY29uc3QgQ0hBUl9UQUIgPSA5OyAvKiBcXHQgKi9cbmV4cG9ydCBjb25zdCBDSEFSX0ZPUk1fRkVFRCA9IDEyOyAvKiBcXGYgKi9cbmV4cG9ydCBjb25zdCBDSEFSX0VYQ0xBTUFUSU9OX01BUksgPSAzMzsgLyogISAqL1xuZXhwb3J0IGNvbnN0IENIQVJfSEFTSCA9IDM1OyAvKiAjICovXG5leHBvcnQgY29uc3QgQ0hBUl9TUEFDRSA9IDMyOyAvKiAgICovXG5leHBvcnQgY29uc3QgQ0hBUl9OT19CUkVBS19TUEFDRSA9IDE2MDsgLyogXFx1MDBBMCAqL1xuZXhwb3J0IGNvbnN0IENIQVJfWkVST19XSURUSF9OT0JSRUFLX1NQQUNFID0gNjUyNzk7IC8qIFxcdUZFRkYgKi9cbmV4cG9ydCBjb25zdCBDSEFSX0xFRlRfU1FVQVJFX0JSQUNLRVQgPSA5MTsgLyogWyAqL1xuZXhwb3J0IGNvbnN0IENIQVJfUklHSFRfU1FVQVJFX0JSQUNLRVQgPSA5MzsgLyogXSAqL1xuZXhwb3J0IGNvbnN0IENIQVJfTEVGVF9BTkdMRV9CUkFDS0VUID0gNjA7IC8qIDwgKi9cbmV4cG9ydCBjb25zdCBDSEFSX1JJR0hUX0FOR0xFX0JSQUNLRVQgPSA2MjsgLyogPiAqL1xuZXhwb3J0IGNvbnN0IENIQVJfTEVGVF9DVVJMWV9CUkFDS0VUID0gMTIzOyAvKiB7ICovXG5leHBvcnQgY29uc3QgQ0hBUl9SSUdIVF9DVVJMWV9CUkFDS0VUID0gMTI1OyAvKiB9ICovXG5leHBvcnQgY29uc3QgQ0hBUl9IWVBIRU5fTUlOVVMgPSA0NTsgLyogLSAqL1xuZXhwb3J0IGNvbnN0IENIQVJfUExVUyA9IDQzOyAvKiArICovXG5leHBvcnQgY29uc3QgQ0hBUl9ET1VCTEVfUVVPVEUgPSAzNDsgLyogXCIgKi9cbmV4cG9ydCBjb25zdCBDSEFSX1NJTkdMRV9RVU9URSA9IDM5OyAvKiAnICovXG5leHBvcnQgY29uc3QgQ0hBUl9QRVJDRU5UID0gMzc7IC8qICUgKi9cbmV4cG9ydCBjb25zdCBDSEFSX1NFTUlDT0xPTiA9IDU5OyAvKiA7ICovXG5leHBvcnQgY29uc3QgQ0hBUl9DSVJDVU1GTEVYX0FDQ0VOVCA9IDk0OyAvKiBeICovXG5leHBvcnQgY29uc3QgQ0hBUl9HUkFWRV9BQ0NFTlQgPSA5NjsgLyogYCAqL1xuZXhwb3J0IGNvbnN0IENIQVJfQVQgPSA2NDsgLyogQCAqL1xuZXhwb3J0IGNvbnN0IENIQVJfQU1QRVJTQU5EID0gMzg7IC8qICYgKi9cbmV4cG9ydCBjb25zdCBDSEFSX0VRVUFMID0gNjE7IC8qID0gKi9cblxuLy8gRGlnaXRzXG5leHBvcnQgY29uc3QgQ0hBUl8wID0gNDg7IC8qIDAgKi9cbmV4cG9ydCBjb25zdCBDSEFSXzkgPSA1NzsgLyogOSAqL1xuIl19
code-source-info,0xb7b083b3d7e,94,0,6490,C10O0C28O0C48O0C55O32C57O32C60O68C62O68C65O104C67O104C70O140C72O140C75O169C77O169C80O207C82O207C85O246C87O246C90O284C92O284C95O315C97O315C100O353C102O353C105O388C107O388C110O422C112O422C115O462C117O462C120O490C122O490C125O523C127O523C130O564C132O564C135O593C137O593C140O623C142O623C145O662C149O662C152O712C158O712C161O759C163O759C166O804C168O804C171O847C173O847C176O891C178O891C181O934C183O934C186O979C188O979C191O1017C193O1017C196O1046C198O1046C201O1083C203O1083C206O1120C208O1120C211O1152C213O1152C216O1186C218O1186C221O1228C223O1228C226O1265C228O1265C231O1292C233O1292C236O1326C238O1326C241O1356C243O1356C246O1382C248O1382C251O1408C253O1408C258O6490,,
scavenge,begin,0,90421,1638619350904
new,MemoryChunk,0xb7b08440000,262144
tick,0x7f056ca46981,97147,0,0x0,1
new,MemoryChunk,0xb7b08480000,262144
scavenge,end,0,90873,1638619350905
code-creation,Script,10,97764,0xb7b083b6e1e,67, https://deno.land/std@0.116.0/path/_util.ts:1:1,0xb7b083b68f4,~
script-source,95,https://deno.land/std@0.116.0/path/_util.ts,import { CHAR_BACKWARD_SLASH\x2C CHAR_DOT\x2C CHAR_FORWARD_SLASH\x2C CHAR_LOWERCASE_A\x2C CHAR_LOWERCASE_Z\x2C CHAR_UPPERCASE_A\x2C CHAR_UPPERCASE_Z\x2C } from "./_constants.ts";\nexport function assertPath(path) {\n    if (typeof path !== "string") {\n        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);\n    }\n}\nexport function isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nexport function isPathSeparator(code) {\n    return isPosixPathSeparator(code) || code === CHAR_BACKWARD_SLASH;\n}\nexport function isWindowsDeviceRoot(code) {\n    return ((code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z) ||\n        (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z));\n}\nexport function normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n    let res = "";\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code;\n    for (let i = 0\x2C len = path.length; i <= len; ++i) {\n        if (i < len)\n            code = path.charCodeAt(i);\n        else if (isPathSeparator(code))\n            break;\n        else\n            code = CHAR_FORWARD_SLASH;\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n            }\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 ||\n                    lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = "";\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0\x2C lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length === 2 || res.length === 1) {\n                        res = "";\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0)\n                        res += `${separator}..`;\n                    else\n                        res = "..";\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0)\n                    res += separator + path.slice(lastSlash + 1\x2C i);\n                else\n                    res = path.slice(lastSlash + 1\x2C i);\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nexport function _format(sep\x2C pathObject) {\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        (pathObject.name || "") + (pathObject.ext || "");\n    if (!dir)\n        return base;\n    if (dir === pathObject.root)\n        return dir + base;\n    return dir + sep + base;\n}\nconst WHITESPACE_ENCODINGS = {\n    "\\u0009": "%09"\x2C\n    "\\u000A": "%0A"\x2C\n    "\\u000B": "%0B"\x2C\n    "\\u000C": "%0C"\x2C\n    "\\u000D": "%0D"\x2C\n    "\\u0020": "%20"\x2C\n};\nexport function encodeWhitespace(string) {\n    return string.replaceAll(/[\\s]/g\x2C (c) => {\n        return WHITESPACE_ENCODINGS[c] ?? c;\n    });\n}\n//# sourceMappingURL=data:application/json;base64\
code-source-info,0xb7b083b6e1e,95,0,13748,C10O0C31O0C51O0C58O3518C62O3518C66O13748,,
code-creation,Script,10,98656,0xb7b083b7792,84, https://deno.land/std@0.116.0/_util/assert.ts:1:1,0xb7b083b7570,~
script-source,96,https://deno.land/std@0.116.0/_util/assert.ts,export class DenoStdInternalError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = "DenoStdInternalError";\n    }\n}\nexport function assert(expr\x2C msg = "") {\n    if (!expr) {\n        throw new DenoStdInternalError(msg);\n    }\n}\n//# sourceMappingURL=data:application/json;base64\x2CeyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXNzZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxLQUFLO0lBQzdDLFlBQVksT0FBZTtRQUN6QixLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsSUFBSSxHQUFHLHNCQUFzQixDQUFDO0lBQ3JDLENBQUM7Q0FDRjtBQUdELE1BQU0sVUFBVSxNQUFNLENBQUMsSUFBYSxFQUFFLEdBQUcsR0FBRyxFQUFFO0lBQzVDLElBQUksQ0FBQyxJQUFJLEVBQUU7UUFDVCxNQUFNLElBQUksb0JBQW9CLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDckM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMSB0aGUgRGVubyBhdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBNSVQgbGljZW5zZS5cblxuZXhwb3J0IGNsYXNzIERlbm9TdGRJbnRlcm5hbEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSBcIkRlbm9TdGRJbnRlcm5hbEVycm9yXCI7XG4gIH1cbn1cblxuLyoqIE1ha2UgYW4gYXNzZXJ0aW9uLCBpZiBub3QgYHRydWVgLCB0aGVuIHRocm93LiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydChleHByOiB1bmtub3duLCBtc2cgPSBcIlwiKTogYXNzZXJ0cyBleHByIHtcbiAgaWYgKCFleHByKSB7XG4gICAgdGhyb3cgbmV3IERlbm9TdGRJbnRlcm5hbEVycm9yKG1zZyk7XG4gIH1cbn1cbiJdfQ==
code-source-info,0xb7b083b7792,96,0,1394,C10O0C28O0C48O0C55O42C78O7C83O1394,,
tick,0x556368b7fdf4,98902,0,0x0,3
tick,0x5563691560a0,99492,0,0x0,0,0x5563691560a0,0x5563698af0e9,0xb7b0837be45,0x556369882592
code-creation,LazyCompile,10,100272,0xb7b083ba2a6,26,getText file:///home/raf/dev/AdventOfCode-Deno/src/shared/file-util.ts:7:24,0xb7b08373a94,~
code-source-info,0xb7b083ba2a6,83,418,488,C0O443C4O443C11O460C14O460C20O443C25O488,,
tick,0x55636901ab60,100374,0,0x0,2,0x55636916ccf0,0xb7b083ba2b4,0xb7b08362792,0x556369882592
code-creation,LazyCompile,10,100393,0xb7b083ba352,44,getFullPath file:///home/raf/dev/AdventOfCode-Deno/src/shared/file-util.ts:2:21,0xb7b083739f8,~
code-source-info,0xb7b083ba352,83,79,160,C0O104C3O104C8O109C12O114C17O114C25O139C30O139C38O104C43O160,,
code-creation,LazyCompile,10,100489,0xb7b083ba416,19,cwd deno:runtime/js/30_fs.js:62:15,0xb7b08284998,~
script-source,60,deno:runtime/js/30_fs.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const {\n    Date\x2C\n    MathTrunc\x2C\n    SymbolAsyncIterator\x2C\n    SymbolIterator\x2C\n  } = window.__bootstrap.primordials;\n  const { pathFromURL } = window.__bootstrap.util;\n  const build = window.__bootstrap.build.build;\n\n  function chmodSync(path\x2C mode) {\n    core.opSync("op_chmod_sync"\x2C { path: pathFromURL(path)\x2C mode });\n  }\n\n  async function chmod(path\x2C mode) {\n    await core.opAsync("op_chmod_async"\x2C { path: pathFromURL(path)\x2C mode });\n  }\n\n  function chownSync(\n    path\x2C\n    uid\x2C\n    gid\x2C\n  ) {\n    core.opSync("op_chown_sync"\x2C { path: pathFromURL(path)\x2C uid\x2C gid });\n  }\n\n  async function chown(\n    path\x2C\n    uid\x2C\n    gid\x2C\n  ) {\n    await core.opAsync(\n      "op_chown_async"\x2C\n      { path: pathFromURL(path)\x2C uid\x2C gid }\x2C\n    );\n  }\n\n  function copyFileSync(\n    fromPath\x2C\n    toPath\x2C\n  ) {\n    core.opSync("op_copy_file_sync"\x2C {\n      from: pathFromURL(fromPath)\x2C\n      to: pathFromURL(toPath)\x2C\n    });\n  }\n\n  async function copyFile(\n    fromPath\x2C\n    toPath\x2C\n  ) {\n    await core.opAsync("op_copy_file_async"\x2C {\n      from: pathFromURL(fromPath)\x2C\n      to: pathFromURL(toPath)\x2C\n    });\n  }\n\n  function cwd() {\n    return core.opSync("op_cwd");\n  }\n\n  function chdir(directory) {\n    core.opSync("op_chdir"\x2C pathFromURL(directory));\n  }\n\n  function makeTempDirSync(options = {}) {\n    return core.opSync("op_make_temp_dir_sync"\x2C options);\n  }\n\n  function makeTempDir(options = {}) {\n    return core.opAsync("op_make_temp_dir_async"\x2C options);\n  }\n\n  function makeTempFileSync(options = {}) {\n    return core.opSync("op_make_temp_file_sync"\x2C options);\n  }\n\n  function makeTempFile(options = {}) {\n    return core.opAsync("op_make_temp_file_async"\x2C options);\n  }\n\n  function mkdirArgs(path\x2C options) {\n    const args = { path: pathFromURL(path)\x2C recursive: false };\n    if (options != null) {\n      if (typeof options.recursive == "boolean") {\n        args.recursive = options.recursive;\n      }\n      if (options.mode) {\n        args.mode = options.mode;\n      }\n    }\n    return args;\n  }\n\n  function mkdirSync(path\x2C options) {\n    core.opSync("op_mkdir_sync"\x2C mkdirArgs(path\x2C options));\n  }\n\n  async function mkdir(\n    path\x2C\n    options\x2C\n  ) {\n    await core.opAsync("op_mkdir_async"\x2C mkdirArgs(path\x2C options));\n  }\n\n  function readDirSync(path) {\n    return core.opSync("op_read_dir_sync"\x2C pathFromURL(path))[\n      SymbolIterator\n    ]();\n  }\n\n  function readDir(path) {\n    const array = core.opAsync(\n      "op_read_dir_async"\x2C\n      pathFromURL(path)\x2C\n    );\n    return {\n      async *[SymbolAsyncIterator]() {\n        yield* await array;\n      }\x2C\n    };\n  }\n\n  function readLinkSync(path) {\n    return core.opSync("op_read_link_sync"\x2C pathFromURL(path));\n  }\n\n  function readLink(path) {\n    return core.opAsync("op_read_link_async"\x2C pathFromURL(path));\n  }\n\n  function realPathSync(path) {\n    return core.opSync("op_realpath_sync"\x2C pathFromURL(path));\n  }\n\n  function realPath(path) {\n    return core.opAsync("op_realpath_async"\x2C pathFromURL(path));\n  }\n\n  function removeSync(\n    path\x2C\n    options = {}\x2C\n  ) {\n    core.opSync("op_remove_sync"\x2C {\n      path: pathFromURL(path)\x2C\n      recursive: !!options.recursive\x2C\n    });\n  }\n\n  async function remove(\n    path\x2C\n    options = {}\x2C\n  ) {\n    await core.opAsync("op_remove_async"\x2C {\n      path: pathFromURL(path)\x2C\n      recursive: !!options.recursive\x2C\n    });\n  }\n\n  function renameSync(oldpath\x2C newpath) {\n    core.opSync("op_rename_sync"\x2C {\n      oldpath: pathFromURL(oldpath)\x2C\n      newpath: pathFromURL(newpath)\x2C\n    });\n  }\n\n  async function rename(oldpath\x2C newpath) {\n    await core.opAsync("op_rename_async"\x2C {\n      oldpath: pathFromURL(oldpath)\x2C\n      newpath: pathFromURL(newpath)\x2C\n    });\n  }\n\n  function parseFileInfo(response) {\n    const unix = build.os === "darwin" || build.os === "linux";\n    return {\n      isFile: response.isFile\x2C\n      isDirectory: response.isDirectory\x2C\n      isSymlink: response.isSymlink\x2C\n      size: response.size\x2C\n      mtime: response.mtime != null ? new Date(response.mtime) : null\x2C\n      atime: response.atime != null ? new Date(response.atime) : null\x2C\n      birthtime: response.birthtime != null\n        ? new Date(response.birthtime)\n        : null\x2C\n      // Only non-null if on Unix\n      dev: unix ? response.dev : null\x2C\n      ino: unix ? response.ino : null\x2C\n      mode: unix ? response.mode : null\x2C\n      nlink: unix ? response.nlink : null\x2C\n      uid: unix ? response.uid : null\x2C\n      gid: unix ? response.gid : null\x2C\n      rdev: unix ? response.rdev : null\x2C\n      blksize: unix ? response.blksize : null\x2C\n      blocks: unix ? response.blocks : null\x2C\n    };\n  }\n\n  function fstatSync(rid) {\n    return parseFileInfo(core.opSync("op_fstat_sync"\x2C rid));\n  }\n\n  async function fstat(rid) {\n    return parseFileInfo(await core.opAsync("op_fstat_async"\x2C rid));\n  }\n\n  async function lstat(path) {\n    const res = await core.opAsync("op_stat_async"\x2C {\n      path: pathFromURL(path)\x2C\n      lstat: true\x2C\n    });\n    return parseFileInfo(res);\n  }\n\n  function lstatSync(path) {\n    const res = core.opSync("op_stat_sync"\x2C {\n      path: pathFromURL(path)\x2C\n      lstat: true\x2C\n    });\n    return parseFileInfo(res);\n  }\n\n  async function stat(path) {\n    const res = await core.opAsync("op_stat_async"\x2C {\n      path: pathFromURL(path)\x2C\n      lstat: false\x2C\n    });\n    return parseFileInfo(res);\n  }\n\n  function statSync(path) {\n    const res = core.opSync("op_stat_sync"\x2C {\n      path: pathFromURL(path)\x2C\n      lstat: false\x2C\n    });\n    return parseFileInfo(res);\n  }\n\n  function coerceLen(len) {\n    if (len == null || len < 0) {\n      return 0;\n    }\n\n    return len;\n  }\n\n  function ftruncateSync(rid\x2C len) {\n    core.opSync("op_ftruncate_sync"\x2C { rid\x2C len: coerceLen(len) });\n  }\n\n  async function ftruncate(rid\x2C len) {\n    await core.opAsync("op_ftruncate_async"\x2C { rid\x2C len: coerceLen(len) });\n  }\n\n  function truncateSync(path\x2C len) {\n    core.opSync("op_truncate_sync"\x2C { path\x2C len: coerceLen(len) });\n  }\n\n  async function truncate(path\x2C len) {\n    await core.opAsync("op_truncate_async"\x2C { path\x2C len: coerceLen(len) });\n  }\n\n  function umask(mask) {\n    return core.opSync("op_umask"\x2C mask);\n  }\n\n  function linkSync(oldpath\x2C newpath) {\n    core.opSync("op_link_sync"\x2C { oldpath\x2C newpath });\n  }\n\n  async function link(oldpath\x2C newpath) {\n    await core.opAsync("op_link_async"\x2C { oldpath\x2C newpath });\n  }\n\n  function toUnixTimeFromEpoch(value) {\n    if (value instanceof Date) {\n      const time = value.valueOf();\n      const seconds = MathTrunc(time / 1e3);\n      const nanoseconds = MathTrunc(time - (seconds * 1e3)) * 1e6;\n\n      return [\n        seconds\x2C\n        nanoseconds\x2C\n      ];\n    }\n\n    const seconds = value;\n    const nanoseconds = 0;\n\n    return [\n      seconds\x2C\n      nanoseconds\x2C\n    ];\n  }\n\n  function futimeSync(\n    rid\x2C\n    atime\x2C\n    mtime\x2C\n  ) {\n    core.opSync("op_futime_sync"\x2C {\n      rid\x2C\n      atime: toUnixTimeFromEpoch(atime)\x2C\n      mtime: toUnixTimeFromEpoch(mtime)\x2C\n    });\n  }\n\n  async function futime(\n    rid\x2C\n    atime\x2C\n    mtime\x2C\n  ) {\n    await core.opAsync("op_futime_async"\x2C {\n      rid\x2C\n      atime: toUnixTimeFromEpoch(atime)\x2C\n      mtime: toUnixTimeFromEpoch(mtime)\x2C\n    });\n  }\n\n  function utimeSync(\n    path\x2C\n    atime\x2C\n    mtime\x2C\n  ) {\n    core.opSync("op_utime_sync"\x2C {\n      path: pathFromURL(path)\x2C\n      atime: toUnixTimeFromEpoch(atime)\x2C\n      mtime: toUnixTimeFromEpoch(mtime)\x2C\n    });\n  }\n\n  async function utime(\n    path\x2C\n    atime\x2C\n    mtime\x2C\n  ) {\n    await core.opAsync("op_utime_async"\x2C {\n      path: pathFromURL(path)\x2C\n      atime: toUnixTimeFromEpoch(atime)\x2C\n      mtime: toUnixTimeFromEpoch(mtime)\x2C\n    });\n  }\n\n  function symlinkSync(\n    oldpath\x2C\n    newpath\x2C\n    options\x2C\n  ) {\n    core.opSync("op_symlink_sync"\x2C {\n      oldpath: pathFromURL(oldpath)\x2C\n      newpath: pathFromURL(newpath)\x2C\n      options\x2C\n    });\n  }\n\n  async function symlink(\n    oldpath\x2C\n    newpath\x2C\n    options\x2C\n  ) {\n    await core.opAsync("op_symlink_async"\x2C {\n      oldpath: pathFromURL(oldpath)\x2C\n      newpath: pathFromURL(newpath)\x2C\n      options\x2C\n    });\n  }\n\n  function fdatasyncSync(rid) {\n    core.opSync("op_fdatasync_sync"\x2C rid);\n  }\n\n  async function fdatasync(rid) {\n    await core.opAsync("op_fdatasync_async"\x2C rid);\n  }\n\n  function fsyncSync(rid) {\n    core.opSync("op_fsync_sync"\x2C rid);\n  }\n\n  async function fsync(rid) {\n    await core.opAsync("op_fsync_async"\x2C rid);\n  }\n\n  function flockSync(rid\x2C exclusive) {\n    core.opSync("op_flock_sync"\x2C rid\x2C exclusive === true);\n  }\n\n  async function flock(rid\x2C exclusive) {\n    await core.opAsync("op_flock_async"\x2C rid\x2C exclusive === true);\n  }\n\n  function funlockSync(rid) {\n    core.opSync("op_funlock_sync"\x2C rid);\n  }\n\n  async function funlock(rid) {\n    await core.opAsync("op_funlock_async"\x2C rid);\n  }\n\n  window.__bootstrap.fs = {\n    cwd\x2C\n    chdir\x2C\n    chmodSync\x2C\n    chmod\x2C\n    chown\x2C\n    chownSync\x2C\n    copyFile\x2C\n    copyFileSync\x2C\n    makeTempFile\x2C\n    makeTempDir\x2C\n    makeTempFileSync\x2C\n    makeTempDirSync\x2C\n    mkdir\x2C\n    mkdirSync\x2C\n    readDir\x2C\n    readDirSync\x2C\n    readLinkSync\x2C\n    readLink\x2C\n    realPathSync\x2C\n    realPath\x2C\n    remove\x2C\n    removeSync\x2C\n    renameSync\x2C\n    rename\x2C\n    lstat\x2C\n    lstatSync\x2C\n    stat\x2C\n    statSync\x2C\n    ftruncate\x2C\n    ftruncateSync\x2C\n    truncate\x2C\n    truncateSync\x2C\n    umask\x2C\n    link\x2C\n    linkSync\x2C\n    fstatSync\x2C\n    fstat\x2C\n    futime\x2C\n    futimeSync\x2C\n    utime\x2C\n    utimeSync\x2C\n    symlink\x2C\n    symlinkSync\x2C\n    fdatasync\x2C\n    fdatasyncSync\x2C\n    fsync\x2C\n    fsyncSync\x2C\n    flock\x2C\n    flockSync\x2C\n    funlock\x2C\n    funlockSync\x2C\n  };\n})(this);\n
code-source-info,0xb7b083ba416,60,1255,1297,C0O1264C5O1276C13O1276C18O1293,,
tick,0x7f056c9d293f,101425,0,0x0,3,0x55636916ccf0,0xb7b083ba363,0xb7b083ba2b4,0xb7b08362792,0x556369882592
code-creation,LazyCompile,10,101493,0xb7b083bac0e,59,opSync deno:core/01_core.js:141:18,0xb7b080e5d80,~
script-source,4,deno:core/01_core.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const {\n    Error\x2C\n    RangeError\x2C\n    ReferenceError\x2C\n    SyntaxError\x2C\n    TypeError\x2C\n    URIError\x2C\n    Map\x2C\n    Array\x2C\n    ArrayPrototypeFill\x2C\n    ArrayPrototypeMap\x2C\n    ErrorCaptureStackTrace\x2C\n    Promise\x2C\n    ObjectEntries\x2C\n    ObjectFreeze\x2C\n    ObjectFromEntries\x2C\n    MapPrototypeGet\x2C\n    MapPrototypeDelete\x2C\n    MapPrototypeSet\x2C\n    PromisePrototypeThen\x2C\n    ObjectAssign\x2C\n  } = window.__bootstrap.primordials;\n\n  // Available on start due to bindings.\n  const { opcallSync\x2C opcallAsync } = window.Deno.core;\n\n  let opsCache = {};\n  const errorMap = {};\n  // Builtin v8 / JS errors\n  registerErrorClass("Error"\x2C Error);\n  registerErrorClass("RangeError"\x2C RangeError);\n  registerErrorClass("ReferenceError"\x2C ReferenceError);\n  registerErrorClass("SyntaxError"\x2C SyntaxError);\n  registerErrorClass("TypeError"\x2C TypeError);\n  registerErrorClass("URIError"\x2C URIError);\n\n  let nextPromiseId = 1;\n  const promiseMap = new Map();\n  const RING_SIZE = 4 * 1024;\n  const NO_PROMISE = null; // Alias to null is faster than plain nulls\n  const promiseRing = ArrayPrototypeFill(new Array(RING_SIZE)\x2C NO_PROMISE);\n\n  function setPromise(promiseId) {\n    const idx = promiseId % RING_SIZE;\n    // Move old promise from ring to map\n    const oldPromise = promiseRing[idx];\n    if (oldPromise !== NO_PROMISE) {\n      const oldPromiseId = promiseId - RING_SIZE;\n      MapPrototypeSet(promiseMap\x2C oldPromiseId\x2C oldPromise);\n    }\n    // Set new promise\n    return promiseRing[idx] = newPromise();\n  }\n\n  function getPromise(promiseId) {\n    // Check if out of ring bounds\x2C fallback to map\n    const outOfBounds = promiseId < nextPromiseId - RING_SIZE;\n    if (outOfBounds) {\n      const promise = MapPrototypeGet(promiseMap\x2C promiseId);\n      MapPrototypeDelete(promiseMap\x2C promiseId);\n      return promise;\n    }\n    // Otherwise take from ring\n    const idx = promiseId % RING_SIZE;\n    const promise = promiseRing[idx];\n    promiseRing[idx] = NO_PROMISE;\n    return promise;\n  }\n\n  function newPromise() {\n    let resolve\x2C reject;\n    const promise = new Promise((resolve_\x2C reject_) => {\n      resolve = resolve_;\n      reject = reject_;\n    });\n    promise.resolve = resolve;\n    promise.reject = reject;\n    return promise;\n  }\n\n  function ops() {\n    return opsCache;\n  }\n\n  function syncOpsCache() {\n    // op id 0 is a special value to retrieve the map of registered ops.\n    opsCache = ObjectFreeze(ObjectFromEntries(opcallSync(0)));\n  }\n\n  function opresolve() {\n    for (let i = 0; i < arguments.length; i += 2) {\n      const promiseId = arguments[i];\n      const res = arguments[i + 1];\n      const promise = getPromise(promiseId);\n      promise.resolve(res);\n    }\n  }\n\n  function registerErrorClass(className\x2C errorClass) {\n    registerErrorBuilder(className\x2C (msg) => new errorClass(msg));\n  }\n\n  function registerErrorBuilder(className\x2C errorBuilder) {\n    if (typeof errorMap[className] !== "undefined") {\n      throw new TypeError(`Error class for "${className}" already registered`);\n    }\n    errorMap[className] = errorBuilder;\n  }\n\n  function unwrapOpResult(res) {\n    // .$err_class_name is a special key that should only exist on errors\n    if (res?.$err_class_name) {\n      const className = res.$err_class_name;\n      const errorBuilder = errorMap[className];\n      const err = errorBuilder ? errorBuilder(res.message) : new Error(\n        `Unregistered error class: "${className}"\\n  ${res.message}\\n  Classes of errors returned from ops should be registered via Deno.core.registerErrorClass().`\x2C\n      );\n      // Set .code if error was a known OS error\x2C see error_codes.rs\n      if (res.code) {\n        err.code = res.code;\n      }\n      // Strip unwrapOpResult() and errorBuilder() calls from stack trace\n      ErrorCaptureStackTrace(err\x2C unwrapOpResult);\n      throw err;\n    }\n    return res;\n  }\n\n  function opAsync(opName\x2C arg1 = null\x2C arg2 = null) {\n    const promiseId = nextPromiseId++;\n    const maybeError = opcallAsync(opsCache[opName]\x2C promiseId\x2C arg1\x2C arg2);\n    // Handle sync error (e.g: error parsing args)\n    if (maybeError) return unwrapOpResult(maybeError);\n    return PromisePrototypeThen(setPromise(promiseId)\x2C unwrapOpResult);\n  }\n\n  function opSync(opName\x2C arg1 = null\x2C arg2 = null) {\n    return unwrapOpResult(opcallSync(opsCache[opName]\x2C arg1\x2C arg2));\n  }\n\n  function resources() {\n    return ObjectFromEntries(opSync("op_resources"));\n  }\n\n  function read(rid\x2C buf) {\n    return opAsync("op_read"\x2C rid\x2C buf);\n  }\n\n  function write(rid\x2C buf) {\n    return opAsync("op_write"\x2C rid\x2C buf);\n  }\n\n  function shutdown(rid) {\n    return opAsync("op_shutdown"\x2C rid);\n  }\n\n  function close(rid) {\n    opSync("op_close"\x2C rid);\n  }\n\n  function tryClose(rid) {\n    opSync("op_try_close"\x2C rid);\n  }\n\n  function print(str\x2C isErr = false) {\n    opSync("op_print"\x2C str\x2C isErr);\n  }\n\n  function metrics() {\n    const [aggregate\x2C perOps] = opSync("op_metrics");\n    aggregate.ops = ObjectFromEntries(ArrayPrototypeMap(\n      ObjectEntries(opsCache)\x2C\n      ([opName\x2C opId]) => [opName\x2C perOps[opId]]\x2C\n    ));\n    return aggregate;\n  }\n\n  // Some "extensions" rely on "BadResource" and "Interrupted" errors in the\n  // JS code (eg. "deno_net") so they are provided in "Deno.core" but later\n  // reexported on "Deno.errors"\n  class BadResource extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "BadResource";\n    }\n  }\n\n  class Interrupted extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "Interrupted";\n    }\n  }\n\n  // Extra Deno.core.* exports\n  const core = ObjectAssign(globalThis.Deno.core\x2C {\n    opAsync\x2C\n    opSync\x2C\n    ops\x2C\n    close\x2C\n    tryClose\x2C\n    read\x2C\n    write\x2C\n    shutdown\x2C\n    print\x2C\n    resources\x2C\n    metrics\x2C\n    registerErrorBuilder\x2C\n    registerErrorClass\x2C\n    opresolve\x2C\n    syncOpsCache\x2C\n    BadResource\x2C\n    Interrupted\x2C\n  });\n\n  ObjectAssign(globalThis.__bootstrap\x2C { core });\n  ObjectAssign(globalThis.Deno\x2C { core });\n})(globalThis);\n
code-source-info,0xb7b083bac0e,4,4294,4403,C23O4335C28O4357C33O4368C38O4376C48O4357C54O4342C58O4399,,
tick,0x55636a0cd9f0,102733,1,0x55636a6330f0,6,0x556368c1e490,0xb7b083bac3e,0xb7b083ba423,0xb7b083ba363,0xb7b083ba2b4,0xb7b08362792,0x556369882592
tick,0x556369ff00d2,103584,1,0x55636a6330f0,6,0x556368c1e490,0xb7b083bac3e,0xb7b083ba423,0xb7b083ba363,0xb7b083ba2b4,0xb7b08362792,0x556369882592
code-creation,LazyCompile,10,103736,0xb7b083bb1f2,122,unwrapOpResult deno:core/01_core.js:114:26,0xb7b080e5d18,~
code-source-info,0xb7b083bb1f2,4,3172,3921,C0O3258C7O3265C16O3314C21O3358C28O3366C32O3397C34O3429C39O3412C47O3444C55O3489C66O3510C83O3440C89O3709C95O3740C99O3734C103O3834C111O3834C116O3885C118O3885C119O3906C121O3917,,
code-creation,LazyCompile,10,103882,0xb7b083bb336,111,join https://deno.land/std@0.116.0/path/posix.ts:57:21,0xb7b083a7350,~
code-source-info,0xb7b083bb336,89,1960,2376,C0O1960C3O1987C9O1994C14O2009C16O2020C17O2029C19O2054C21O2069C26O2079C28O2079C33O2114C35O2119C39O2132C45O2132C49O2167C55O2174C60O2193C64O2222C71O2270C76O2284C87O2088C92O2041C95O2312C99O2333C101O2344C102O2349C106O2356C110O2374,,
code-creation,LazyCompile,10,103971,0xb7b083bb49a,42,assertPath https://deno.land/std@0.116.0/path/_util.ts:2:27,0xb7b083b6c38,~
code-source-info,0xb7b083bb49a,95,184,324,C0O197C6O237C13O292C17O297C22O297C34O243C39O237C41O323,,
code-creation,LazyCompile,10,104065,0xb7b083bb56a,164,normalize https://deno.land/std@0.116.0/path/posix.ts:38:26,0xb7b083a72e8,~
code-source-info,0xb7b083bb56a,89,1308,1807,C0O1321C6O1321C10O1352C16O1359C21O1374C23O1385C24O1414C31O1414C37O1432C42O1428C46O1487C51O1503C55O1510C59O1487C65O1519C70O1515C74O1543C82O1573C87O1590C96O1550C103O1626C109O1633C116O1643C118O1663C122O1688C128O1695C135O1702C137O1729C147O1746C151O1770C156O1781C160O1788C161O1793C163O1805,,
code-creation,LazyCompile,10,104263,0xb7b083bb712,451,normalizeString https://deno.land/std@0.116.0/path/_util.ts:17:32,0xb7b083b6d08,~
code-source-info,0xb7b083bb
code-creation,LazyCompile,10,104412,0xb7b083bba5e,9,isPosixPathSeparator https://deno.land/std@0.116.0/path/_util.ts:7:37,0xb7b083b6c6c,~
code-source-info,0xb7b083bba5e,95,361,411,C0O390C5O386C8O409,,
tick,0x556369931200,105297,0,0x0,0,0xb7b083bb5ca,0xb7b083bb3a0,0xb7b083ba378,0xb7b083ba2b4,0xb7b08362792,0x556369882592
new,MemoryChunk,0xb7b00040000,262144
tick,0x556368b829b0,105691,0,0x0,0,0x55636913a120,0xb7b083bb8cc,0xb7b083bb5ca,0xb7b083bb3a0,0xb7b083ba378,0xb7b083ba2b4,0xb7b08362792,0x556369882592
code-creation,Function,11,105717,0xb7b00044040,3084,normalizeString https://deno.land/std@0.116.0/path/_util.ts:17:32,0xb7b083b6d08,^
code-source-info,0xb7b00044040,95,737,3174,,,
code-creation,Function,11,105795,0xb7b00044cc0,1628,wrapConsole deno:ext/console/02_console.js:2107:23,0xb7b0816262c,^
code-source-info,0xb7b00044cc0,8,62269,62657,,,
code-creation,Function,11,105833,0xb7b00045380,240,registerErrorClass deno:core/01_core.js:103:30,0xb7b080e5b60,^
code-source-info,0xb7b00045380,4,2805,2901,,,
code-creation,Function,11,105870,0xb7b000454c0,524,registerErrorBuilder deno:core/01_core.js:107:32,0xb7b080e5c44,^
code-source-info,0xb7b000454c0,4,2934,3145,,,
code-creation,Function,11,105900,0xb7b00045740,144,isPosixPathSeparator https://deno.land/std@0.116.0/path/_util.ts:7:37,0xb7b083b6c6c,^
code-source-info,0xb7b00045740,95,361,411,,,
code-creation,LazyCompile,10,106025,0xb7b083bbd2a,24,readTextFileSync deno:runtime/js/40_read_file.js:38:28,0xb7b0828aa2c,~
script-source,69,deno:runtime/js/40_read_file.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const { open\x2C openSync } = window.__bootstrap.files;\n  const { readAllSync\x2C readAll\x2C readAllSyncSized\x2C readAllInnerSized } =\n    window.__bootstrap.io;\n\n  function readFileSync(path) {\n    const file = openSync(path);\n    try {\n      const { size } = file.statSync();\n      if (size === 0) {\n        return readAllSync(file);\n      } else {\n        return readAllSyncSized(file\x2C size);\n      }\n    } finally {\n      file.close();\n    }\n  }\n\n  async function readFile(path\x2C options) {\n    const file = await open(path);\n    try {\n      const { size } = await file.stat();\n      if (size === 0) {\n        return await readAll(file);\n      } else {\n        return await readAllInnerSized(file\x2C size\x2C options);\n      }\n    } finally {\n      file.close();\n    }\n  }\n\n  function readTextFileSync(path) {\n    return core.decode(readFileSync(path));\n  }\n\n  async function readTextFile(path\x2C options) {\n    return core.decode(await readFile(path\x2C options));\n  }\n\n  window.__bootstrap.readFile = {\n    readFile\x2C\n    readFileSync\x2C\n    readTextFileSync\x2C\n    readTextFile\x2C\n  };\n})(this);\n
code-source-info,0xb7b083bbd2a,69,929,985,C0O942C5O954C13O961C18O954C23O981,,
code-creation,LazyCompile,10,106248,0xb7b083bbed2,99,readFileSync deno:runtime/js/40_read_file.js:10:24,0xb7b0828a958,~
code-source-info,0xb7b083bbed2,69,316,579,C0O342C5O342C13O396C18O396C23O382C28O414C29O423C34O440C39O447C49O489C54O496C70O556C71O561C76O561C98O578,,
code-creation,LazyCompile,10,106395,0xb7b083bc032,101,openSync deno:runtime/js/40_files.js:31:20,0xb7b08287f80,~
script-source,65,deno:runtime/js/40_files.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const { read\x2C readSync\x2C write\x2C writeSync } = window.__bootstrap.io;\n  const { ftruncate\x2C ftruncateSync\x2C fstat\x2C fstatSync } = window.__bootstrap.fs;\n  const { pathFromURL } = window.__bootstrap.util;\n  const {\n    Error\x2C\n    ObjectValues\x2C\n    ArrayPrototypeFilter\x2C\n  } = window.__bootstrap.primordials;\n\n  function seekSync(\n    rid\x2C\n    offset\x2C\n    whence\x2C\n  ) {\n    return core.opSync("op_seek_sync"\x2C { rid\x2C offset\x2C whence });\n  }\n\n  function seek(\n    rid\x2C\n    offset\x2C\n    whence\x2C\n  ) {\n    return core.opAsync("op_seek_async"\x2C { rid\x2C offset\x2C whence });\n  }\n\n  function openSync(\n    path\x2C\n    options = { read: true }\x2C\n  ) {\n    checkOpenOptions(options);\n    const mode = options?.mode;\n    const rid = core.opSync(\n      "op_open_sync"\x2C\n      { path: pathFromURL(path)\x2C options\x2C mode }\x2C\n    );\n\n    return new File(rid);\n  }\n\n  async function open(\n    path\x2C\n    options = { read: true }\x2C\n  ) {\n    checkOpenOptions(options);\n    const mode = options?.mode;\n    const rid = await core.opAsync(\n      "op_open_async"\x2C\n      { path: pathFromURL(path)\x2C options\x2C mode }\x2C\n    );\n\n    return new File(rid);\n  }\n\n  function createSync(path) {\n    return openSync(path\x2C {\n      read: true\x2C\n      write: true\x2C\n      truncate: true\x2C\n      create: true\x2C\n    });\n  }\n\n  function create(path) {\n    return open(path\x2C {\n      read: true\x2C\n      write: true\x2C\n      truncate: true\x2C\n      create: true\x2C\n    });\n  }\n\n  class File {\n    #rid = 0;\n\n    constructor(rid) {\n      this.#rid = rid;\n    }\n\n    get rid() {\n      return this.#rid;\n    }\n\n    write(p) {\n      return write(this.rid\x2C p);\n    }\n\n    writeSync(p) {\n      return writeSync(this.rid\x2C p);\n    }\n\n    truncate(len) {\n      return ftruncate(this.rid\x2C len);\n    }\n\n    truncateSync(len) {\n      return ftruncateSync(this.rid\x2C len);\n    }\n\n    read(p) {\n      return read(this.rid\x2C p);\n    }\n\n    readSync(p) {\n      return readSync(this.rid\x2C p);\n    }\n\n    seek(offset\x2C whence) {\n      return seek(this.rid\x2C offset\x2C whence);\n    }\n\n    seekSync(offset\x2C whence) {\n      return seekSync(this.rid\x2C offset\x2C whence);\n    }\n\n    stat() {\n      return fstat(this.rid);\n    }\n\n    statSync() {\n      return fstatSync(this.rid);\n    }\n\n    close() {\n      core.close(this.rid);\n    }\n  }\n\n  class Stdin {\n    constructor() {\n    }\n\n    get rid() {\n      return 0;\n    }\n\n    read(p) {\n      return read(this.rid\x2C p);\n    }\n\n    readSync(p) {\n      return readSync(this.rid\x2C p);\n    }\n\n    close() {\n      core.close(this.rid);\n    }\n  }\n\n  class Stdout {\n    constructor() {\n    }\n\n    get rid() {\n      return 1;\n    }\n\n    write(p) {\n      return write(this.rid\x2C p);\n    }\n\n    writeSync(p) {\n      return writeSync(this.rid\x2C p);\n    }\n\n    close() {\n      core.close(this.rid);\n    }\n  }\n\n  class Stderr {\n    constructor() {\n    }\n\n    get rid() {\n      return 2;\n    }\n\n    write(p) {\n      return write(this.rid\x2C p);\n    }\n\n    writeSync(p) {\n      return writeSync(this.rid\x2C p);\n    }\n\n    close() {\n      core.close(this.rid);\n    }\n  }\n\n  const stdin = new Stdin();\n  const stdout = new Stdout();\n  const stderr = new Stderr();\n\n  function checkOpenOptions(options) {\n    if (\n      ArrayPrototypeFilter(\n        ObjectValues(options)\x2C\n        (val) => val === true\x2C\n      ).length === 0\n    ) {\n      throw new Error("OpenOptions requires at least one option to be true");\n    }\n\n    if (options.truncate && !options.write) {\n      throw new Error("'truncate' option requires 'write' option");\n    }\n\n    const createOrCreateNewWithoutWriteOrAppend =\n      (options.create || options.createNew) &&\n      !(options.write || options.append);\n\n    if (createOrCreateNewWithoutWriteOrAppend) {\n      throw new Error(\n        "'create' or 'createNew' options require 'write' or 'append' option"\x2C\n      );\n    }\n  }\n\n  window.__bootstrap.files = {\n    stdin\x2C\n    stdout\x2C\n    stderr\x2C\n    File\x2C\n    create\x2C\n    createSync\x2C\n    open\x2C\n    openSync\x2C\n    seek\x2C\n    seekSync\x2C\n  };\n})(this);\n
code-source-info,0xb7b083bc032,65,720,969,C7O720C16O772C19O772C23O816C30O823C38O847C43O852C58O896C61O896C71O915C77O924C81O852C88O944C95O951C100O965,,
tick,0x7f056c9d293f,106838,0,0x0,3,0x55636916ccf0,0xb7b083bbed7,0xb7b083bbd37,0xb7b083ba2ba,0xb7b08362792,0x556369882592
code-creation,LazyCompile,10,106919,0xb7b083bc672,125,checkOpenOptions deno:runtime/js/40_files.js:200:28,0xb7b082887b8,~
code-source-info,0xb7b083bc672,65,3248,3902,C0O3264C7O3305C10O3305C20O3275C26O3366C32O3374C37O3394C47O3400C52O3394C53O3489C59O3510C65O3525C75O3531C80O3525C81O3659C87O3677C93O3707C99O3724C105O3738C107O3789C117O3795C122O3789C124O3901,,
code-creation,LazyCompile,10,106995,0xb7b083bc7ae,5, deno:runtime/js/40_files.js:204:9,0xb7b083bc5e0,~
code-source-info,0xb7b083bc7ae,65,3336,3357,C0O3349C1O3349C4O3357,,
code-creation,LazyCompile,10,107075,0xb7b083bc896,74,pathFromURL deno:runtime/js/06_util.js:95:23,0xb7b081f61f4,~
code-source-info,0xb7b083bc896,55,2301,2598,C0O2319C2O2344C4O2333C9O2371C16O2380C21O2402C31O2408C36O2402C37O2461C42O2474C49O2477C57O2500C66O2538C70O2566C71O2577C73O2594,,
tick,0x55636a0281a0,108207,1,0x55636a6330f0,6,0x556368c1e490,0xb7b083bac3e,0xb7b083bc083,0xb7b083bbed7,0xb7b083bbd37,0xb7b083ba2ba,0xb7b08362792,0x556369882592
code-creation,LazyCompile,10,108304,0xb7b083bc97e,25,File deno:runtime/js/40_files.js:80:16,0xb7b08288050,~
code-source-info,0xb7b083bc97e,65,1588,1624,C0O1588C14O1602C19O1612C24O1623,,
code-creation,LazyCompile,10,108413,0xb7b083bca16,17,statSync deno:runtime/js/40_files.js:124:13,0xb7b082882bc,~
code-source-info,0xb7b083bca16,65,2273,2317,C0O2284C7O2306C12O2291C16O2311,,
code-creation,LazyCompile,10,108461,0xb7b083bcaaa,6,get rid deno:runtime/js/40_files.js:84:12,0xb7b082880a0,~
code-source-info,0xb7b083bcaaa,65,1637,1671,C0O1648C2O1660C5O1665,,
code-creation,LazyCompile,10,108513,0xb7b083bcb32,28,fstatSync deno:runtime/js/30_fs.js:203:21,0xb7b08284dc4,~
code-source-info,0xb7b083bcb32,60,4744,4816,C0O4756C5O4777C8O4782C16O4782C23O4763C27O4812,,
tick,0x55636a075d30,108902,1,0x55636a6330f0,6,0x556368c1e490,0xb7b083bac3e,0xb7b083bcb42,0xb7b083bca22,0xb7b083bbee4,0xb7b083bbd37,0xb7b083ba2ba,0xb7b08362792,0x556369882592
code-creation,LazyCompile,10,109041,0xb7b083bcde6,301,parseFileInfo deno:runtime/js/30_fs.js:178:25,0xb7b08284d90,~
code-source-info,0xb7b083bcde6,60,3838,4722,C0O3868C5O3874C12O3877C19O3893C22O3899C29O3902C33O3919C38O3951C46O3987C54O4026C62O4058C70O4086C79O4106C82O4120C89O4102C101O4157C110O4177C113O4191C120O4173C132O4232C141O4264C144O4278C151O4260C165O4350C167O4366C180O4389C182O4405C195O4429C197O4445C210O4471C212O4487C225O4512C227O4528C240O4551C242O4567C255O4591C257O4607C270O4635C272O4651C285O4681C287O4697C300O4718,,
code-creation,LazyCompile,10,109266,0xb7b083bd07a,152,readAllSyncSized deno:runtime/js/12_io.js:175:28,0xb7b081fbfa0,~
script-source,58,deno:runtime/js/12_io.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n\n// Interfaces 100% copied from Go.\n// Documentation liberally lifted from them too.\n// Thank you! We love Go! <3\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const { DOMException } = window.__bootstrap.domException;\n  const {\n    Uint8Array\x2C\n    ArrayPrototypePush\x2C\n    MathMin\x2C\n    TypedArrayPrototypeSubarray\x2C\n    TypedArrayPrototypeSet\x2C\n  } = window.__bootstrap.primordials;\n\n  const DEFAULT_BUFFER_SIZE = 32 * 1024;\n  // Seek whence values.\n  // https://golang.org/pkg/io/#pkg-constants\n  const SeekMode = {\n    0: "Start"\x2C\n    1: "Current"\x2C\n    2: "End"\x2C\n\n    Start: 0\x2C\n    Current: 1\x2C\n    End: 2\x2C\n  };\n\n  async function copy(\n    src\x2C\n    dst\x2C\n    options\x2C\n  ) {\n    let n = 0;\n    const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n    const b = new Uint8Array(bufSize);\n    let gotEOF = false;\n    while (gotEOF === false) {\n      const result = await src.read(b);\n      if (result === null) {\n        gotEOF = true;\n      } else {\n        let nwritten = 0;\n        while (nwritten < result) {\n          nwritten += await dst.write(\n            TypedArrayPrototypeSubarray(b\x2C nwritten\x2C result)\x2C\n          );\n        }\n        n += nwritten;\n      }\n    }\n    return n;\n  }\n\n  async function* iter(\n    r\x2C\n    options\x2C\n  ) {\n    const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n    const b = new Uint8Array(bufSize);\n    while (true) {\n      const result = await r.read(b);\n      if (result === null) {\n        break;\n      }\n\n      yield TypedArrayPrototypeSubarray(b\x2C 0\x2C result);\n    }\n  }\n\n  function* iterSync(\n    r\x2C\n    options\x2C\n  ) {\n    const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n    const b = new Uint8Array(bufSize);\n    while (true) {\n      const result = r.readSync(b);\n      if (result === null) {\n        break;\n      }\n\n      yield TypedArrayPrototypeSubarray(b\x2C 0\x2C result);\n    }\n  }\n\n  function readSync(rid\x2C buffer) {\n    if (buffer.length === 0) {\n      return 0;\n    }\n\n    const nread = core.opSync("op_read_sync"\x2C rid\x2C buffer);\n\n    return nread === 0 ? null : nread;\n  }\n\n  async function read(rid\x2C buffer) {\n    if (buffer.length === 0) {\n      return 0;\n    }\n\n    const nread = await core.read(rid\x2C buffer);\n\n    return nread === 0 ? null : nread;\n  }\n\n  function writeSync(rid\x2C data) {\n    return core.opSync("op_write_sync"\x2C rid\x2C data);\n  }\n\n  function write(rid\x2C data) {\n    return core.write(rid\x2C data);\n  }\n\n  const READ_PER_ITER = 16 * 1024; // 16kb\x2C see https://github.com/denoland/deno/issues/10157\n\n  function readAll(r) {\n    return readAllInner(r);\n  }\n  async function readAllInner(r\x2C options) {\n    const buffers = [];\n    const signal = options?.signal ?? null;\n    while (!signal?.aborted) {\n      const buf = new Uint8Array(READ_PER_ITER);\n      const read = await r.read(buf);\n      if (typeof read == "number") {\n        ArrayPrototypePush(buffers\x2C new Uint8Array(buf.buffer\x2C 0\x2C read));\n      } else {\n        break;\n      }\n    }\n    if (signal?.aborted) {\n      throw new DOMException("The read operation was aborted."\x2C "AbortError");\n    }\n\n    return concatBuffers(buffers);\n  }\n\n  function readAllSync(r) {\n    const buffers = [];\n\n    while (true) {\n      const buf = new Uint8Array(READ_PER_ITER);\n      const read = r.readSync(buf);\n      if (typeof read == "number") {\n        ArrayPrototypePush(buffers\x2C buf.subarray(0\x2C read));\n      } else {\n        break;\n      }\n    }\n\n    return concatBuffers(buffers);\n  }\n\n  function concatBuffers(buffers) {\n    let totalLen = 0;\n    for (const buf of buffers) {\n      totalLen += buf.byteLength;\n    }\n\n    const contents = new Uint8Array(totalLen);\n\n    let n = 0;\n    for (const buf of buffers) {\n      TypedArrayPrototypeSet(contents\x2C buf\x2C n);\n      n += buf.byteLength;\n    }\n\n    return contents;\n  }\n\n  function readAllSyncSized(r\x2C size) {\n    const buf = new Uint8Array(size + 1); // 1B to detect extended files\n    let cursor = 0;\n\n    while (cursor < size) {\n      const sliceEnd = MathMin(size + 1\x2C cursor + READ_PER_ITER);\n      const slice = buf.subarray(cursor\x2C sliceEnd);\n      const read = r.readSync(slice);\n      if (typeof read == "number") {\n        cursor += read;\n      } else {\n        break;\n      }\n    }\n\n    // Handle truncated or extended files during read\n    if (cursor > size) {\n      // Read remaining and concat\n      return concatBuffers([buf\x2C readAllSync(r)]);\n    } else { // cursor == size\n      return buf.subarray(0\x2C cursor);\n    }\n  }\n\n  async function readAllInnerSized(r\x2C size\x2C options) {\n    const buf = new Uint8Array(size + 1); // 1B to detect extended files\n    let cursor = 0;\n    const signal = options?.signal ?? null;\n    while (!signal?.aborted && cursor < size) {\n      const sliceEnd = MathMin(size + 1\x2C cursor + READ_PER_ITER);\n      const slice = buf.subarray(cursor\x2C sliceEnd);\n      const read = await r.read(slice);\n      if (typeof read == "number") {\n        cursor += read;\n      } else {\n        break;\n      }\n    }\n    if (signal?.aborted) {\n      throw new DOMException("The read operation was aborted."\x2C "AbortError");\n    }\n\n    // Handle truncated or extended files during read\n    if (cursor > size) {\n      // Read remaining and concat\n      return concatBuffers([buf\x2C await readAllInner(r\x2C options)]);\n    } else {\n      return buf.subarray(0\x2C cursor);\n    }\n  }\n\n  window.__bootstrap.io = {\n    iterSync\x2C\n    iter\x2C\n    copy\x2C\n    SeekMode\x2C\n    read\x2C\n    readSync\x2C\n    write\x2C\n    writeSync\x2C\n    readAll\x2C\n    readAllInner\x2C\n    readAllSync\x2C\n    readAllSyncSized\x2C\n    readAllInnerSized\x2C\n  };\n})(this);\n
code-source-info,0xb7b083bd07a,58,3861,4500,C0O3889C7O3909C13O3889C19O3963C21O3985C23O3985C28O4018C35O4031C41O4045C43O4043C47O4018C53O4085C58O4085C65O4134C70O4134C76O4157C80O4196C82O4206C91O4235C93O3971C96O4315C98O4326C103O4377C115O4399C125O4404C133O4384C137O4421C138O4470C145O4470C151O4490,,
tick,0x55636905f039,109970,0,0x0,2,0x55636916ccf0,0xb7b083bd0c0,0xb7b083bbf08,0xb7b083bbd37,0xb7b083ba2ba,0xb7b08362792,0x556369882592
code-creation,LazyCompile,10,110005,0xb7b083bd5b2,18,readSync deno:runtime/js/40_files.js:108:13,0xb7b082881ec,~
code-source-info,0xb7b083bd5b2,65,1996,2043,C0O2008C7O2029C12O2015C17O2037,,
code-creation,LazyCompile,10,110083,0xb7b083bd65e,50,readSync deno:runtime/js/12_io.js:90:20,0xb7b081fbe00,~
code-source-info,0xb7b083bd65e,58,1951,2124,C0O1982C6O1989C11O2004C12O2013C13O2039C18O2044C32O2044C38O2086C39O2099C49O2120,,
code-creation,LazyCompile,10,110583,0xb7b083bd722,24,close deno:runtime/js/40_files.js:128:10,0xb7b082882f0,~
code-source-info,0xb7b083bd722,65,2328,2366,C0O2339C7O2344C12O2355C17O2344C23O2365,,
code-creation,LazyCompile,10,110646,0xb7b083bd7ba,13,close deno:core/01_core.js:161:17,0xb7b080e5e84,~
code-source-info,0xb7b083bd7ba,4,4727,4767,C0O4739C6O4739C12O4766,,
tick,0x7f056cc0579c,111044,1,0x55636a6330f0,6,0x556368c1e490,0xb7b083bac3e,0xb7b083bd67e,0xb7b083bd5be,0xb7b083bd0c0,0xb7b083bbf08,0xb7b083bbd37,0xb7b083ba2ba,0xb7b083627a4,0x556369882592
code-creation,LazyCompile,10,111220,0xb7b083bd9e2,219,test deno:runtime/js/40_testing.js:256:16,0xb7b08290ef0,~
script-source,71,deno:runtime/js/40_testing.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const { setExitHandler } = window.__bootstrap.os;\n  const { Console\x2C inspectArgs } = window.__bootstrap.console;\n  const { metrics } = core;\n  const { serializePermissions } = window.__bootstrap.permissions;\n  const { assert } = window.__bootstrap.util;\n  const {\n    AggregateError\x2C\n    ArrayPrototypeFilter\x2C\n    ArrayPrototypePush\x2C\n    ArrayPrototypeSome\x2C\n    DateNow\x2C\n    Error\x2C\n    Function\x2C\n    JSONStringify\x2C\n    Promise\x2C\n    TypeError\x2C\n    StringPrototypeStartsWith\x2C\n    StringPrototypeEndsWith\x2C\n    StringPrototypeIncludes\x2C\n    StringPrototypeSlice\x2C\n    RegExp\x2C\n    Number\x2C\n    RegExpPrototypeTest\x2C\n    SymbolToStringTag\x2C\n  } = window.__bootstrap.primordials;\n  let testStepsEnabled = false;\n\n  // Wrap test function in additional assertion that makes sure\n  // the test case does not leak async "ops" - ie. number of async\n  // completed ops after the test is the same as number of dispatched\n  // ops. Note that "unref" ops are ignored since in nature that are\n  // optional.\n  function assertOps(fn) {\n    /** @param step {TestStep} */\n    return async function asyncOpSanitizer(step) {\n      const pre = metrics();\n      try {\n        await fn(step);\n      } finally {\n        // Defer until next event loop turn - that way timeouts and intervals\n        // cleared can actually be removed from resource table\x2C otherwise\n        // false positives may occur (https://github.com/denoland/deno/issues/4591)\n        await new Promise((resolve) => setTimeout(resolve\x2C 0));\n      }\n\n      if (step.shouldSkipSanitizers) {\n        return;\n      }\n\n      const post = metrics();\n\n      // We're checking diff because one might spawn HTTP server in the background\n      // that will be a pending async op before test starts.\n      const dispatchedDiff = post.opsDispatchedAsync - pre.opsDispatchedAsync;\n      const completedDiff = post.opsCompletedAsync - pre.opsCompletedAsync;\n\n      const details = [];\n      for (const key in post.ops) {\n        const dispatchedDiff = Number(\n          post.ops[key]?.opsDispatchedAsync -\n            (pre.ops[key]?.opsDispatchedAsync ?? 0)\x2C\n        );\n        const completedDiff = Number(\n          post.ops[key]?.opsCompletedAsync -\n            (pre.ops[key]?.opsCompletedAsync ?? 0)\x2C\n        );\n\n        if (dispatchedDiff !== completedDiff) {\n          details.push(`\n  ${key}:\n    Before:\n      - dispatched: ${pre.ops[key]?.opsDispatchedAsync ?? 0}\n      - completed: ${pre.ops[key]?.opsCompletedAsync ?? 0}\n    After:\n      - dispatched: ${post.ops[key].opsDispatchedAsync}\n      - completed: ${post.ops[key].opsCompletedAsync}`);\n        }\n      }\n\n      const message = `Test case is leaking async ops.\nBefore:\n  - dispatched: ${pre.opsDispatchedAsync}\n  - completed: ${pre.opsCompletedAsync}\nAfter:\n  - dispatched: ${post.opsDispatchedAsync}\n  - completed: ${post.opsCompletedAsync}\n${details.length > 0 ? "Ops:" + details.join("") : ""}\n\nMake sure to await all promises returned from Deno APIs before\nfinishing test case.`;\n\n      assert(\n        dispatchedDiff === completedDiff\x2C\n        message\x2C\n      );\n    };\n  }\n\n  // Wrap test function in additional assertion that makes sure\n  // the test case does not "leak" resources - ie. resource table after\n  // the test has exactly the same contents as before the test.\n  function assertResources(\n    fn\x2C\n  ) {\n    /** @param step {TestStep} */\n    return async function resourceSanitizer(step) {\n      const pre = core.resources();\n      await fn(step);\n\n      if (step.shouldSkipSanitizers) {\n        return;\n      }\n\n      const post = core.resources();\n\n      const preStr = JSONStringify(pre\x2C null\x2C 2);\n      const postStr = JSONStringify(post\x2C null\x2C 2);\n      const msg = `Test case is leaking resources.\nBefore: ${preStr}\nAfter: ${postStr}\n\nMake sure to close all open resource handles returned from Deno APIs before\nfinishing test case.`;\n      assert(preStr === postStr\x2C msg);\n    };\n  }\n\n  // Wrap test function in additional assertion that makes sure\n  // that the test case does not accidentally exit prematurely.\n  function assertExit(fn) {\n    return async function exitSanitizer(...params) {\n      setExitHandler((exitCode) => {\n        assert(\n          false\x2C\n          `Test case attempted to exit with exit code: ${exitCode}`\x2C\n        );\n      });\n\n      try {\n        await fn(...params);\n      } catch (err) {\n        throw err;\n      } finally {\n        setExitHandler(null);\n      }\n    };\n  }\n\n  function assertTestStepScopes(fn) {\n    /** @param step {TestStep} */\n    return async function testStepSanitizer(step) {\n      preValidation();\n      // only report waiting after pre-validation\n      if (step.canStreamReporting()) {\n        step.reportWait();\n      }\n      await fn(createTestContext(step));\n      postValidation();\n\n      function preValidation() {\n        const runningSteps = getPotentialConflictingRunningSteps();\n        const runningStepsWithSanitizers = ArrayPrototypeFilter(\n          runningSteps\x2C\n          (t) => t.usesSanitizer\x2C\n        );\n\n        if (runningStepsWithSanitizers.length > 0) {\n          throw new Error(\n            "Cannot start test step while another test step with sanitizers is running.\\n" +\n              runningStepsWithSanitizers\n                .map((s) => ` * ${s.getFullName()}`)\n                .join("\\n")\x2C\n          );\n        }\n\n        if (step.usesSanitizer && runningSteps.length > 0) {\n          throw new Error(\n            "Cannot start test step with sanitizers while another test step is running.\\n" +\n              runningSteps.map((s) => ` * ${s.getFullName()}`).join("\\n")\x2C\n          );\n        }\n\n        function getPotentialConflictingRunningSteps() {\n          /** @type {TestStep[]} */\n          const results = [];\n\n          let childStep = step;\n          for (const ancestor of step.ancestors()) {\n            for (const siblingStep of ancestor.children) {\n              if (siblingStep === childStep) {\n                continue;\n              }\n              if (!siblingStep.finalized) {\n                ArrayPrototypePush(results\x2C siblingStep);\n              }\n            }\n            childStep = ancestor;\n          }\n          return results;\n        }\n      }\n\n      function postValidation() {\n        // check for any running steps\n        if (step.hasRunningChildren) {\n          throw new Error(\n            "There were still test steps running after the current scope finished execution. " +\n              "Ensure all steps are awaited (ex. `await t.step(...)`)."\x2C\n          );\n        }\n\n        // check if an ancestor already completed\n        for (const ancestor of step.ancestors()) {\n          if (ancestor.finalized) {\n            throw new Error(\n              "Parent scope completed before test step finished execution. " +\n                "Ensure all steps are awaited (ex. `await t.step(...)`)."\x2C\n            );\n          }\n        }\n      }\n    };\n  }\n\n  function withPermissions(fn\x2C permissions) {\n    function pledgePermissions(permissions) {\n      return core.opSync(\n        "op_pledge_test_permissions"\x2C\n        serializePermissions(permissions)\x2C\n      );\n    }\n\n    function restorePermissions(token) {\n      core.opSync("op_restore_test_permissions"\x2C token);\n    }\n\n    return async function applyPermissions(...params) {\n      const token = pledgePermissions(permissions);\n\n      try {\n        await fn(...params);\n      } finally {\n        restorePermissions(token);\n      }\n    };\n  }\n\n  const tests = [];\n\n  // Main test function provided by Deno.\n  function test(\n    t\x2C\n    fn\x2C\n  ) {\n    let testDef;\n    const defaults = {\n      ignore: false\x2C\n      only: false\x2C\n      sanitizeOps: true\x2C\n      sanitizeResources: true\x2C\n      sanitizeExit: true\x2C\n      permissions: null\x2C\n    };\n\n    if (typeof t === "string") {\n      if (!fn || typeof fn != "function") {\n        throw new TypeError("Missing test function");\n      }\n      if (!t) {\n        throw new TypeError("The test name can't be empty");\n      }\n      testDef = { fn: fn\x2C name: t\x2C ...defaults };\n    } else {\n      if (!t.fn) {\n        throw new TypeError("Missing test function");\n      }\n      if (!t.name) {\n        throw new TypeError("The test name can't be empty");\n      }\n      testDef = { ...defaults\x2C ...t };\n    }\n\n    testDef.fn = wrapTestFnWithSanitizers(testDef.fn\x2C testDef);\n\n    if (testDef.permissions) {\n      testDef.fn = withPermissions(\n        testDef.fn\x2C\n        testDef.permissions\x2C\n      );\n    }\n\n    ArrayPrototypePush(tests\x2C testDef);\n  }\n\n  function formatError(error) {\n    if (error instanceof AggregateError) {\n      const message = error\n        .errors\n        .map((error) =>\n          inspectArgs([error]).replace(/^(?!\\s*$)/gm\x2C " ".repeat(4))\n        )\n        .join("\\n");\n\n      return error.name + "\\n" + message + error.stack;\n    }\n\n    return inspectArgs([error]);\n  }\n\n  function createTestFilter(filter) {\n    return (def) => {\n      if (filter) {\n        if (\n          StringPrototypeStartsWith(filter\x2C "/") &&\n          StringPrototypeEndsWith(filter\x2C "/")\n        ) {\n          const regex = new RegExp(\n            StringPrototypeSlice(filter\x2C 1\x2C filter.length - 1)\x2C\n          );\n          return RegExpPrototypeTest(regex\x2C def.name);\n        }\n\n        return StringPrototypeIncludes(def.name\x2C filter);\n      }\n\n      return true;\n    };\n  }\n\n  async function runTest(test\x2C description) {\n    if (test.ignore) {\n      return "ignored";\n    }\n\n    const step = new TestStep({\n      name: test.name\x2C\n      parent: undefined\x2C\n      rootTestDescription: description\x2C\n      sanitizeOps: test.sanitizeOps\x2C\n      sanitizeResources: test.sanitizeResources\x2C\n      sanitizeExit: test.sanitizeExit\x2C\n    });\n\n    try {\n      await test.fn(step);\n      const failCount = step.failedChildStepsCount();\n      return failCount === 0 ? "ok" : {\n        "failed": formatError(\n          new Error(\n            `${failCount} test step${failCount === 1 ? "" : "s"} failed.`\x2C\n          )\x2C\n        )\x2C\n      };\n    } catch (error) {\n      return {\n        "failed": formatError(error)\x2C\n      };\n    } finally {\n      step.finalized = true;\n      // ensure the children report their result\n      for (const child of step.children) {\n        child.reportResult();\n      }\n    }\n  }\n\n  function getTestOrigin() {\n    return core.opSync("op_get_test_origin");\n  }\n\n  function reportTestPlan(plan) {\n    core.opSync("op_dispatch_test_event"\x2C {\n      plan\x2C\n    });\n  }\n\n  function reportTestConsoleOutput(console) {\n    core.opSync("op_dispatch_test_event"\x2C {\n      output: { console }\x2C\n    });\n  }\n\n  function reportTestWait(test) {\n    core.opSync("op_dispatch_test_event"\x2C {\n      wait: test\x2C\n    });\n  }\n\n  function reportTestResult(test\x2C result\x2C elapsed) {\n    core.opSync("op_dispatch_test_event"\x2C {\n      result: [test\x2C result\x2C elapsed]\x2C\n    });\n  }\n\n  function reportTestStepWait(testDescription) {\n    core.opSync("op_dispatch_test_event"\x2C {\n      stepWait: testDescription\x2C\n    });\n  }\n\n  function reportTestStepResult(testDescription\x2C result\x2C elapsed) {\n    core.opSync("op_dispatch_test_event"\x2C {\n      stepResult: [testDescription\x2C result\x2C elapsed]\x2C\n    });\n  }\n\n  async function runTests({\n    filter = null\x2C\n    shuffle = null\x2C\n  } = {}) {\n    const origin = getTestOrigin();\n    const originalConsole = globalThis.console;\n\n    globalThis.console = new Console(reportTestConsoleOutput);\n\n    const only = ArrayPrototypeFilter(tests\x2C (test) => test.only);\n    const filtered = ArrayPrototypeFilter(\n      only.length > 0 ? only : tests\x2C\n      createTestFilter(filter)\x2C\n    );\n\n    reportTestPlan({\n      origin\x2C\n      total: filtered.length\x2C\n      filteredOut: tests.length - filtered.length\x2C\n      usedOnly: only.length > 0\x2C\n    });\n\n    if (shuffle !== null) {\n      // http://en.wikipedia.org/wiki/Linear_congruential_generator\n      const nextInt = (function (state) {\n        const m = 0x80000000;\n        const a = 1103515245;\n        const c = 12345;\n\n        return function (max) {\n          return state = ((a * state + c) % m) % max;\n        };\n      }(shuffle));\n\n      for (let i = filtered.length - 1; i > 0; i--) {\n        const j = nextInt(i);\n        [filtered[i]\x2C filtered[j]] = [filtered[j]\x2C filtered[i]];\n      }\n    }\n\n    for (const test of filtered) {\n      const description = {\n        origin\x2C\n        name: test.name\x2C\n      };\n      const earlier = DateNow();\n\n      reportTestWait(description);\n\n      const result = await runTest(test\x2C description);\n      const elapsed = DateNow() - earlier;\n\n      reportTestResult(description\x2C result\x2C elapsed);\n    }\n\n    globalThis.console = originalConsole;\n  }\n\n  /**\n   * @typedef {{\n   *   fn: (t: TestContext) => void | Promise<void>\x2C\n   *   name: string\x2C\n   *   ignore?: boolean\x2C\n   *   sanitizeOps?: boolean\x2C\n   *   sanitizeResources?: boolean\x2C\n   *   sanitizeExit?: boolean\x2C\n   * }} TestStepDefinition\n   *\n   * @typedef {{\n   *   name: string;\n   *   parent: TestStep | undefined\x2C\n   *   rootTestDescription: { origin: string; name: string };\n   *   sanitizeOps: boolean\x2C\n   *   sanitizeResources: boolean\x2C\n   *   sanitizeExit: boolean\x2C\n   * }} TestStepParams\n   */\n\n  class TestStep {\n    /** @type {TestStepParams} */\n    #params;\n    reportedWait = false;\n    #reportedResult = false;\n    finalized = false;\n    elapsed = 0;\n    /** @type "ok" | "ignored" | "pending" | "failed" */\n    status = "pending";\n    error = undefined;\n    /** @type {TestStep[]} */\n    children = [];\n\n    /** @param params {TestStepParams} */\n    constructor(params) {\n      this.#params = params;\n    }\n\n    get name() {\n      return this.#params.name;\n    }\n\n    get parent() {\n      return this.#params.parent;\n    }\n\n    get rootTestDescription() {\n      return this.#params.rootTestDescription;\n    }\n\n    get sanitizerOptions() {\n      return {\n        sanitizeResources: this.#params.sanitizeResources\x2C\n        sanitizeOps: this.#params.sanitizeOps\x2C\n        sanitizeExit: this.#params.sanitizeExit\x2C\n      };\n    }\n\n    get usesSanitizer() {\n      return this.#params.sanitizeResources ||\n        this.#params.sanitizeOps ||\n        this.#params.sanitizeExit;\n    }\n\n    /** If a test validation error already occurred then don't bother checking\n     * the sanitizers as that will create extra noise.\n     */\n    get shouldSkipSanitizers() {\n      return this.hasRunningChildren || this.parent?.finalized;\n    }\n\n    get hasRunningChildren() {\n      return ArrayPrototypeSome(\n        this.children\x2C\n        /** @param step {TestStep} */\n        (step) => step.status === "pending"\x2C\n      );\n    }\n\n    failedChildStepsCount() {\n      return ArrayPrototypeFilter(\n        this.children\x2C\n        /** @param step {TestStep} */\n        (step) => step.status === "failed"\x2C\n      ).length;\n    }\n\n    canStreamReporting() {\n      // there should only ever be one sub step running when running with\n      // sanitizers\x2C so we can use this to tell if we can stream reporting\n      return this.selfAndAllAncestorsUseSanitizer() &&\n        this.children.every((c) => c.usesSanitizer || c.finalized);\n    }\n\n    selfAndAllAncestorsUseSanitizer() {\n      if (!this.usesSanitizer) {\n        return false;\n      }\n\n      for (const ancestor of this.ancestors()) {\n        if (!ancestor.usesSanitizer) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    *ancestors() {\n      let ancestor = this.parent;\n      while (ancestor) {\n        yield ancestor;\n        ancestor = ancestor.parent;\n      }\n    }\n\n    getFullName() {\n      if (this.parent) {\n        return `${this.parent.getFullName()} > ${this.name}`;\n      } else {\n        return this.name;\n      }\n    }\n\n    reportWait() {\n      if (this.reportedWait || !this.parent) {\n        return;\n      }\n\n      reportTestStepWait(this.#getTestStepDescription());\n\n      this.reportedWait = true;\n    }\n\n    reportResult() {\n      if (this.#reportedResult || !this.parent) {\n        return;\n      }\n\n      this.reportWait();\n\n      for (const child of this.children) {\n        child.reportResult();\n      }\n\n      reportTestStepResult(\n        this.#getTestStepDescription()\x2C\n        this.#getStepResult()\x2C\n        this.elapsed\x2C\n      );\n\n      this.#reportedResult = true;\n    }\n\n    #getStepResult() {\n      switch (this.status) {\n        case "ok":\n          return "ok";\n        case "ignored":\n          return "ignored";\n        case "pending":\n          return {\n            "pending": this.error && formatError(this.error)\x2C\n          };\n        case "failed":\n          return {\n            "failed": this.error && formatError(this.error)\x2C\n          };\n        default:\n          throw new Error(`Unhandled status: ${this.status}`);\n      }\n    }\n\n    #getTestStepDescription() {\n      return {\n        test: this.rootTestDescription\x2C\n        name: this.name\x2C\n        level: this.#getLevel()\x2C\n      };\n    }\n\n    #getLevel() {\n      let count = 0;\n      for (const _ of this.ancestors()) {\n        count++;\n      }\n      return count;\n    }\n  }\n\n  /** @param parentStep {TestStep} */\n  function createTestContext(parentStep) {\n    return {\n      [SymbolToStringTag]: "TestContext"\x2C\n      /**\n       * @param nameOrTestDefinition {string | TestStepDefinition}\n       * @param fn {(t: TestContext) => void | Promise<void>}\n       */\n      async step(nameOrTestDefinition\x2C fn) {\n        if (!testStepsEnabled) {\n          throw new Error(\n            "Test steps are unstable. The --unstable flag must be provided."\x2C\n          );\n        }\n\n        if (parentStep.finalized) {\n          throw new Error(\n            "Cannot run test step after parent scope has finished execution. " +\n              "Ensure any `.step(...)` calls are executed before their parent scope completes execution."\x2C\n          );\n        }\n\n        const definition = getDefinition();\n        const subStep = new TestStep({\n          name: definition.name\x2C\n          parent: parentStep\x2C\n          rootTestDescription: parentStep.rootTestDescription\x2C\n          sanitizeOps: getOrDefault(\n            definition.sanitizeOps\x2C\n            parentStep.sanitizerOptions.sanitizeOps\x2C\n          )\x2C\n          sanitizeResources: getOrDefault(\n            definition.sanitizeResources\x2C\n            parentStep.sanitizerOptions.sanitizeResources\x2C\n          )\x2C\n          sanitizeExit: getOrDefault(\n            definition.sanitizeExit\x2C\n            parentStep.sanitizerOptions.sanitizeExit\x2C\n          )\x2C\n        });\n\n        ArrayPrototypePush(parentStep.children\x2C subStep);\n\n        try {\n          if (definition.ignore) {\n            subStep.status = "ignored";\n            subStep.finalized = true;\n            if (subStep.canStreamReporting()) {\n              subStep.reportResult();\n            }\n            return false;\n          }\n\n          const testFn = wrapTestFnWithSanitizers(\n            definition.fn\x2C\n            subStep.sanitizerOptions\x2C\n          );\n          const start = DateNow();\n\n          try {\n            await testFn(subStep);\n\n            if (subStep.failedChildStepsCount() > 0) {\n              subStep.status = "failed";\n            } else {\n              subStep.status = "ok";\n            }\n          } catch (error) {\n            subStep.error = formatError(error);\n            subStep.status = "failed";\n          }\n\n          subStep.elapsed = DateNow() - start;\n\n          if (subStep.parent?.finalized) {\n            // always point this test out as one that was still running\n            // if the parent step finalized\n            subStep.status = "pending";\n          }\n\n          subStep.finalized = true;\n\n          if (subStep.reportedWait && subStep.canStreamReporting()) {\n            subStep.reportResult();\n          }\n\n          return subStep.status === "ok";\n        } finally {\n          if (parentStep.canStreamReporting()) {\n            // flush any buffered steps\n            for (const parentChild of parentStep.children) {\n              parentChild.reportResult();\n            }\n          }\n        }\n\n        /** @returns {TestStepDefinition} */\n        function getDefinition() {\n          if (typeof nameOrTestDefinition === "string") {\n            if (!(fn instanceof Function)) {\n              throw new TypeError("Expected function for second argument.");\n            }\n            return {\n              name: nameOrTestDefinition\x2C\n              fn\x2C\n            };\n          } else if (typeof nameOrTestDefinition === "object") {\n            return nameOrTestDefinition;\n          } else {\n            throw new TypeError(\n              "Expected a test definition or name and function."\x2C\n            );\n          }\n        }\n      }\x2C\n    };\n  }\n\n  /**\n   * @template T {Function}\n   * @param testFn {T}\n   * @param opts {{\n   *   sanitizeOps: boolean\x2C\n   *   sanitizeResources: boolean\x2C\n   *   sanitizeExit: boolean\x2C\n   * }}\n   * @returns {T}\n   */\n  function wrapTestFnWithSanitizers(testFn\x2C opts) {\n    testFn = assertTestStepScopes(testFn);\n\n    if (opts.sanitizeOps) {\n      testFn = assertOps(testFn);\n    }\n    if (opts.sanitizeResources) {\n      testFn = assertResources(testFn);\n    }\n    if (opts.sanitizeExit) {\n      testFn = assertExit(testFn);\n    }\n    return testFn;\n  }\n\n  /**\n   * @template T\n   * @param value {T | undefined}\n   * @param defaultValue {T}\n   * @returns T\n   */\n  function getOrDefault(value\x2C defaultValue) {\n    return value == null ? defaultValue : value;\n  }\n\n  function enableTestSteps() {\n    testStepsEnabled = true;\n  }\n\n  window.__bootstrap.internals = {\n    ...window.__bootstrap.internals ?? {}\x2C\n    runTests\x2C\n    enableTestSteps\x2C\n  };\n\n  window.__bootstrap.testing = {\n    test\x2C\n  };\n})(this);\n
code-source-info,0xb7b083bd9e2,71,7647,8609,C0O7678C2O7708C7O7869C13O7904C23O7950C33O7956C38O7950C39O8010C43O8028C53O8034C58O8028C59O8095C66O8111C72O8121C82O8127C93O8165C99O8179C109O8185C114O8179C115O8246C121O8262C131O8268C136O8262C137O8329C148O8357C157O8373C160O8419C165O8386C170O8384C174O8450C180O8471C183O8517C188O8537C193O8484C198O8482C202O8570C209O8589C212O8570C218O8608,,
tick,0x7f056c958b33,113040,0,0x0,3,0x55636916ccf0,0xb7b083627bc,0x556369882592
code-creation,LazyCompile,10,113121,0xb7b083be902,57,wrapTestFnWithSanitizers deno:runtime/js/40_testing.js:788:36,0xb7b0829181c,~
code-source-info,0xb7b083be902,71,20918,21219,C0O20939C3O20948C9O20992C15O21013C18O21022C24O21060C30O21087C33O21096C39O21140C45O21162C48O21171C54O21201C56O21215,,
tick,0x556368cd2fa5,113185,0,0x0,3,0x55636916ccf0,0xb7b083bda87,0xb7b083627bc,0x556369882592
code-creation,LazyCompile,10,113212,0xb7b083bea3a,14,assertTestStepScopes deno:runtime/js/40_testing.js:154:32,0xb7b08290e00,~
code-source-info,0xb7b083bea3a,71,4594,7024,C0O4594C9O4639C13O7020,,
code-creation,LazyCompile,10,113265,0xb7b083beb32,14,assertOps deno:runtime/js/40_testing.js:38:21,0xb7b08290b7c,~
code-source-info,0xb7b083beb32,71,1146,3212,C0O1146C9O1191C13O3208,,
code-creation,LazyCompile,10,113316,0xb7b083bec2e,14,assertResources deno:runtime/js/40_testing.js:107:27,0xb7b08290d60,~
code-source-info,0xb7b083bec2e,71,3440,4041,C0O3440C9O3494C13O4037,,
code-creation,LazyCompile,10,113394,0xb7b083bed26,14,assertExit deno:runtime/js/40_testing.js:135:22,0xb7b08290db0,~
code-source-info,0xb7b083bed26,71,4192,4561,C0O4192C9O4203C13O4557,,
tick,0x556368e742ad,114250,0,0x0,3
code-creation,LazyCompile,10,114287,0xb7b083bedca,55,handleTimerMacrotask deno:ext/timers/01_timers.js:336:32,0xb7b08231e00,~
script-source,41,deno:ext/timers/01_timers.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const {\n    ArrayPrototypeIndexOf\x2C\n    ArrayPrototypePush\x2C\n    ArrayPrototypeShift\x2C\n    ArrayPrototypeSplice\x2C\n    DateNow\x2C\n    Error\x2C\n    FunctionPrototypeBind\x2C\n    Map\x2C\n    MapPrototypeDelete\x2C\n    MapPrototypeGet\x2C\n    MapPrototypeHas\x2C\n    MapPrototypeSet\x2C\n    MathMax\x2C\n    Number\x2C\n    String\x2C\n    TypeError\x2C\n  } = window.__bootstrap.primordials;\n\n  // Shamelessly cribbed from extensions/fetch/11_streams.js\n  class AssertionError extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "AssertionError";\n    }\n  }\n\n  /**\n   * @param {unknown} cond\n   * @param {string=} msg\n   * @returns {asserts cond}\n   */\n  function assert(cond\x2C msg = "Assertion failed.") {\n    if (!cond) {\n      throw new AssertionError(msg);\n    }\n  }\n\n  function opStopGlobalTimer() {\n    core.opSync("op_global_timer_stop");\n  }\n\n  function opStartGlobalTimer(timeout) {\n    return core.opSync("op_global_timer_start"\x2C timeout);\n  }\n\n  async function opWaitGlobalTimer() {\n    await core.opAsync("op_global_timer");\n  }\n\n  function opNow() {\n    return core.opSync("op_now");\n  }\n\n  function sleepSync(millis = 0) {\n    return core.opSync("op_sleep_sync"\x2C millis);\n  }\n\n  // Derived from https://github.com/vadimg/js_bintrees. MIT Licensed.\n\n  class RBNode {\n    constructor(data) {\n      this.data = data;\n      this.left = null;\n      this.right = null;\n      this.red = true;\n    }\n\n    getChild(dir) {\n      return dir ? this.right : this.left;\n    }\n\n    setChild(dir\x2C val) {\n      if (dir) {\n        this.right = val;\n      } else {\n        this.left = val;\n      }\n    }\n  }\n\n  class RBTree {\n    #comparator = null;\n    #root = null;\n\n    constructor(comparator) {\n      this.#comparator = comparator;\n      this.#root = null;\n    }\n\n    /** Returns `null` if tree is empty. */\n    min() {\n      let res = this.#root;\n      if (res === null) {\n        return null;\n      }\n      while (res.left !== null) {\n        res = res.left;\n      }\n      return res.data;\n    }\n\n    /** Returns node `data` if found\x2C `null` otherwise. */\n    find(data) {\n      let res = this.#root;\n      while (res !== null) {\n        const c = this.#comparator(data\x2C res.data);\n        if (c === 0) {\n          return res.data;\n        } else {\n          res = res.getChild(c > 0);\n        }\n      }\n      return null;\n    }\n\n    /** returns `true` if inserted\x2C `false` if duplicate. */\n    insert(data) {\n      let ret = false;\n\n      if (this.#root === null) {\n        // empty tree\n        this.#root = new RBNode(data);\n        ret = true;\n      } else {\n        const head = new RBNode(null); // fake tree root\n\n        let dir = 0;\n        let last = 0;\n\n        // setup\n        let gp = null; // grandparent\n        let ggp = head; // grand-grand-parent\n        let p = null; // parent\n        let node = this.#root;\n        ggp.right = this.#root;\n\n        // search down\n        while (true) {\n          if (node === null) {\n            // insert new node at the bottom\n            node = new RBNode(data);\n            p.setChild(dir\x2C node);\n            ret = true;\n          } else if (isRed(node.left) && isRed(node.right)) {\n            // color flip\n            node.red = true;\n            node.left.red = false;\n            node.right.red = false;\n          }\n\n          // fix red violation\n          if (isRed(node) && isRed(p)) {\n            const dir2 = ggp.right === gp;\n\n            assert(gp);\n            if (node === p.getChild(last)) {\n              ggp.setChild(dir2\x2C singleRotate(gp\x2C !last));\n            } else {\n              ggp.setChild(dir2\x2C doubleRotate(gp\x2C !last));\n            }\n          }\n\n          const cmp = this.#comparator(node.data\x2C data);\n\n          // stop if found\n          if (cmp === 0) {\n            break;\n          }\n\n          last = dir;\n          dir = Number(cmp < 0); // Fix type\n\n          // update helpers\n          if (gp !== null) {\n            ggp = gp;\n          }\n          gp = p;\n          p = node;\n          node = node.getChild(dir);\n        }\n\n        // update root\n        this.#root = head.right;\n      }\n\n      // make root black\n      this.#root.red = false;\n\n      return ret;\n    }\n\n    /** Returns `true` if removed\x2C `false` if not found. */\n    remove(data) {\n      if (this.#root === null) {\n        return false;\n      }\n\n      const head = new RBNode(null); // fake tree root\n      let node = head;\n      node.right = this.#root;\n      let p = null; // parent\n      let gp = null; // grand parent\n      let found = null; // found item\n      let dir = 1;\n\n      while (node.getChild(dir) !== null) {\n        const last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.getChild(dir);\n\n        const cmp = this.#comparator(data\x2C node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if (cmp === 0) {\n          found = node;\n        }\n\n        // push the red node down\n        if (!isRed(node) && !isRed(node.getChild(dir))) {\n          if (isRed(node.getChild(!dir))) {\n            const sr = singleRotate(node\x2C dir);\n            p.setChild(last\x2C sr);\n            p = sr;\n          } else if (!isRed(node.getChild(!dir))) {\n            const sibling = p.getChild(!last);\n            if (sibling !== null) {\n              if (\n                !isRed(sibling.getChild(!last)) &&\n                !isRed(sibling.getChild(last))\n              ) {\n                // color flip\n                p.red = false;\n                sibling.red = true;\n                node.red = true;\n              } else {\n                assert(gp);\n                const dir2 = gp.right === p;\n\n                if (isRed(sibling.getChild(last))) {\n                  gp.setChild(dir2\x2C doubleRotate(p\x2C last));\n                } else if (isRed(sibling.getChild(!last))) {\n                  gp.setChild(dir2\x2C singleRotate(p\x2C last));\n                }\n\n                // ensure correct coloring\n                const gpc = gp.getChild(dir2);\n                assert(gpc);\n                gpc.red = true;\n                node.red = true;\n                assert(gpc.left);\n                gpc.left.red = false;\n                assert(gpc.right);\n                gpc.right.red = false;\n              }\n            }\n          }\n        }\n      }\n\n      // replace and remove if found\n      if (found !== null) {\n        found.data = node.data;\n        assert(p);\n        p.setChild(p.right === node\x2C node.getChild(node.left === null));\n      }\n\n      // update root and make it black\n      this.#root = head.right;\n      if (this.#root !== null) {\n        this.#root.red = false;\n      }\n\n      return found !== null;\n    }\n  }\n\n  function isRed(node) {\n    return node !== null && node.red;\n  }\n\n  function singleRotate(root\x2C dir) {\n    const save = root.getChild(!dir);\n    assert(save);\n\n    root.setChild(!dir\x2C save.getChild(dir));\n    save.setChild(dir\x2C root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n  }\n\n  function doubleRotate(root\x2C dir) {\n    root.setChild(!dir\x2C singleRotate(root.getChild(!dir)\x2C !dir));\n    return singleRotate(root\x2C dir);\n  }\n\n  const { console } = globalThis;\n\n  // Timeout values > TIMEOUT_MAX are set to 1.\n  const TIMEOUT_MAX = 2 ** 31 - 1;\n\n  let globalTimeoutDue = null;\n\n  let nextTimerId = 1;\n  const idMap = new Map();\n  const dueTree = new RBTree((a\x2C b) => a.due - b.due);\n\n  function clearGlobalTimeout() {\n    globalTimeoutDue = null;\n    opStopGlobalTimer();\n  }\n\n  let pendingEvents = 0;\n  const pendingFireTimers = [];\n\n  /** Process and run a single ready timer macrotask.\n   * This function should be registered through Deno.core.setMacrotaskCallback.\n   * Returns true when all ready macrotasks have been processed\x2C false if more\n   * ready ones are available. The Isolate future would rely on the return value\n   * to repeatedly invoke this function until depletion. Multiple invocations\n   * of this function one at a time ensures newly ready microtasks are processed\n   * before next macrotask timer callback is invoked. */\n  function handleTimerMacrotask() {\n    if (pendingFireTimers.length > 0) {\n      fire(ArrayPrototypeShift(pendingFireTimers));\n      return pendingFireTimers.length === 0;\n    }\n    return true;\n  }\n\n  async function setGlobalTimeout(due\x2C now) {\n    // Since JS and Rust don't use the same clock\x2C pass the time to rust as a\n    // relative time value. On the Rust side we'll turn that into an absolute\n    // value again.\n    const timeout = due - now;\n    assert(timeout >= 0);\n    // Send message to the backend.\n    globalTimeoutDue = due;\n    pendingEvents++;\n    // FIXME(bartlomieju): this is problematic\x2C because `clearGlobalTimeout`\n    // is synchronous. That means that timer is cancelled\x2C but this promise is still pending\n    // until next turn of event loop. This leads to "leaking of async ops" in tests;\n    // because `clearTimeout/clearInterval` might be the last statement in test function\n    // `opSanitizer` will immediately complain that there is pending op going on\x2C unless\n    // some timeout/defer is put in place to allow promise resolution.\n    // Ideally `clearGlobalTimeout` doesn't return until this op is resolved\x2C but\n    // I'm not if that's possible.\n    opStartGlobalTimer(timeout);\n    await opWaitGlobalTimer();\n    pendingEvents--;\n    prepareReadyTimers();\n  }\n\n  function prepareReadyTimers() {\n    const now = DateNow();\n    // Bail out if we're not expecting the global timer to fire.\n    if (globalTimeoutDue === null || pendingEvents > 0) {\n      return;\n    }\n    // After firing the timers that are due now\x2C this will hold the first timer\n    // list that hasn't fired yet.\n    let nextDueNode;\n    while ((nextDueNode = dueTree.min()) !== null && nextDueNode.due <= now) {\n      dueTree.remove(nextDueNode);\n      // Fire all the timers in the list.\n      for (const timer of nextDueNode.timers) {\n        // With the list dropped\x2C the timer is no longer scheduled.\n        timer.scheduled = false;\n        // Place the callback to pending timers to fire.\n        ArrayPrototypePush(pendingFireTimers\x2C timer);\n      }\n    }\n    setOrClearGlobalTimeout(nextDueNode && nextDueNode.due\x2C now);\n  }\n\n  function setOrClearGlobalTimeout(due\x2C now) {\n    if (due == null) {\n      clearGlobalTimeout();\n    } else {\n      setGlobalTimeout(due\x2C now);\n    }\n  }\n\n  function schedule(timer\x2C now) {\n    assert(!timer.scheduled);\n    assert(now <= timer.due);\n    // Find or create the list of timers that will fire at point-in-time `due`.\n    const maybeNewDueNode = { due: timer.due\x2C timers: [] };\n    let dueNode = dueTree.find(maybeNewDueNode);\n    if (dueNode === null) {\n      dueTree.insert(maybeNewDueNode);\n      dueNode = maybeNewDueNode;\n    }\n    // Append the newly scheduled timer to the list and mark it as scheduled.\n    ArrayPrototypePush(dueNode.timers\x2C timer);\n    timer.scheduled = true;\n    // If the new timer is scheduled to fire before any timer that existed before\x2C\n    // update the global timeout to reflect this.\n    if (globalTimeoutDue === null || globalTimeoutDue > timer.due) {\n      setOrClearGlobalTimeout(timer.due\x2C now);\n    }\n  }\n\n  function unschedule(timer) {\n    // Check if our timer is pending scheduling or pending firing.\n    // If either is true\x2C they are not in tree\x2C and their idMap entry\n    // will be deleted soon. Remove it from queue.\n    let index = -1;\n    if ((index = ArrayPrototypeIndexOf(pendingFireTimers\x2C timer)) >= 0) {\n      ArrayPrototypeSplice(pendingFireTimers\x2C index);\n      return;\n    }\n    // If timer is not in the 2 pending queues and is unscheduled\x2C\n    // it is not in the tree.\n    if (!timer.scheduled) {\n      return;\n    }\n    const searchKey = { due: timer.due\x2C timers: [] };\n    // Find the list of timers that will fire at point-in-time `due`.\n    const list = dueTree.find(searchKey).timers;\n    if (list.length === 1) {\n      // Time timer is the only one in the list. Remove the entire list.\n      assert(list[0] === timer);\n      dueTree.remove(searchKey);\n      // If the unscheduled timer was 'next up'\x2C find when the next timer that\n      // still exists is due\x2C and update the global alarm accordingly.\n      if (timer.due === globalTimeoutDue) {\n        const nextDueNode = dueTree.min();\n        setOrClearGlobalTimeout(\n          nextDueNode && nextDueNode.due\x2C\n          DateNow()\x2C\n        );\n      }\n    } else {\n      // Multiple timers that are due at the same point in time.\n      // Remove this timer from the list.\n      const index = ArrayPrototypeIndexOf(list\x2C timer);\n      assert(index > -1);\n      ArrayPrototypeSplice(list\x2C index\x2C 1);\n    }\n  }\n\n  function fire(timer) {\n    // If the timer isn't found in the ID map\x2C that means it has been cancelled\n    // between the timer firing and the promise callback (this function).\n    if (!MapPrototypeHas(idMap\x2C timer.id)) {\n      return;\n    }\n    // Reschedule the timer if it is a repeating one\x2C otherwise drop it.\n    if (!timer.repeat) {\n      // One-shot timer: remove the timer from this id-to-timer map.\n      MapPrototypeDelete(idMap\x2C timer.id);\n    } else {\n      // Interval timer: compute when timer was supposed to fire next.\n      // However make sure to never schedule the next interval in the past.\n      const now = DateNow();\n      timer.due = MathMax(now\x2C timer.due + timer.delay);\n      schedule(timer\x2C now);\n    }\n    // Call the user callback. Intermediate assignment is to avoid leaking `this`\n    // to it\x2C while also keeping the stack trace neat when it shows up in there.\n    const callback = timer.callback;\n    if ("function" === typeof callback) {\n      callback();\n    } else {\n      (0\x2C eval)(callback);\n    }\n  }\n\n  function checkThis(thisArg) {\n    if (thisArg !== null && thisArg !== undefined && thisArg !== globalThis) {\n      throw new TypeError("Illegal invocation");\n    }\n  }\n\n  function setTimer(\n    cb\x2C\n    delay\x2C\n    args\x2C\n    repeat\x2C\n  ) {\n    // If the callack is a function\x2C bind `args` to the callback and bind `this` to globalThis(global).\n    // otherwise call `String` on it\x2C and `eval` it on calls; do not pass variardic args to the string\n    let callback;\n\n    if ("function" === typeof cb) {\n      callback = FunctionPrototypeBind(cb\x2C globalThis\x2C ...args);\n    } else {\n      callback = String(cb);\n      args = []; // args are ignored\n    }\n    // In the browser\x2C the delay value must be coercible to an integer between 0\n    // and INT32_MAX. Any other value will cause the timer to fire immediately.\n    // We emulate this behavior.\n    const now = DateNow();\n    if (delay > TIMEOUT_MAX) {\n      console.warn(\n        `${delay} does not fit into` +\n          " a 32-bit signed integer." +\n          "\\nTimeout duration was set to 1."\x2C\n      );\n      delay = 1;\n    }\n    delay = MathMax(0\x2C delay | 0);\n\n    // Create a new\x2C unscheduled timer object.\n    const timer = {\n      id: nextTimerId++\x2C\n      callback\x2C\n      args\x2C\n      delay\x2C\n      due: now + delay\x2C\n      repeat\x2C\n      scheduled: false\x2C\n    };\n    // Register the timer's existence in the id-to-timer map.\n    MapPrototypeSet(idMap\x2C timer.id\x2C timer);\n    // Schedule the timer in the due table.\n    schedule(timer\x2C now);\n    return timer.id;\n  }\n\n  function setTimeout(\n    cb\x2C\n    delay = 0\x2C\n    ...args\n  ) {\n    delay >>>= 0;\n    checkThis(this);\n    return setTimer(cb\x2C delay\x2C args\x2C false);\n  }\n\n  function setInterval(\n    cb\x2C\n    delay = 0\x2C\n    ...args\n  ) {\n    delay >>>= 0;\n    checkThis(this);\n    return setTimer(cb\x2C delay\x2C args\x2C true);\n  }\n\n  function clearTimer(id) {\n    id >>>= 0;\n    const timer = MapPrototypeGet(idMap\x2C id);\n    if (timer === undefined) {\n      // Timer doesn't exist any more or never existed. This is not an error.\n      return;\n    }\n    // Unschedule the timer if it is currently scheduled\x2C and forget about it.\n    unschedule(timer);\n    MapPrototypeDelete(idMap\x2C timer.id);\n  }\n\n  function clearTimeout(id = 0) {\n    id >>>= 0;\n    if (id === 0) {\n      return;\n    }\n    clearTimer(id);\n  }\n\n  function clearInterval(id = 0) {\n    id >>>= 0;\n    if (id === 0) {\n      return;\n    }\n    clearTimer(id);\n  }\n\n  window.__bootstrap.timers = {\n    clearInterval\x2C\n    setInterval\x2C\n    clearTimeout\x2C\n    setTimeout\x2C\n    handleTimerMacrotask\x2C\n    opStopGlobalTimer\x2C\n    opStartGlobalTimer\x2C\n    opNow\x2C\n    sleepSync\x2C\n  };\n})(this);\n
code-source-info,0xb7b083bedca,41,8153,8321,C0O8162C5O8184C11O8191C16O8204C21O8209C26O8229C29O8209C34O8204C38O8256C43O8281C49O8288C52O8294C53O8305C54O8317,,
tick,0x55636a22bc58,115718,0,0x0,6
code-creation,Script,10,115842,0xb7b083bf866,31, [deno:cli/tools/test.rs:487:6]:1:1,0xb7b083bf7e8,~
script-source,97,[deno:cli/tools/test.rs:487:6],window.dispatchEvent(new Event('load'));
code-source-info,0xb7b083bf866,97,0,40,C0O0C4O7C9O25C18O21C24O7C30O40,,
code-creation,LazyCompile,10,116091,0xb7b083bfac6,312,Event deno:ext/web/02_event.js:138:16,0xb7b0817f224,~
code-source-info,0xb7b083bfac6,14,3350,4446,C0O3350C15O3457C19O3462C24O3481C28O3498C32O3503C36O3518C40O3533C44O3538C48O3560C52O3575C56O3580C60O3611C64O3626C68O3631C72O3651C76O3666C80O3671C84O3684C88O3699C92O3704C96O3716C100O3731C104O3736C109O3743C113O3756C120O3763C125O3791C138O3763C143O3867C150O3881C155O3892C160O3902C165O3892C172O4022C179O4041C184O4022C190O4152C194O4157C204O4182C214O4199C222O4233C232O4259C235O4265C248O4287C260O4312C263O4312C273O4170C277O4338C296O4420C305O4338C311O4445,,
code-creation,LazyCompile,10,116317,0xb7b0847e6da,482, deno:ext/webidl/00_webidl.js:673:21,0xb7b080f0c3c,~
code-source-info,0xb7b0847e6da,6,17836,19236,C7O17836C13O17873C18O17873C23O17888C49O17985C51O18019C60O18052C70O18025C75O18019C76O18175C79O18201C90O18218C93O18201C99O18286C109O18326C113O18352C115O18367C116O18404C145O18394C175O18394C178O18445C183O18463C185O18486C187O18496C194O18521C199O18545C203O18599C205O18621C209O18647C213O18708C219O18712C236O18724C251O18750C261O18770C285O18835C290O18909C298O18915C302O18879C308O18937C310O18950C316O18994C322O19016C332O19049C344O19100C361O19118C378O19142C393O19169C399O19022C404O19016C405O18383C479O19215C481O19230,,
code-creation,LazyCompile,10,116435,0xb7b0847ea0a,90,type deno:ext/webidl/00_webidl.js:93:16,0xb7b080ef4a8,~
code-source-info,0xb7b0847ea0a,6,2199,2989,C0O2209C4O2233C6O2247C7O2258C69O2310C71O2329C72O2360C74O2377C75O2407C77O2423C78O2453C80O2469C81O2499C83O2515C84O2545C86O2561C87O2963C89O2979,,
tick,0x556368b9b8af,116495,0,0x0,3,0x55636916ccf0,0xb7b0847e6ec,0xb7b083bfb7e,0xb7b083bf878
code-creation,LazyCompile,10,116681,0xb7b0847eb06,2,get NONE deno:ext/web/02_event.js:323:20,0xb7b0817f5a4,~
code-source-info,0xb7b0847eb06,14,8089,8115,C0O8100C1O8109,,
code-creation,LazyCompile,10,116873,0xb7b0847ec42,150,dispatchEvent deno:ext/web/02_event.js:969:18,0xb7b0817ff98,~
code-source-info,0xb7b0847ec42,14,23907,24536,C0O23907C2O23923C7O23930C12O23958C25O23930C30O24070C36O24078C40O24119C42O24124C44O24123C48O24105C53O24160C60O24165C65O24190C68O24190C73O24222C74O24234C75O24250C78O24254C84O24286C97O24292C102O24286C103O24380C110O24395C113O24401C117O24391C122O24417C135O24423C140O24417C141O24501C144O24508C149O24530,,
code-creation,LazyCompile,10,116954,0xb7b0847edbe,15,get type deno:ext/web/02_event.js:182:13,0xb7b0817f2a8,~
code-source-info,0xb7b0847edbe,14,4690,4737,C0O4701C4O4713C6O4712C10O4726C14O4731,,
code-creation,LazyCompile,10,116993,0xb7b0847ee52,16,setTarget deno:ext/web/02_event.js:87:21,0xb7b0817f138,~
code-source-info,0xb7b0847ee52,14,2049,2108,C0O2070C2O2076C4O2075C10O2096C15O2107,,
code-creation,Script,10,117095,0xb7b0847ef86,33, [deno:cli/tools/test.rs:492:6]:1:1,0xb7b0847eeec,~
script-source,98,[deno:cli/tools/test.rs:492:6],Deno[Deno.internal].runTests({"filter":null\x2C"shuffle":null})
code-source-info,0xb7b0847ef86,98,0,60,C0O0C4O5C8O10C12O4C16O20C26O20C32O60,,
code-creation,LazyCompile,10,117409,0xb7b0847f2e2,836,runTests deno:runtime/js/40_testing.js:412:26,0xb7b0829112c,~
code-source-info,0xb7b0847f2e
code-creation,LazyCompile,10,117482,0xb7b0847f7c2,37, deno:runtime/js/40_testing.js:436:33,0xb7b0847f15c,~
code-source-info,0xb7b0847f7c2,71,11943,12143,C0O11943C18O11971C20O11971C22O12001C24O12001C26O12031C30O12031C32O12047C36O12135,,
code-creation,LazyCompile,10,117555,0xb7b0847f89a,19,getTestOrigin deno:runtime/js/40_testing.js:372:25,0xb7b08290fc0,~
code-source-info,0xb7b0847f89a,71,10376,10430,C0O10385C5O10397C13O10397C18O10426,,
tick,0x556368d18250,117594,0,0x0,3,0x55636916ccf0,0xb7b0847f334,0xb7b0847efa0
code-creation,LazyCompile,10,117780,0xb7b0847fa66,5, deno:runtime/js/40_testing.js:421:46,0xb7b0847f128,~
code-source-info,0xb7b0847fa66,71,11514,11533,C0O11529C4O11533,,
code-creation,LazyCompile,10,117840,0xb7b0847fb32,14,createTestFilter deno:runtime/js/40_testing.js:315:28,0xb7b08290f58,~
code-source-info,0xb7b0847fb32,71,8983,9435,C0O8983C9O8998C13O9431,,
code-creation,LazyCompile,10,117894,0xb7b0847fbee,130, deno:runtime/js/40_testing.js:316:12,0xb7b0847facc,~
code-source-info,0xb7b0847fbee,71,9005,9430,C0O9022C4O9044C17O9059C28O9111C37O9111C44O9184C55O9208C67O9247C71O9254C75O9208C83O9184C89O9283C96O9321C101O9290C106O9327C107O9347C114O9382C122O9354C127O9396C128O9412C129O9424,,
code-creation,LazyCompile,10,117970,0xb7b0847fd52,32,reportTestPlan deno:runtime/js/40_testing.js:376:26,0xb7b08290ff4,~
code-source-info,0xb7b0847fd52,71,10457,10533,C0O10470C5O10475C20O10516C24O10475C31O10532,,
code-creation,LazyCompile,10,118147,0xb7b0847fe2a,32,reportTestWait deno:runtime/js/40_testing.js:388:26,0xb7b0829105c,~
code-source-info,0xb7b0847fe2a,71,10690,10772,C0O10703C5O10708C20O10755C24O10708C31O10771,,
tick,0x556369bb68cc,119184,1,0x55636a6330f0,6,0x556368c1e490,0xb7b083bac3e,0xb7b0847fe42,0xb7b0847f552,0xb7b0847efa0
code-creation,LazyCompile,10,119552,0xb7b0837eca6,490,runTest deno:runtime/js/40_testing.js:335:25,0xb7b08290f8c,~
code-source-info,0xb7b0837eca6,71,9461,10350,C10O9461C18O9496C24O9512C36O9529C37O9554C47O9586C56O9606C62O9644C66O9681C74O9724C82O9768C92O9554C104O9818C109O9818C122O9807C145O9857C150O9857C155O9888C156O9905C175O9967C180O9989C190O10021C214O9963C220O9940C247O10110C260O10137C283O10188C285O10203C289O10291C318O10277C348O10277C351O10317C357O10317C361O10266C465O10349,,
tick,0x556368f676a5,119743,0,0x0,0,0x556368f9cb70,0xb7b0837ece4,0xb7b0847f55a,0xb7b0847efa0
code-creation,LazyCompile,10,119781,0xb7b0837f006,34,TestStep deno:runtime/js/40_testing.js:504:16,0xb7b08291190,~
code-source-info,0xb7b0837f006,71,13594,13639,C5O13594C23O13611C28O13624C33O13638,,
code-creation,LazyCompile,10,119907,0xb7b0837f1f2,210,exitSanitizer deno:runtime/js/40_testing.js:136:40,0xb7b083becc0,~
code-source-info,0xb7b0837f1f2,71,4238,4556,C4O4238C54O4258C66O4258C76O4433C84O4439C97O4433C135O4484C137O4484C150O4521C159O4521C185O4555,,
code-creation,LazyCompile,10,119952,0xb7b0837f36a,10,setExitHandler deno:runtime/js/30_os.js:30:26,0xb7b08285c70,~
script-source,61,deno:runtime/js/30_os.js,// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const core = window.Deno.core;\n  const {\n    Error\x2C\n    SymbolFor\x2C\n  } = window.__bootstrap.primordials;\n\n  function loadavg() {\n    return core.opSync("op_loadavg");\n  }\n\n  function hostname() {\n    return core.opSync("op_hostname");\n  }\n\n  function osRelease() {\n    return core.opSync("op_os_release");\n  }\n\n  function systemMemoryInfo() {\n    return core.opSync("op_system_memory_info");\n  }\n\n  // This is an internal only method used by the test harness to override the\n  // behavior of exit when the exit sanitizer is enabled.\n  let exitHandler = null;\n  function setExitHandler(fn) {\n    exitHandler = fn;\n  }\n\n  function exit(code = 0) {\n    // Dispatches `unload` only when it's not dispatched yet.\n    if (!window[SymbolFor("isUnloadDispatched")]) {\n      // Invokes the `unload` hooks before exiting\n      // ref: https://github.com/denoland/deno/issues/3603\n      window.dispatchEvent(new Event("unload"));\n    }\n\n    if (exitHandler) {\n      exitHandler(code);\n      return;\n    }\n\n    core.opSync("op_exit"\x2C code);\n    throw new Error("Code not reachable");\n  }\n\n  function setEnv(key\x2C value) {\n    core.opSync("op_set_env"\x2C key\x2C value);\n  }\n\n  function getEnv(key) {\n    return core.opSync("op_get_env"\x2C key) ?? undefined;\n  }\n\n  function deleteEnv(key) {\n    core.opSync("op_delete_env"\x2C key);\n  }\n\n  const env = {\n    get: getEnv\x2C\n    toObject() {\n      return core.opSync("op_env");\n    }\x2C\n    set: setEnv\x2C\n    delete: deleteEnv\x2C\n  };\n\n  function execPath() {\n    return core.opSync("op_exec_path");\n  }\n\n  window.__bootstrap.os = {\n    env\x2C\n    execPath\x2C\n    setExitHandler\x2C\n    exit\x2C\n    osRelease\x2C\n    systemMemoryInfo\x2C\n    hostname\x2C\n    loadavg\x2C\n  };\n})(this);\n
code-source-info,0xb7b0837f36a,61,691,723,C0O702C2O714C9O722,,
code-creation,LazyCompile,10,120096,0xb7b0837f69a,233,resourceSanitizer deno:runtime/js/40_testing.js:111:44,0xb7b083bebc8,~
code-source-info,0xb7b0837f69a,71,3533,4036,C10O3533C18O3560C25O3565C30O3565C35O3584C38O3590C50O3584C73O3616C79O3648C90O3655C91O3684C98O3689C103O3689C108O3724C123O3724C129O3775C144O3775C150O3823C155O3866C168O3883C179O3998C188O4012C192O3998C208O4035,,
code-creation,LazyCompile,10,120138,0xb7b0837f83a,21,resources deno:core/01_core.js:145:21,0xb7b080e5db4,~
code-source-info,0xb7b0837f83a,4,4425,4487,C0O4434C11O4459C16O4441C20O4483,,
code-creation,LazyCompile,10,120266,0xb7b0837fbc6,725,asyncOpSanitizer deno:runtime/js/40_testing.js:40:43,0xb7b083beacc,~
code-source-info,0xb7b0837fbc
code-creation,LazyCompile,10,120370,0xb7b0849e3ca,233,metrics deno:core/01_core.js:173:19,0xb7b080e5f20,~
code-source-info,0xb7b0849e3ca,4,4932,5162,C0O4932C8O4969C16O4969C21O4969C43O4948C80O4959C178O4995C182O5011C189O5029C196O5054C203O5068C206O5054C216O5029C222O5011C226O5009C230O5141C232O5158,,
tick,0x556368be6118,120790,1,0x55636a6330f0,6,0x556368c1e490,0xb7b083bac3e,0xb7b0849e3da,0xb7b0837fbdf,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
code-creation,LazyCompile,10,121527,0xb7b0849e6da,192, deno:core/01_core.js:177:7,0xb7b0849e314,~
code-source-info,0xb7b0849e6da,4,5085,5127,C0O5085C25O5087C62O5095C159O5105C168O5106C177O5114C182O5120C191O5127,,
tick,0x556368fe3c03,121949,0,0x0,0,0x55636910e0b0,0x55636990c34c,0xb7b0849e4a8,0xb7b0837fbdf,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
code-creation,LazyCompile,10,122670,0xb7b0849ea0e,158,testStepSanitizer deno:runtime/js/40_testing.js:156:44,0xb7b083be9d0,~
code-source-info,0xb7b0849ea0e,71,4678,7019,C4O4678C37O4693C40O4766C43O4775C48O4775C54O4807C57O4812C62O4812C66O4840C79O4849C84O4846C96O4840C119O4881C133O7018,,
code-creation,LazyCompile,10,122811,0xb7b0849ed9e,162,preValidation deno:runtime/js/40_testing.js:165:29,0xb7b0849e944,~
code-source-info,0xb7b0849ed9e,71,4928,6314,C0O4928C5O4962C9O5044C16O5076C21O5044C27O5175C33O5182C38O5199C48O5367C58O5367C64O5419C72O5420C77O5307C83O5205C88O5199C89O5464C92O5473C98O5503C104O5510C109O5527C119O5664C129O5664C135O5699C143O5700C148O5635C154O5533C159O5527C161O6313,,
code-creation,LazyCompile,10,122922,0xb7b0849f012,317,getPotentialConflictingRunningSteps deno:runtime/js/40_testing.js:188:53,0xb7b0849ec70,~
code-source-info,0xb7b0849f012,71,5788,6306,C0O5855C3O5886C6O5930C9O5930C14O5930C43O5913C71O5913C74O5992C107O5968C138O5968C141O6018C143O6034C148O6067C150O6124C156O6153C164O6153C169O5957C244O6237C249O5902C314O6281C316O6296,,
code-creation,LazyCompile,10,122995,0xb7b0849f22e,91,ancestors deno:runtime/js/40_testing.js:578:15,0xb7b0829153c,~
code-source-info,0xb7b0849f22e,71,15415,15552,C10O15415C15O15415C35O15415C39O15446C44O15467C48O15487C57O15487C77O15487C81O15531C86O15460C90O15551,,
tick,0x556369030d50,123064,0,0x0,3,0x55636916ccf0,0xb7b0849f020,0xb7b0849eda3,0xb7b0849ea33,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
code-creation,LazyCompile,10,123107,0xb7b0849f332,11,get parent deno:runtime/js/40_testing.js:512:15,0xb7b082912a4,~
code-source-info,0xb7b0849f332,71,13711,13755,C0O13722C2O13734C6O13742C10O13749,,
code-creation,LazyCompile,10,123174,0xb7b0849f3e2,35,get usesSanitizer deno:runtime/js/40_testing.js:528:22,0xb7b0829139c,~
code-source-info,0xb7b0849f3e2,71,14079,14207,C0O14090C2O14102C6O14110C14O14144C18O14152C26O14180C30O14188C34O14201,,
code-creation,LazyCompile,10,123232,0xb7b0849f4d2,32,canStreamReporting deno:runtime/js/40_testing.js:557:23,0xb7b082914d4,~
code-source-info,0xb7b0849f4d2,71,14856,15138,C0O15028C5O15028C11O15078C16O15087C26O15087C31O15132,,
code-creation,LazyCompile,10,123290,0xb7b0849f5d6,157,selfAndAllAncestorsUseSanitizer deno:runtime/js/40_testing.js:564:36,0xb7b08291508,~
code-source-info,0xb7b0849f5d6,71,15175,15399,C0O15196C6O15221C7O15234C8O15278C13O15278C42O15261C70O15261C73O15315C79O15342C86O15250C155O15381C156O15393,,
code-creation,LazyCompile,10,123351,0xb7b0849f716,44,reportWait deno:runtime/js/40_testing.js:594:15,0xb7b082915a4,~
code-source-info,0xb7b0849f716,71,15731,15904,C0O15751C6O15773C12O15791C13O15798C14O15814C21O15838C27O15861C33O15814C37O15873C38O15891C43O15903,,
code-creation,LazyCompile,10,123426,0xb7b0849f856,44,createTestContext deno:runtime/js/40_testing.js:661:29,0xb7b082917a4,~
code-source-info,0xb7b0849f856,71,17122,20678,C0O17122C9O17141C18O17157C24O17177C32O17347C43O20674,,
code-creation,LazyCompile,10,123500,0xb7b0849f92e,60, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.test.ts:8:50,0xb7b08362690,~
code-source-info,0xb7b0849f92e,80,417,543,C0O444C8O454C11O444C16O471C22O491C32O471C37O509C43O529C53O509C59O542,,
code-creation,LazyCompile,10,123568,0xb7b0849fa32,92,calculate file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:66:19,0xb7b08372d8c,~
code-source-info,0xb7b0849fa32,82,2190,2452,C0O2220C5O2220C10O2265C15O2265C20O2296C26O2326C30O2330C36O2347C40O2351C44O2339C51O2387C55O2394C58O2379C62O2399C67O2424C71O2431C74O2416C78O2436C82O2408C91O2450,,
code-creation,LazyCompile,10,123673,0xb7b0849fbea,93,getBoardsAndInput file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:2:27,0xb7b08372cf0,~
code-source-info,0xb7b0849fbea,82,48,703,C0O88C8O88C14O124C19O583C25O615C29O619C37O619C43O629C53O630C62O671C70O671C76O679C81O680C92O701,,
code-creation,LazyCompile,10,123746,0xb7b0849fede,5, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:20:43,0xb7b0849fb48,~
code-source-info,0xb7b0849fede,82,634,643,C0O641C2O641C4O643,,
code-creation,LazyCompile,10,123819,0xb7b084a0002,147,getBoard file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:4:22,0xb7b0849fb14,~
code-source-info,0xb7b084a0002,82,124,577,C0O164C7O177C14O212C22O212C28O246C30O251C32O253C34O251C39O297C41O302C43O304C45O302C50O345C55O351C67O421C71O425C80O437C83O433C92O448C95O444C99O425C105O415C113O477C119O503C123O351C128O317C133O284C136O266C141O233C144O558C146O571,,
code-creation,LazyCompile,10,123981,0xb7b084a030a,131,getAllWinningBoards file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:48:29,0xb7b08372d58,~
code-source-info,0xb7b084a030a,82,1602,2170,C0O1640C3O1671C7O1671C13O1699C15O1711C20O1717C24O1704C29O1760C36O1765C40O1791C42O1803C47O1810C51O1796C56O1857C61O1857C68O1902C75O1908C79O1944C84O1944C90O1990C92O2038C97O2038C102O2087C107O2087C112O1819C117O1778C120O1726C125O1686C128O2147C130O2168,,
tick,0x556368c73001,124091,0,0x0,2,0x55636916ccf0,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
code-creation,LazyCompile,10,124124,0xb7b084a05a6,352,winCalculator file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:24:23,0xb7b08372d24,~
code-source-info,0xb7b084a05a6,82,727,1572,C0O770C2O794C13O1547C22O822C30O807C35O813C39O799C55O846C62O851C66O855C73O859C78O891C85O896C90O904C94O924C96O962C100O1006C106O1531C128O1026C132O1026C137O1011C144O1013C146O1011C164O1068C169O1074C179O1074C185O1107C194O1119C196O1115C201O1159C206O1165C216O1165C222O1198C231O1210C233O1206C237O1238C239O1271C246O1312C250O1360C255O1395C266O1395C272O1445C285O1446C297O1500C303O993C329O781C350O1553C351O1570,,
code-creation,LazyCompile,10,124191,0xb7b084a0862,19, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:33:50,0xb7b084a044c,~
code-source-info,0xb7b084a0862,82,1081,1106,C0O1090C7O1096C9O1092C14O1103C18O1106,,
code-creation,LazyCompile,10,124228,0xb7b084a0932,19, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:34:40,0xb7b084a0480,~
code-source-info,0xb7b084a0932,82,1172,1197,C0O1181C7O1187C9O1183C14O1194C18O1197,,
code-creation,Function,11,124328,0xb7b00045840,2928,winCalculator file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:24:23,0xb7b08372d24,^
code-source-info,0xb7b00045840,82,727,1572,,,
code-creation,Function,11,124359,0xb7b00046400,456,opSync deno:core/01_core.js:141:18,0xb7b080e5d80,^
code-source-info,0xb7b00046400,4,4294,4403,,,
code-creation,Function,11,124395,0xb7b00046640,1488, deno:core/01_core.js:177:7,0xb7b0849e314,^
code-source-info,0xb7b00046640,4,5085,5127,,,
code-creation,Function,11,124414,0xb7b00046c80,52, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:20:43,0xb7b0849fb48,^
code-source-info,0xb7b00046c80,82,634,643,,,
code-creation,Function,11,124441,0xb7b00046d00,1076,getBoard file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:4:22,0xb7b0849fb14,^
code-source-info,0xb7b00046d00,82,124,577,,,
code-creation,Function,11,124461,0xb7b00047180,212, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:33:50,0xb7b084a044c,^
code-source-info,0xb7b00047180,82,1081,1106,,,
code-creation,Function,11,124476,0xb7b000472c0,212, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:34:40,0xb7b084a0480,^
code-source-info,0xb7b000472c0,82,1172,1197,,,
tick,0x5563697f1980,125839,0,0x0,4,0x55636916d6d0,0x5563698d94bc,0xb7b00045f2a,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x556369595850,126406,0,0x0,4,0x55636916d6d0,0x5563698d94bc,0xb7b00045f2a,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x5563695abe20,127486,0,0x0,4,0x55636916d6d0,0x5563698d94bc,0xb7b00045f2a,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x5563697c9a50,128789,0,0x0,4,0x55636916d6d0,0x5563698d94bc,0xb7b00045f2a,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x5563696478d0,129729,0,0x0,4,0x55636916d6d0,0x5563698d94bc,0xb7b00045f2a,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x55636957d0c0,130817,0,0x0,4,0x55636916d6d0,0x5563698d94bc,0xb7b00045f2a,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x5563697879b8,131773,0,0x0,4,0x55636916d6d0,0x5563698d94bc,0xb7b00045e00,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
new,MemoryChunk,0xb7b084c0000,262144
new,MemoryChunk,0xb7b08500000,262144
new,MemoryChunk,0xb7b08540000,262144
new,MemoryChunk,0xb7b08580000,262144
scavenge,begin,0,113227,1638619350940
new,MemoryChunk,0xb7b085c0000,262144
tick,0x7f056cc088c8,132987,0,0x0,1
scavenge,end,0,113796,1638619350940
tick,0x5563698a4d00,134626,0,0x0,0,0x5563698d94bc,0xb7b00045e00,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x5563698d9393,135155,0,0x0,0,0xb7b00045e00,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
tick,0x5563698a4ec9,136193,0,0x0,0,0x5563698d94bc,0xb7b00045f2a,0xb7b084a035e,0xb7b0849fa41,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
code-creation,LazyCompile,10,136508,0xb7b084a0ce6,6, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:39:37,0xb7b084a04b4,~
code-source-info,0xb7b084a0ce6,82,1402,1415,C0O1412C5O1415,,
code-creation,LazyCompile,10,136595,0xb7b084a0d9a,8, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:40:37,0xb7b084a04e8,~
code-source-info,0xb7b084a0d9a,82,1453,1472,C0O1469C4O1465C7O1472,,
code-creation,LazyCompile,13,136936,0xb7b00047400,292, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:34:40,0xb7b084a0480,*
code-source-info,0xb7b00047400,82,1172,1197,C0O1172C54O1181C92O1187C105O1183C124O1197C157O1194C163O1197C165O1172C214O1187,,
feedback-vector,136983,0xb7b084a0970,5,0xb7b00047400,OptimizationMarker::kInOptimizationQueue,OptimizationTier::kNone,63741,0,object-printing-disabled
code-creation,LazyCompile,13,137031,0xb7b000475c0,292, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:33:50,0xb7b084a044c,*
code-source-info,0xb7b000475c0,82,1081,1106,C0O1081C54O1090C92O1096C105O1092C124O1106C157O1103C163O1106C165O1081C214O1096,,
feedback-vector,137072,0xb7b084a08a0,5,0xb7b000475c0,OptimizationMarker::kInOptimizationQueue,OptimizationTier::kNone,63767,0,object-printing-disabled
tick,0x55636995b100,137308,0,0x0,0,0xb7b0849fa5a,0xb7b0849f939,0xb7b0849ea62,0xb7b0837fbea,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0xb7b0847efa0
code-creation,LazyCompile,10,137434,0xb7b084a1396,203,assertEquals https://deno.land/std@0.116.0/testing/asserts.ts:151:29,0xb7b0836fe10,~
code-source-info,0xb7b084a1396,81,5481,6233,C0O5511C4O5515C11O5550C12O5557C13O5582C16O5611C20O5611C25O5655C29O5655C37O5711C48O5814C50O5839C56O5839C63O5879C69O5897C77O5897C83O5925C91O5925C97O5879C103O5963C106O5976C113O5990C117O5963C123O6003C131O6004C137O6024C142O6060C150O6032C151O6097C154O6112C162O6116C165O6112C180O6153C184O6172C189O6197C197O6203C202O6197,,
code-creation,LazyCompile,10,137764,0xb7b084a15f6,30,equal https://deno.land/std@0.116.0/testing/asserts.ts:63:22,0xb7b0836fda8,~
code-source-info,0xb7b084a15f6,81,2159,5158,C0O2159C8O2185C12O2185C17O2185C19O2200C24O5149C29O5156,,
code-creation,LazyCompile,10,137814,0xb7b084a17ae,1604,compare https://deno.land/std@0.116.0/testing/asserts.ts:65:29,0xb7b084a159c,~
code-source-info,0xb7b084a17ae
code-creation,LazyCompile,10,138070,0xb7b084a21f6,196,postValidation deno:runtime/js/40_testing.js:208:30,0xb7b0849e97c,~
code-source-info,0xb7b084a21f6,71,6345,7013,C0O6397C3O6406C9O6438C21O6550C27O6444C32O6438C33O6735C36O6735C41O6735C70O6718C98O6718C101O6773C107O6798C119O6892C125O6804C130O6798C131O6707C195O7012,,
code-creation,LazyCompile,10,138147,0xb7b084a23ce,23,get hasRunningChildren deno:runtime/js/40_testing.js:541:27,0xb7b08291448,~
code-source-info,0xb7b084a23ce,71,14481,14639,C0O14492C7O14532C17O14499C22O14633,,
code-creation,LazyCompile,10,138294,0xb7b084a247e,12, deno:runtime/js/40_testing.js:48:27,0xb7b0837facc,~
code-source-info,0xb7b084a247e,71,1583,1618,C0O1596C6O1596C11O1618,,
tick,0x556368b8fef7,138365,0,0x0,3,0x55636916ccf0,0x55636991414a,0xb7b0837fc2c,0x55636987f6c1
code-creation,LazyCompile,10,138405,0xb7b084a251e,51,setTimeout deno:ext/timers/01_timers.js:536:22,0xb7b08231fd4,~
code-source-info,0xb7b084a251e,41,15292,15422,C0O15292C18O15339C24O15357C27O15357C31O15378C45O15385C50O15418,,
code-creation,LazyCompile,10,138471,0xb7b084a2612,34,checkThis deno:ext/timers/01_timers.js:483:21,0xb7b08231f6c,~
code-source-info,0xb7b084a2612,41,13770,13919,C0O13786C8O13847C11O13843C16O13867C26O13873C31O13867C33O13918,,
code-creation,LazyCompile,10,138578,0xb7b084a27fa,227,setTimer deno:ext/timers/01_timers.js:489:20,0xb7b08231fa0,~
code-source-info,0xb7b084a27fa,41,13940,15269,C0O14204C2O14219C8O14257C12O14268C15O14294C25O14268C33O14335C38O14346C43O14364C47O14611C52O14611C56O14626C58O14638C60O14636C65O14659C70O14667C77O14684C87O14710C93O14750C97O14667C102O14813C106O14834C115O14859C119O14842C126O14931C133O14954C143O14954C157O14964C163O14980C169O14992C175O15014C184O15029C191O15134C198O15150C201O15163C209O15134C214O15223C217O15223C222O15262C226O15265,,
code-creation,LazyCompile,10,138744,0xb7b084a2a3e,137,schedule deno:ext/timers/01_timers.js:397:20,0xb7b08231ed0,~
code-source-info,0xb7b084a2a3e,41,10440,11221,C0O10459C3O10473C9O10459C13O10489C16O10509C20O10500C24O10489C28O10623C33O10636C44O10673C49O10681C54O10681C60O10708C62O10738C67O10746C72O10746C77O10777C82O10892C87O10919C92O10892C97O10939C98O10955C102O11100C110O11133C113O11158C117O11150C122O11171C125O11201C130O11171C136O11220,,
code-creation,LazyCompile,10,138839,0xb7b084a2bc2,33,assert deno:ext/timers/01_timers.js:38:18,0xb7b082318b8,~
code-source-info,0xb7b084a2bc2,41,787,886,C14O827C18O846C25O852C30O846C32O885,,
code-creation,LazyCompile,10,138936,0xb7b084a2c66,65,find deno:ext/timers/01_timers.js:109:9,0xb7b08231bbc,~
code-source-info,0xb7b084a2c66,41,2181,2445,C0O2206C2O2211C6O2235C10O2265C12O2270C16O2292C27O2281C33O2307C34O2313C39O2343C43O2348C44O2386C50O2397C54O2386C60O2224C63O2427C64O2439,,
code-creation,LazyCompile,10,139110,0xb7b084a2dc6,387,insert deno:ext/timers/01_timers.js:123:11,0xb7b08231bf0,~
code-source-info,0xb7b084a2dc
code-creation,LazyCompile,10,139240,0xb7b084a30ba,23,RBNode deno:ext/timers/01_timers.js:67:16,0xb7b082319f0,~
code-source-info,0xb7b084a30ba,41,1411,1521,C0O1426C2O1436C6O1450C7O1460C11O1474C12O1485C16O1499C17O1508C22O1520,,
code-creation,LazyCompile,10,139335,0xb7b084a3176,23,setOrClearGlobalTimeout deno:ext/timers/01_timers.js:389:35,0xb7b08231e9c,~
code-source-info,0xb7b084a3176,41,10299,10419,C0O10316C5O10341C8O10341C13O10382C16O10382C22O10418,,
tick,0x556368b9bc15,139393,0,0x0,3,0x55636916ccf0,0xb7b084a2ac0,0xb7b084a28d3,0xb7b084a254b,0xb7b084a2484,0x55636991414a,0xb7b0837fc2c,0x55636987f6c1
code-creation,LazyCompile,10,139439,0xb7b084a3266,160,setGlobalTimeout deno:ext/timers/01_timers.js:344:34,0xb7b08231e34,~
code-source-info,0xb7b084a3266,41,8356,9422,C10O8356C18O8565C20O8569C24O8580C28O8595C32O8580C36O8642C38O8659C44O8670C53O8683C59O9312C62O9312C66O9345C69O9351C80O9345C103O9376C112O9389C118O9397C121O9397C135O9421,,
code-creation,LazyCompile,10,139511,0xb7b084a33b2,20,opStartGlobalTimer deno:ext/timers/01_timers.js:48:30,0xb7b08231920,~
code-source-info,0xb7b084a33b2,41,996,1069,C0O1012C5O1024C13O1024C19O1065,,
code-creation,LazyCompile,10,139952,0xb7b084a3486,103,opWaitGlobalTimer deno:ext/timers/01_timers.js:52:35,0xb7b08231954,~
code-source-info,0xb7b084a3486,41,1105,1156,C10O1105C18O1114C23O1125C31O1125C44O1114C78O1155,,
code-creation,LazyCompile,10,140048,0xb7b084a35aa,107,opAsync deno:core/01_core.js:133:19,0xb7b080e5d4c,~
code-source-info,0xb7b084a35aa,4,3941,4275,C23O4000C35O4013C44O4040C51O4052C56O4060C69O4040C75O4149C77O4165C80O4172C84O4199C85O4204C93O4232C101O4211C106O4271,,
tick,0x556369f2d870,140578,1,0x55636a634a00,6,0x556368c1e490,0xb7b084a35ef,0xb7b084a34a5,0xb7b084a32ab,0xb7b084a3186,0xb7b084a2ac0,0xb7b084a28d3,0xb7b084a254b,0xb7b084a2484,0x55636991414a,0xb7b0837fc2c,0x55636987f6c1
code-creation,LazyCompile,10,140698,0xb7b084a36ee,76,setPromise deno:core/01_core.js:47:22,0xb7b080e5898,~
code-source-info,0xb7b084a36ee,4,1234,1593,C0O1264C2O1276C4O1274C8O1351C15O1362C19O1373C21O1392C23O1388C28O1433C30O1445C32O1443C36O1462C43O1478C52O1462C57O1550C65O1576C69O1574C75O1589,,
code-creation,LazyCompile,10,140808,0xb7b084a3856,52,newPromise deno:core/01_core.js:74:22,0xb7b080e5a04,~
code-source-info,0xb7b084a3856,4,2097,2325,C0O2097C11O2110C12O2110C14O2119C15O2119C17O2147C31O2147C37O2246C39O2262C43O2277C45O2292C49O2306C51O2321,,
code-creation,LazyCompile,10,140878,0xb7b084a3936,18, deno:core/01_core.js:76:33,0xb7b084a37e4,~
code-source-info,0xb7b084a3936,4,2159,2239,C0O2190C2O2198C8O2216C10O2223C17O2238,,
tick,0x7f056c9e192e,141548,0,0x0,6
code-creation,LazyCompile,13,141658,0xb7b00047780,2648,winCalculator file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:24:23,0xb7b08372d24,*
code-source-info,0xb7bxb7b084a044cS0xb7b084a0480
feedback-vector,141750,0xb7b084a09a4,50,0xb7b00047780,OptimizationMarker::kInOptimizationQueue,OptimizationTier::kNone,41,0,object-printing-disabled
tick,0x7f056c9e192e,142597,0,0x0,6
tick,0x7f056c9e192e,143653,0,0x0,6
code-creation,LazyCompile,10,143722,0xb7b084a496e,57,opresolve deno:core/01_core.js:94:21,0xb7b080e5b2c,~
code-source-info,0xb7b084a496e,4,2561,2774,C0O2561C2O2583C4O2600C8O2588C13O2642C15O2651C19O2674C21O2686C24O2683C28O2714C31O2714C36O2751C41O2751C46O2610C52O2570C56O2773,,
code-creation,LazyCompile,10,143819,0xb7b084a4a76,87,getPromise deno:core/01_core.js:59:22,0xb7b080e59d0,~
code-source-info,0xb7b084a4a76,4,1616,2074,C0O1706C2O1718C7O1734C9O1732C12O1716C16O1749C18O1790C25O1806C28O1790C34O1836C41O1855C44O1836C49O1885C51O1900C52O1955C54O1967C56O1965C60O1998C67O2009C71O2020C78O2039C80O2037C84O2055C86O2070,,
code-creation,LazyCompile,10,143946,0xb7b084a4bf6,242,prepareReadyTimers deno:ext/timers/01_timers.js:367:30,0xb7b08231e68,~
code-source-info,0xb7b084a4bf6,41,9453,10263,C0O9474C5O9474C9O9554C17O9587C21O9601C26O9614C27O9621C28O9751C30O9814C35O9798C40O9798C47O9829C54O9833C59O9849C64O9857C69O9857C74O9958C103O9937C131O9937C134O10044C135O10060C139O10134C146O10153C149O10134C157O9926C220O9768C223O10198C228O10222C230O10249C235O10198C241O10262,,
code-creation,LazyCompile,10,144044,0xb7b084a4dc2,29,min deno:ext/timers/01_timers.js:97:8,0xb7b08231b88,~
code-source-info,0xb7b084a4dc2,41,1930,2112,C0O1951C2O1956C6O1969C8O1997C9O2009C10O2035C16O2070C21O2024C24O2101C28O2106,,
code-creation,LazyCompile,10,144237,0xb7b084a4ece,605,remove deno:ext/timers/01_timers.js:199:11,0xb7b08231c24,~
code-source-info,0xb7b084a4ece
code-creation,LazyCompile,10,144407,0xb7b084a5316,15,getChild deno:ext/timers/01_timers.js:74:13,0xb7b08231a24,~
code-source-info,0xb7b084a5316,41,1535,1591,C0O1549C4O1567C10O1580C14O1585,,
code-creation,LazyCompile,10,144458,0xb7b084a53a2,13, deno:ext/timers/01_timers.js:319:30,0xb7b08231d98,~
code-source-info,0xb7b084a53a2,41,7434,7457,C0O7446C5O7454C9O7450C12O7457,,
code-creation,LazyCompile,10,144505,0xb7b084a542a,11,isRed deno:ext/timers/01_timers.js:288:17,0xb7b08231cfc,~
code-source-info,0xb7b084a542a,41,6772,6822,C0O6785C3O6797C6O6814C10O6818,,
code-creation,LazyCompile,10,144560,0xb7b084a54b6,20,setChild deno:ext/timers/01_timers.js:78:13,0xb7b08231a58,~
code-source-info,0xb7b084a54b6,41,1605,1714,C0O1624C4O1643C6O1654C12O1684C14O1694C19O1713,,
code-creation,LazyCompile,10,144626,0xb7b084a554a,18,clearGlobalTimeout deno:ext/timers/01_timers.js:321:30,0xb7b08231dcc,~
code-source-info,0xb7b084a554a,41,7490,7552,C0O7499C4O7516C10O7528C13O7528C17O7551,,
tick,0x55636983f08d,144682,0,0x0,0,0xb7b084a317e,0xb7b084a4ce1,0xb7b084a32df,0x55636987f6c1
code-creation,LazyCompile,10,144695,0xb7b084a55e2,20,opStopGlobalTimer deno:ext/timers/01_timers.js:44:29,0xb7b082318ec,~
code-source-info,0xb7b084a55e2,41,916,965,C0O925C5O930C13O930C19O964,,
code-creation,LazyCompile,10,144793,0xb7b084a569a,120,fire deno:ext/timers/01_timers.js:456:16,0xb7b08231f38,~
code-source-info,0xb7b084a569a,41,12720,13748,C0O12888C7O12909C10O12922C15O12893C22O12935C23O12942C24O13037C30O13122C37O13141C40O13154C45O13122C52O13337C57O13337C61O13354C63O13366C66O13385C71O13397C75O13389C79O13366C84O13364C88O13411C91O13411C96O13629C101O13643C105O13687C110O13718C114O13727C119O13747,,
code-creation,LazyCompile,10,144874,0xb7b084a584e,21,get shouldSkipSanitizers deno:runtime/js/40_testing.js:537:29,0xb7b082913f0,~
code-source-info,0xb7b084a584e,71,14379,14453,C0O14402C6O14429C13O14435C20O14447,,
tick,0x5563698cc767,145794,0,0x0,0,0x55636990c34c,0xb7b0849e4a8,0xb7b0837fc77,0x55636987f6c1
code-creation,Function,11,145959,0xb7b00048300,5428,asyncOpSanitizer deno:runtime/js/40_testing.js:40:43,0xb7b083beacc,^
code-source-info,0xb7b00048300,71,1229,3207,,,
code-creation,Function,11,146011,0xb7b00049880,1012,getAllWinningBoards file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:48:29,0xb7b08372d58,^
code-source-info,0xb7b00049880,82,1602,2170,,,
code-creation,Function,11,146044,0xb7b00049cc0,88, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:39:37,0xb7b084a04b4,^
code-source-info,0xb7b00049cc0,82,1402,1415,,,
code-creation,Function,11,146071,0xb7b00049d80,80, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:40:37,0xb7b084a04e8,^
code-source-info,0xb7b00049d80,82,1453,1472,,,
code-creation,LazyCompile,10,146572,0xb7b084a5b32,33,assert deno:runtime/js/06_util.js:39:18,0xb7b081f6124,~
code-source-info,0xb7b084a5b32,55,909,1008,C14O949C18O968C25O974C30O968C32O1007,,
code-creation,LazyCompile,10,146684,0xb7b084a5c12,28,failedChildStepsCount deno:runtime/js/40_testing.js:549:26,0xb7b082914a0,~
code-source-info,0xb7b084a5c12,71,14666,14832,C0O14677C7O14719C17O14684C23O14818C27O14826,,
code-creation,LazyCompile,10,146762,0xb7b084a5d12,63,reportTestResult deno:runtime/js/40_testing.js:394:28,0xb7b08291090,~
code-source-info,0xb7b084a5d12,71,10801,10921,C0O10831C5O10836C18O10885C27O10886C36O10892C45O10900C55O10836C62O10920,,
tick,0x556368be6e61,146834,1,0x55636a6330f0,6,0x556368c1e490,0xb7b00046595,0xb7b084a5d49,0xb7b0847f5a5,0x55636987f6c1
code-creation,LazyCompile,10,147877,0xb7b084a5e2a,60, file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.test.ts:13:49,0xb7b083626c4,~
code-source-info,0xb7b084a5e2a,80,594,722,C0O621C8O631C11O621C16O648C22O668C32O648C37O687C43O707C53O687C59O721,,
tick,0x7f056c965f48,147956,0,0x0,3,0x55636916ccf0,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x7f056ca3f5c0,148965,0,0x0,0,0x556369148ce0,0x5563698b8bae,0xb7b00046dc0,0x5563698e764d,0xb7b0849fc3b,0xb7b0849fa37,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,133492,1638619350957
new,MemoryChunk,0xb7b08600000,262144
scavenge,end,0,133937,1638619350957
tick,0xb7b00047de8,150028,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b00047aab,151092,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b00047dfc,152180,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b00047a0f,153210,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,137427,1638619350961
new,MemoryChunk,0xb7b08640000,262144
scavenge,end,0,137977,1638619350961
tick,0xb7b00047e20,154269,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b00047e20,155350,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b00047de8,156446,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,140815,1638619350964
scavenge,end,0,140946,1638619350964
tick,0x55636984b34d,157501,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b00047aa8,158560,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,143706,1638619350967
scavenge,end,0,143836,1638619350967
tick,0x7f056c9d293f,159623,0,0x0,1
tick,0xb7b00047f37,160645,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b00047e08,161727,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,146258,1638619350969
scavenge,end,0,146364,1638619350969
tick,0x0,162755,0,0x0,5
tick,0x5563698830ef,163815,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x5563698d938c,164885,0,0x0,0,0xb7b00045f2a,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x556369888bcf,165950,0,0x0,0,0xb7b00045a02,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x556369883181,167009,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,153044,1638619350975
scavenge,end,0,153231,1638619350975
tick,0x556369169596,168067,0,0x0,0,0x556369169520,0xb7b00045b39,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b000475ca,169142,0,0x0,0,0xb7b00045e00,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x5563698d9411,170210,0,0x0,0,0xb7b00045e00,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x5563698d93ee,171287,0,0x0,0,0xb7b00045e00,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x5563698830d5,172418,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x556369883236,173503,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
code-creation,LazyCompile,13,173818,0xb7b00049e40,4484,winCalculator file:///home/raf/dev/AdventOfCode-Deno/src/2021/day04.ts:24:23,0xb7b08372d24,*
code-source-info,0xb7b00049e40,82,727,1572,C0O727C61O807C140O1547C155O822C178O807C211O813C227O799C335O851C368O855C393O859C413O904C430O962C580O1531C618O1026C670O1011C841O1074C878O1096I0C960O1074C1007O1090I0C1027O1096I0C1037O1092I0C1058O1103I0C1064O1074C1225O993C1259O781C1289O1570C1322O727C1466O1026C1531O1074C1690O1107C1693O1115C1762O1165C1883O1181I1C1904O1187I1C1922O1183I1C1943O1194I1C1949O1165C2256O1198C2259O1206C2283O1238C2292O993C2401O781C2530O1187I1C2645O1271C2681O1312C2704O1395C3627O1445C3772O1446C4030O1500C4038O1096I0,F0O1074F1O1165,S0xb7b084a044cS0xb7b084a0480
feedback-vector,173949,0xb7b084a09a4,50,0xb7b00049e40,OptimizationMarker::kInOptimizationQueue,OptimizationTier::kNone,441,0,object-printing-disabled
tick,0xb7b0004a5ad,174580,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,168597,1638619350982
scavenge,end,0,168843,1638619350983
tick,0xb7b0004a6b0,175653,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b0004a70b,176679,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,170578,1638619350985
tick,0x556368e081b8,177727,0,0x0,1
scavenge,end,0,170784,1638619350985
tick,0xb7b0004a5ad,178786,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b0004a609,179840,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,172961,1638619350987
scavenge,end,0,173085,1638619350987
tick,0xb7b0004a70b,180904,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b0004a6f8,181959,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,175267,1638619350989
scavenge,end,0,175382,1638619350990
tick,0xb7b0004a660,183091,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b0004a5ad,184145,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,177500,1638619350992
scavenge,end,0,177640,1638619350992
tick,0xb7b0004a0f7,185275,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x55636984b36d,186370,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,179820,1638619350994
scavenge,end,0,179950,1638619350994
tick,0xb7b0004a58c,187432,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b0004a535,188570,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,182139,1638619350996
scavenge,end,0,182264,1638619350996
tick,0xb7b0004a293,189727,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,184395,1638619350998
tick,0x7f056c9d809b,190836,0,0x0,1
scavenge,end,0,184625,1638619350998
tick,0xb7b0004a256,191887,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0xb7b0004a598,192919,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,186884,1638619351000
scavenge,end,0,187025,1638619351000
tick,0xb7b0004a598,193975,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x55636984b351,195032,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
scavenge,begin,0,188934,1638619351002
scavenge,end,0,189088,1638619351003
tick,0xb7b0004a5da,196093,0,0x0,0,0xb7b00049af5,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x5563698831af,197151,0,0x0,0,0xb7b0849fa41,0xb7b084a5e35,0xb7b0849ea62,0xb7b00048472,0xb7b0837f6c0,0xb7b0837f246,0xb7b0837ed13,0xb7b0847f55a,0x55636987f6c1
tick,0x7f056c9e192e,198212,0,0x0,6
tick,0x7f056c9e192e,199306,0,0x0,6
tick,0x7f056c9e192e,200359,0,0x0,6
tick,0x7f056c9e192e,201444,0,0x0,6
tick,0x7f056c9e192e,202474,0,0x0,6
tick,0x556369a7ce43,204255,0,0x0,6
code-creation,Script,10,204281,0xb7b084a84ea,31, [deno:cli/tools/test.rs:505:6]:1:1,0xb7b084a846c,~
script-source,99,[deno:cli/tools/test.rs:505:6],window.dispatchEvent(new Event('unload'));
code-source-info,0xb7b084a84ea,99,0,42,C0O0C4O7C9O25C18O21C24O7C30O42,,
code-creation,LazyCompile,10,204408,0xb7b084a85ca,18,getDispatched deno:ext/web/02_event.js:41:25,0xb7b0817ecd4,~
code-source-info,0xb7b084a85ca,14,1182,1235,C0O1196C7O1217C9O1216C13O1203C17O1231,,
code-creation,LazyCompile,10,204457,0xb7b084a867a,15,get eventPhase deno:ext/web/02_event.js:339:19,0xb7b0817f6e4,~
code-source-info,0xb7b084a867a,14,8302,8355,C0O8313C4O8325C6O8324C10O8338C14O8349,,
tick,0x556368c77b10,204598,0,0x0,2,0x55636916ccf0,0xb7b0847ecd2,0xb7b084a8502
code-creation,LazyCompile,10,204677,0xb7b084a88ee,824,dispatch deno:ext/web/02_event.js:516:20,0xb7b0817fc58,~
code-source-info,0xb7b084a88ee
code-creation,LazyCompile,10,204794,0xb7b084a8e62,13,setDispatched deno:ext/web/02_event.js:64:25,0xb7b0817f034,~
code-source-info,0xb7b084a8e62,14,1620,1672,C0O1641C2O1647C7O1660C12O1671,,
code-creation,LazyCompile,10,204849,0xb7b084a8eea,9,hasRelatedTarget deno:ext/web/02_event.js:100:28,0xb7b0817f1a0,~
code-source-info,0xb7b084a8eea,14,2304,2363,C0O2327C5O2350C8O2359,,
code-creation,LazyCompile,10,204910,0xb7b084a8f9a,69,retarget deno:ext/web/02_event.js:820:20,0xb7b0817fd5c,~
code-source-info,0xb7b084a8f9a,14,19987,20319,C0O20021C3O20026C9O20047C11O20056C12O20088C17O20088C22O20110C24O20131C27O20147C36O20181C45O20194C52O20253C54O20262C55O20282C58O20286C64O20000C68O20318,,
code-creation,LazyCompile,10,204968,0xb7b084a909a,23,isNode deno:ext/web/02_event.js:446:18,0xb7b0817fb54,~
code-source-info,0xb7b084a909a,14,10606,10696,C0O10635C7O10650C14O10676C18O10642C22O10692,,
code-creation,LazyCompile,10,205040,0xb7b084a91fe,115,appendToEventPath deno:ext/web/02_event.js:493:29,0xb7b0817fc24,~
code-source-info,0xb7b084a91fe,14,11583,12101,C0O11726C3O11726C15O11757C20O11744C25O11804C28O11804C37O11834C44O11850C48O11869C56O11888C68O11922C74O11936C80O11968C86O11990C92O12028C98O12048C104O12072C108O11869C114O12100,,
code-creation,LazyCompile,10,205104,0xb7b084a9342,47,isShadowRoot deno:ext/web/02_event.js:472:24,0xb7b0817fbbc,~
code-source-info,0xb7b084a9342,14,11110,11290,C0O11127C7O11149C12O11169C18O11206C25O11219C27O11215C35O11253C40O11271C42O11134C46O11286,,
code-creation,LazyCompile,10,205151,0xb7b084a9402,14,getPath deno:ext/web/02_event.js:45:19,0xb7b0817ef64,~
code-source-info,0xb7b084a9402,14,1255,1299,C0O1269C2O1282C4O1281C13O1295,,
code-creation,LazyCompile,10,205215,0xb7b084a94c6,28,isSlotable deno:ext/web/02_event.js:481:22,0xb7b0817fbf0,~
code-source-info,0xb7b084a94c6,14,11313,11406,C0O11339C8O11354C19O11389C23O11346C27O11402,,
code-creation,LazyCompile,10,205262,0xb7b084a957e,17,getParent deno:ext/web/02_event.js:436:21,0xb7b0817faec,~
code-source-info,0xb7b084a957e,14,10368,10451,C0O10388C3O10395C9O10429C16O10447,,
code-creation,LazyCompile,10,205304,0xb7b084a9622,3,get CAPTURING_PHASE deno:ext/web/02_event.js:327:31,0xb7b0817f5ec,~
code-source-info,0xb7b084a9622,14,8147,8173,C0O8158C2O8167,,
code-creation,LazyCompile,10,205345,0xb7b084a9692,16,setEventPhase deno:ext/web/02_event.js:68:25,0xb7b0817f068,~
code-source-info,0xb7b084a9692,14,1698,1761,C0O1719C2O1725C4O1724C10O1749C15O1760,,
code-creation,LazyCompile,10,205388,0xb7b084a9732,3,get AT_TARGET deno:ext/web/02_event.js:331:25,0xb7b0817f640,~
code-source-info,0xb7b084a9732,14,8199,8225,C0O8210C2O8219,,
code-creation,LazyCompile,10,205423,0xb7b084a97b2,3,get BUBBLING_PHASE deno:ext/web/02_event.js:335:30,0xb7b0817f690,~
code-source-info,0xb7b084a97b2,14,8256,8282,C0O8267C2O8276,,
code-creation,LazyCompile,10,205495,0xb7b084a9846,118,invokeEventListeners deno:ext/web/02_event.js:769:32,0xb7b0817fcc0,~
code-source-info,0xb7b084a9846,14,18827,19332,C0O18865C3O18865C8O18908C13O18908C19O18961C20O18975C21O18975C26O19004C28O19008C32O19025C38O19043C41O19066C46O19043C51O19083C53O18982C58O18948C61O19109C64O19143C69O19109C74O19178C80O19200C81O19207C82O19219C85O19253C90O19219C95O19265C101O19321C106O19302C111O19265C117O19331,,
code-creation,LazyCompile,10,205559,0xb7b084a998e,16,setRelatedTarget deno:ext/web/02_event.js:80:28,0xb7b0817f104,~
code-source-info,0xb7b084a998e,14,1948,2027,C0O1982C2O1988C4O1987C10O2015C15O2026,,
code-creation,LazyCompile,10,205606,0xb7b084a9a3a,10,get cancelBubble deno:ext/web/02_event.js:347:21,0xb7b0817f768,~
code-source-info,0xb7b084a9a3a,14,8449,8500,C0O8460C4O8472C6O8471C9O8494,,
code-creation,LazyCompile,10,205658,0xb7b084a9ac2,16,setCurrentTarget deno:ext/web/02_event.js:53:28,0xb7b0817efcc,~
code-source-info,0xb7b084a9ac2,14,1439,1518,C0O1473C2O1479C4O1478C10O1506C15O1517,,
tick,0x556368e70d51,205700,0,0x0,3,0x55636916ccf0,0xb7b084a98a0,0xb7b084a8bac,0xb7b0847ecd2,0xb7b084a8502
code-creation,LazyCompile,10,205725,0xb7b084a9b56,30,getListeners deno:ext/web/02_event.js:861:24,0xb7b0817fe60,~
code-source-info,0xb7b084a9b56,14,20826,20895,C0O20841C9O20857C11O20856C17O20873C29O20891,,
code-creation,LazyCompile,10,205846,0xb7b084a9c82,330,innerInvokeEventListeners deno:ext/web/02_event.js:689:37,0xb7b0817fc8c,~
code-source-info,0xb7b084a9c
code-creation,LazyCompile,10,205939,0xb7b084a9f3a,15,get currentTarget deno:ext/web/02_event.js:198:22,0xb7b0817f3dc,~
code-source-info,0xb7b084a9f3a,14,4940,4996,C0O4951C4O4963C6O4962C10O4976C14O4990,,
code-creation,LazyCompile,10,205984,0xb7b084a9fca,17, deno:runtime/js/99_main.js:562:39,0xb7b0835928c,~
code-source-info,0xb7b084a9fca,76,20311,20365,C0O20325C7O20332C11O20352C16O20364,,
code-creation,LazyCompile,10,206032,0xb7b084aa056,13,setInPassiveListener deno:ext/web/02_event.js:72:32,0xb7b0817f09c,~
code-source-info,0xb7b084aa056,14,1794,1853,C0O1815C2O1821C7O1841C12O1852,,
code-creation,LazyCompile,10,206075,0xb7b084aa0e2,18,getStopImmediatePropagation deno:ext/web/02_event.js:49:39,0xb7b0817ef98,~
code-source-info,0xb7b084aa0e2,14,1339,1410,C0O1353C7O1374C9O1373C13O1360C17O1406,,
code-creation,LazyCompile,10,206119,0xb7b084aa172,13,setPath deno:ext/web/02_event.js:76:19,0xb7b0817f0d0,~
code-source-info,0xb7b084aa172,14,1873,1919,C0O1894C2O1900C7O1907C12O1918,,
code-creation,LazyCompile,10,206178,0xb7b084aa222,35,set cancelBubble deno:ext/web/02_event.js:351:21,0xb7b0817f7b8,~
code-source-info,0xb7b084aa222,14,8522,8606,C0O8538C4O8543C11O8567C14O8574C19O8585C24O8585C29O8565C34O8605,,
code-creation,LazyCompile,10,206224,0xb7b084aa2d2,13,setStopImmediatePropagation deno:ext/web/02_event.js:91:39,0xb7b0817f16c,~
code-source-info,0xb7b084aa2d2,14,2148,2231,C0O2182C2O2188C7O2219C12O2230,,
code-creation,LazyCompile,10,206265,0xb7b084aa37a,10,get defaultPrevented deno:ext/web/02_event.js:384:25,0xb7b0817f9ac,~
code-source-info,0xb7b084aa37a,14,9241,9285,C0O9252C4O9264C6O9263C9O9279,,
profiler,end
delete,MemoryChunk,0xb7b080c0000
delete,MemoryChunk,0xb7b08140000
delete,MemoryChunk,0xb7b081c0000
delete,MemoryChunk,0xb7b08200000
delete,MemoryChunk,0xb7b08280000
delete,MemoryChunk,0xb7b08340000
delete,MemoryChunk,0xb7b08480000
delete,MemoryChunk,0xb7b08380000
delete,MemoryChunk,0xb7b08300000
delete,MemoryChunk,0xb7b085c0000
delete,MemoryChunk,0xb7b08440000
delete,MemoryChunk,0xb7b08640000
delete,MemoryChunk,0xb7b08600000
delete,MemoryChunk,0xb7b00000000
delete,MemoryChunk,0xb7b00040000
delete,MemoryChunk,0xb7b08100000
delete,MemoryChunk,0xb7b082c0000
delete,LargeObjectChunk,0xb7b08180000
delete,MemoryChunk,0xb7b08180000
delete,LargeObjectChunk,0xb7b08240000
delete,MemoryChunk,0xb7b08240000
delete,MemoryChunk,0xb7b083c0000
delete,MemoryChunk,0xb7b08400000
delete,MemoryChunk,0xb7b08540000
delete,MemoryChunk,0xb7b08580000
delete,MemoryChunk,0xb7b08080000
delete,MemoryChunk,0xb7b08040000
delete,MemoryChunk,0xb7b084c0000
delete,MemoryChunk,0xb7b08500000
delete,MemoryChunk,0xb7b08000000
